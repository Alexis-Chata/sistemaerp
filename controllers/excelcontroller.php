<?php

Class ExcelController extends ApplicationGeneral {

    function __construct() {
        parent::__construct();
        ob_end_clean();
    }

    private function obtenerColumnaExcel($col = array(0 => 65), $num = 0) {
        $col[count($col) - 1] += $num;
        $var = 0;
        for ($x = (count($col) - 1); $x >= 0; $x--) {
            if ($col[$x] > 90) {
                $col[$x] = $col[$x] - 26;
                if ($x > 0) {
                    $col[$x - 1] ++;
                }
                $var++;
            } else {
                break;
            }
        }
        if ($var == count($col)) {
            $col[$var] = 65;
        }
        return $col;
    }

    private function columnaExcel($col = array(0 => 65)) {
        $letra = "";
        for ($x = 0; $x < count($col); $x++) {
            $letra .= chr($col[$x]);
        }
        return $letra;
    }

    public function listadeprecios() {
        set_time_limit(500);
        $idAlmacen = $_REQUEST['idAlmacen'];
        $idLinea = $_REQUEST['idLinea'];
        $idSubLinea = $_REQUEST['idSubLinea'];
        $idProducto = $_REQUEST['idProducto'];
        $moneda = $_REQUEST['idmoneda'];
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'ListaDePrecios.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $titulos = array('SUNAT', 'CODIGO', 'DESCRIPCION', 'STOCK ACTUAL', 'PRECIO', 'U/M', 'EMPAQUE');
        
        $sharedStyleCodigoerror = new PHPExcel_Style();
        $sharedStyleCodigoerror->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID                
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'font' => array(
                'color' => array('argb' => 'FFAA1111')
            ))
        );
        $sharedStyleCodigo = new PHPExcel_Style();
        $sharedStyleCodigo->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID                
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'font' => array(
                'color' => array('argb' => 'FF1111AA')
            ))
        );
        
        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $contador = 0;

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':G' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":G" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":G" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":G" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        if ($moneda == 1) {
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "LISTA GENERAL DE PRECIOS EN SOLES");
            $simboloMoneda = "S/. ";
        } else {
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "LISTA GENERAL DE PRECIOS EN DOLARES");
            $simboloMoneda = "U$. ";
        }
        $reporte = new Reporte();
        $linea = $this->AutoLoadModel('linea');
        $tipoCambio = $this->AutoLoadModel('tipocambio');
        $data = $reporte->reporteListaPrecio($idAlmacen, $idLinea, $idSubLinea, $idProducto);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":G" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":G" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":G" . ($contador))->getFill()->setRotation(1);
        $lineaA = 0;
        $subLineaA = 0;
        $pdf = $this->AutoLoadModel('pdf');

        for ($i = 0; $i < count($data); $i++) {
            if ($lineaA != $data[$i]['idpadre']) {
                $contador = $contador + 2;
                $lineaA = $data[$i]['idpadre'];
                $dataLinea = $linea->buscaLinea($lineaA);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':G' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":G" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "LINEA: " . $dataLinea[0]['nomlin']);
            }
            if ($subLineaA != $data[$i]['idlinea']) {
                $contador ++;
                $subLineaA = $data[$i]['idlinea'];
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':G' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($contador) . ":G" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "SUB LINEA: " . $data[$i]['nomlin']);
                $contador ++;

                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":G" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":G" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $titulos[0])
                        ->setCellValue('B' . ($contador), $titulos[1])
                        ->setCellValue('C' . ($contador), $titulos[2])
                        ->setCellValue('D' . ($contador), $titulos[3])
                        ->setCellValue('E' . ($contador), $titulos[4])
                        ->setCellValue('F' . ($contador), $titulos[5])
                        ->setCellValue('G' . ($contador), $titulos[6]);
                $contador ++;
            }
            $tempCodigosunat = $data[$i]['codigosunat'];
            
            if (strlen($tempCodigosunat) != 8) {
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyleCodigo, "A" . ($contador) . ":A" . ($contador));
                $tempCodigosunat = $pdf->codigoSunatxlinea($data[$i]['idlinea']);
            } else {
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":B" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
            }
            if ($tempCodigosunat == '80141623') {
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyleCodigoerror, "A" . ($contador) . ":A" . ($contador));
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":G" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":G" . ($contador))->getFill()->setRotation(1);
            
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $tempCodigosunat);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('B' . ($contador), $data[$i]['codigopa']);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('C' . ($contador), $data[$i]['nompro']);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('D' . ($contador), $data[$i]['stockactual']);
            if ($moneda == 1) {
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('E' . ($contador), $simboloMoneda . $data[$i]['preciolista']);
            } else {
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('E' . ($contador), $simboloMoneda . $data[$i]['preciolistadolares']);
            }
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('F' . ($contador), $data[$i]['nombremedida']);
            $empaque = empty($data[$i]['idempaque']) ? 'Sin/Emp.' : $data[$i]['codempaque'];
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('G' . ($contador), $empaque);
            $contador ++;
        }

        $objPHPExcel->getActiveSheet()->setTitle('Lista De Precios');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function reporteEstructuradeCostos() {
        set_time_limit(500);
        $mes = $_REQUEST['opcmes'];
        $anho = $_REQUEST['opcanho'];
        $reporte = $this->AutoLoadModel('reporte');
        $tipocambio = $this->AutoLoadModel('tipocambio');
        $Ordencompra = $reporte->reporteestructuracostos($anho, $mes);
        $tot1 = count($Ordencompra);

        switch ($mes) {
            case 1:
                $nombreMes = "ENERO";
                break;
            case 2:
                $nombreMes = "FEBRERO";
                break;
            case 3:
                $nombreMes = "MARZO";
                break;
            case 4:
                $nombreMes = "ABRIL";
                break;
            case 5:
                $nombreMes = "MAYO";
                break;
            case 6:
                $nombreMes = "JUNIO";
                break;
            case 7:
                $nombreMes = "JULIO";
                break;
            case 8:
                $nombreMes = "AGOSTO";
                break;
            case 9:
                $nombreMes = "SEPTIEMBRE";
                break;
            case 10:
                $nombreMes = "OCTUBRE";
                break;
            case 11:
                $nombreMes = "NOVIEMBRE";
                break;
            case 12:
                $nombreMes = "DICIEMBRE";
                break;
        }
        $TOTALcant = 0;
        $TOTALfob = 0;
        $TOTALflete = 0;
        $TOTALseguro = 0;
        $TOTALcif = 0;
        $TOTALaduanas = 0;
        $TOTALalmacen = 0;
        $TOTALtransporte = 0;
        $TOTALgate_in = 0;
        $TOTALvobo = 0;
        $TOTALcadic1 = 0;
        $TOTALcadic2 = 0;
        $TOTALcadic3 = 0;
        $TOTALtotaldolares = 0;
        $PROMEDIOtc = 0;
        $TOTALtotalsoles = 0;
        $TOTALtotalunitario = 0;

        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'EstructuraDeCostos.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $titulos = array('ITEM', 'CODIGO', 'MERCADERIA', 'CANT.', 'FOB', 'FLETE', 'SEGURO', 'CIF', 'AGC.ADUANAS($.)', 'AGC.ALMACEN($.)', 'AGC.TRANSPORTE($.)', 'GATEIN', 'V.B($.)', 'EXTRA 1', 'EXTRA 2', 'EXTRA 3', 'TOTAL $.', 'T/C', 'TOTAL S/.', 'TOTAL UNITARIO S/.');
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('N')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('O')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('P')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('Q')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('R')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('S')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('T')->setAutoSize(true);

        $contador = 0;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':L' . $contador);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":T" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":T" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":T" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "Reporte de Estructura de Costos");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":B" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "MES: ");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('C' . ($contador), $nombreMes);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "D" . ($contador) . ":D" . ($contador));
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('D' . ($contador), "AÑO: ");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('E' . ($contador), $anho);
        $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador))->getFont()->setBold(true);

        $contador = $contador + 3;
        for ($j = 0; $j < $tot1; $j++) {
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":B" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":B" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), 'PERIODO');
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('C' . ($contador), $mes . '-' . $anho);
            $contador++;

            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":B" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":B" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), 'ORDEN DE COMPRA');
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('C' . ($contador), $Ordencompra[$j]['codigooc']);
            $contador++;

            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":B" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":B" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), 'FECHA');
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('C' . ($contador), $Ordencompra[$j]['fordencompra']);
            $contador = $contador + 2;

            $soles = $tipocambio->consultatipocambioXfecha($Ordencompra[$j]['fordencompra']);
            $Detalleordencompra = $reporte->reporteDetalleCompraXMes($Ordencompra[$j]['idordencompra']);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $titulos[0])
                    ->setCellValue('B' . ($contador), $titulos[1])
                    ->setCellValue('C' . ($contador), $titulos[2])
                    ->setCellValue('D' . ($contador), $titulos[3])
                    ->setCellValue('E' . ($contador), $titulos[4])
                    ->setCellValue('F' . ($contador), $titulos[5])
                    ->setCellValue('G' . ($contador), $titulos[6])
                    ->setCellValue('H' . ($contador), $titulos[7])
                    ->setCellValue('I' . ($contador), $titulos[8])
                    ->setCellValue('J' . ($contador), $titulos[9])
                    ->setCellValue('K' . ($contador), $titulos[10])
                    ->setCellValue('L' . ($contador), $titulos[11])
                    ->setCellValue('M' . ($contador), $titulos[12])
                    ->setCellValue('N' . ($contador), $titulos[13])
                    ->setCellValue('O' . ($contador), $titulos[14])
                    ->setCellValue('P' . ($contador), $titulos[15])
                    ->setCellValue('Q' . ($contador), $titulos[16])
                    ->setCellValue('R' . ($contador), $titulos[17])
                    ->setCellValue('S' . ($contador), $titulos[18])
                    ->setCellValue('T' . ($contador), $titulos[19]);

            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":T" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":T" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":T" . ($contador))->getFill()->setRotation(1);
            $contador ++;
            $tot2 = count($Detalleordencompra);
            for ($i = 0; $i < $tot2; $i++) {
                $cantidad = $Detalleordencompra[$i]['cantidadrecibidaoc'];
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), ($i + 1));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('B' . ($contador), $Detalleordencompra[$i]['codigopa']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('C' . ($contador), $Detalleordencompra[$i]['nompro']);

                $fob = $Detalleordencompra[$i]['fobdoc'];
                $fobTotal = $fob * $cantidad;
                $flete = !empty($Detalleordencompra[$i]['fleted']) ? ($Detalleordencompra[$i]['fleted']) : "0.00";
                $seguro = !empty($Detalleordencompra[$i]['seguro']) ? ($Detalleordencompra[$i]['seguro']) : "0.00";
                $ciftotal = $fobTotal + $seguro + $flete;

                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('D' . ($contador), $cantidad);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('E' . ($contador), number_format($fobTotal, 2));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('F' . ($contador), $flete);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('G' . ($contador), $seguro);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('H' . ($contador), $ciftotal);
                $agenteaduanas = !empty($Detalleordencompra[$i]['agenteaduanas']) ? ($Detalleordencompra[$i]['agenteaduanas']) : "0.00";
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('I' . ($contador), $agenteaduanas);
                $flat = !empty($Detalleordencompra[$i]['flat']) ? ($Detalleordencompra[$i]['flat']) : "0.00";
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('J' . ($contador), $flat);

                $transporte = !empty($Detalleordencompra[$i]['fleteInterno']) ? ($Detalleordencompra[$i]['fleteInterno']) : "0.00";
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('K' . ($contador), $transporte);
                $gate_in = !empty($Detalleordencompra[$i]['gate_in']) ? ($Detalleordencompra[$i]['gate_in']) : "0.00";
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('L' . ($contador), $gate_in);
                $VoBo = !empty($Detalleordencompra[$i]['VoBo']) ? ($Detalleordencompra[$i]['VoBo']) : "0.00";
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('M' . ($contador), $VoBo);

                $cadic1 = !empty($Detalleordencompra[$i]['cv1']) ? ($Detalleordencompra[$i]['cv1']) : "0.00";
                $cadic2 = !empty($Detalleordencompra[$i]['cv2']) ? ($Detalleordencompra[$i]['cv2']) : "0.00";
                $cadic3 = !empty($Detalleordencompra[$i]['cv3']) ? ($Detalleordencompra[$i]['cv3']) : "0.00";

                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('N' . ($contador), $cadic1);

                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('O' . ($contador), $cadic2);

                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('P' . ($contador), $cadic3);

                $total = $ciftotal + $agenteaduanas + $flat + $transporte + $gate_in + $VoBo + $cadic1 + $cadic2 + + $cadic3;
                $totalsoles = round(($soles * $total), 2);
                if ($cantidad != 0)
                    $totalunitario = $totalsoles / $cantidad;
                else
                    $totalunitario = 0;

                $totalunitario = round($totalunitario, 2);
                $PROMEDIOtc = $PROMEDIOtc + $soles;

                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('Q' . ($contador), $total);

                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('R' . ($contador), $soles);

                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('S' . ($contador), $totalsoles);

                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('T' . ($contador), $totalunitario);

                $TOTALcant = $cantidad + $TOTALcant;
                $TOTALfob = $fobTotal + $TOTALfob;
                $TOTALflete = $flete + $TOTALflete;
                $TOTALseguro = $seguro + $TOTALseguro;
                $TOTALcif = $ciftotal + $TOTALcif;
                $TOTALaduanas = $agenteaduanas + $TOTALaduanas;
                $TOTALalmacen = $flat + $TOTALalmacen;
                $TOTALtransporte = $transporte + $TOTALtransporte;
                $TOTALgate_in = $gate_in + $TOTALgate_in;
                $TOTALvobo = $VoBo + $TOTALvobo;
                $TOTALcadic1 = $cadic1 + $TOTALcadic1;
                $TOTALcadic2 = $cadic2 + $TOTALcadic2;
                $TOTALcadic3 = $cadic3 + $TOTALcadic3;
                if ($TOTALcadic1 == 0)
                    $TOTALcadic1 = "0.00";
                if ($TOTALcadic2 == 0)
                    $TOTALcadic2 = "0.00";
                if ($TOTALcadic3 == 0)
                    $TOTALcadic3 = "0.00";
                $TOTALtotaldolares = $total + $TOTALtotaldolares;
                $TOTALtotalsoles = $totalsoles + $TOTALtotalsoles;
                $TOTALtotalunitario = $totalunitario + $TOTALtotalunitario;
                $contador ++;
            }

            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":T" . ($contador));

            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':C' . $contador);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "TOTAL: : ");
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('D' . ($contador), $TOTALcant);
            $objPHPExcel->getActiveSheet()->getStyle("D" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('E' . ($contador), $TOTALfob);
            $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('F' . ($contador), $TOTALflete);
            $objPHPExcel->getActiveSheet()->getStyle("F" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('G' . ($contador), $TOTALseguro);
            $objPHPExcel->getActiveSheet()->getStyle("G" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('H' . ($contador), $TOTALcif);
            $objPHPExcel->getActiveSheet()->getStyle("H" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('I' . ($contador), $TOTALaduanas);
            $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('J' . ($contador), $TOTALalmacen);
            $objPHPExcel->getActiveSheet()->getStyle("J" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('K' . ($contador), $TOTALtransporte);
            $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('L' . ($contador), $TOTALgate_in);
            $objPHPExcel->getActiveSheet()->getStyle("L" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('M' . ($contador), $TOTALvobo);
            $objPHPExcel->getActiveSheet()->getStyle("M" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('N' . ($contador), $TOTALcadic1);
            $objPHPExcel->getActiveSheet()->getStyle("N" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('O' . ($contador), $TOTALcadic2);
            $objPHPExcel->getActiveSheet()->getStyle("O" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('P' . ($contador), $TOTALcadic3);
            $objPHPExcel->getActiveSheet()->getStyle("P" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('Q' . ($contador), $TOTALtotaldolares);
            $objPHPExcel->getActiveSheet()->getStyle("Q" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('R' . ($contador), round(($PROMEDIOtc / $tot2), 2));
            $objPHPExcel->getActiveSheet()->getStyle("R" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('S' . ($contador), $TOTALtotalsoles);
            $objPHPExcel->getActiveSheet()->getStyle("S" . ($contador))->getFont()->setBold(true);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('T' . ($contador), $TOTALtotalunitario);
            $objPHPExcel->getActiveSheet()->getStyle("T" . ($contador))->getFont()->setBold(true);

            $TOTALcant = 0;
            $TOTALfob = 0;
            $TOTALflete = 0;
            $TOTALseguro = 0;
            $TOTALcif = 0;
            $TOTALaduanas = 0;
            $TOTALalmacen = 0;
            $TOTALtransporte = 0;
            $TOTALgate_in = 0;
            $TOTALvobo = 0;
            $TOTALcadic1 = 0;
            $TOTALcadic2 = 0;
            $TOTALcadic3 = 0;
            $PROMEDIOtc = 0;
            $TOTALtotaldolares = 0;
            $TOTALtotalsoles = 0;
            $TOTALtotalunitario = 0;

            $contador = $contador + 3;
        }

        $objPHPExcel->getActiveSheet()->setTitle('Estructura_De_Costos');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function reporteCarteraClientes2() {
        $arrayLetrasExcel = array("P", "Q", "R");
        $a = $_REQUEST['txtUltVend'];
        $b = $_REQUEST['txtLinCli'];
        $c = $_REQUEST['txtCondComp'];
        echo "<br><br>Ult Vend: " . ($a ? 'entro' : 'no entro');
        if ($b)
            echo "<br><br>Lin Cli: " . $b;
        else
            echo "<br><br>NO-Lin Cli: " . $b;
        echo "<br><br>Cond Compa: " . $c;
        echo "<hr><hr>";
        $letraExcel = -1;
        for ($i = 0; $i < 3; $i++) {
            echo $arrayLetrasExcel[$i] . "<br>";
        }
        if ($a)
            $letraExcel++;
        if ($b)
            $letraExcel++;
        if ($c)
            $letraExcel++;
        echo "<hr><hr><br>" . $arrayLetrasExcel[$letraExcel];
    }

    public function reporteCarteraClientesResumen() {
        set_time_limit(2000);
        //$linprod = $_REQUEST['lstLineaProductos'];
        $zonasseleccion = $_REQUEST['zonaSelec'];
        $condZona = '';
        if (!empty($zonasseleccion)) {
            $condZona = ' and c.zona IN (' . $zonasseleccion[0];
            $tamZon = count($zonasseleccion);
            for ($i = 1; $i < $tamZon; $i++) {
                $condZona .= ", " . $zonasseleccion[$i];
            }
            $condZona .= ')';
        }

        $cliente = New Cliente();

        $idvend = $_REQUEST['idVendedor'];
        $condicion = $_REQUEST['lstCondicion'];
        $catprin = $_REQUEST['lstCategoriaPrincipal'];
        $regcobr = $_REQUEST['lstRegionCobranza'];
        $zona = $_REQUEST['lstZona'];
        $fecini = $_REQUEST['txtFechaInicio'];
        $fecfin = $_REQUEST['txtFechaFin'];
        $depa = $_REQUEST['lstDepartamento'];
        $prov = $_REQUEST['lstProvincia'];
        $dist = $_REQUEST['lstDistrito'];
        $ordenar = $_REQUEST['lstOrden'];
        $mostrar = $_REQUEST['lstMostrar'];
        $aprobados = $_REQUEST['lstAprobados'];

        $ultimoVendedor = $_REQUEST['txtUltVend'];
        $lineadelliente = $_REQUEST['txtLinCli'];
        $condicioncompra = $_REQUEST['txtCondComp'];
        $verAuditoriaCobranza = $_REQUEST['lstVerAuditoriaCobranza'];
        if ($verAuditoriaCobranza) {
            $condicionCompraOrdenCobranza = 1;
            $calificacionOrdenCobranza = 1;
        }
        $creditos = new Creditos();
        $arrayLetrasExcel = array("H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "AA", "AB");
        $titulosExtras = array();

        $letraExcel = -1;
        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "condicion compra";
        }
        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "calificacion";
        }
        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "deuda contado S/.";
        }
        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "deuda contado $.";
        }
        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "deuda credito S/.";
        }
        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "deuda credito $.";
        }
        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "deuda letrabanco S/.";
        }
        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "deuda letrabanco $.";
        }
        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "deuda letraprotestada S/.";
        }
        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "deuda letraprotestada $.";
        }

        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "lin credito disponible";
        }
        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "Fecha ultima compra";
        }
        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "OV ultima compra";
        }
        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "Monto ultima compra";
        }
        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "fecha ultimo pago";
        }
        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "OV ultimo pago";
        }
        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "importe ultimo pago";
        }
        if ($ultimoVendedor) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "VENDEDOR";
        }
        if ($lineadelliente) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "LINEA";
        }
        if ($condicioncompra) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "CONDICION";
        }
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'Cartera_de_Clientes_Resumen.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $cartcli = new CarteraCliente($idvend, $condicion, $catprin, $regcobr, $zona, $fecini, $fecfin, $depa, $prov, $dist, $ordenar, $aprobados);
        $datos = $cartcli->listarCartera($condZona);
        $cantidadData = count($datos);
        $titulos = array('CLIENTE', 'RUC', 'TELF.', 'DIRECCION', 'EMAIL', 'FECHA GUIA', "DEUDA TOTAL");
        //poniendo stylo al encabezado
        //Lineas para cuadros
        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        //estableciendo a automatico el ancho
        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        //$objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);

        for ($l = 0; $l <= $letraExcel; $l++) {
            $objPHPExcel->getActiveSheet()->getColumnDimension($arrayLetrasExcel[$l])->setAutoSize(true);
        }

        $zona = "";
        $total = 0.0;
        $cant = 0;
        $cont = 1;

        $ultimaCelda = 'G';
        if ($letraExcel > -1)
            $ultimaCelda = $arrayLetrasExcel[$letraExcel];

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("A" . ($cont) . ":" . $ultimaCelda . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont) . ":" . $ultimaCelda . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "REPORTE DE CARTERA DE CLIENTES");

        $cont++;
        if (!empty($idvend)) {
            $cont++;
            $vendedor = new Actor();
            $reg = $vendedor->buscarxid($idvend);

            $objPHPExcel->setActiveSheetIndex(0)->mergeCells("B" . ($cont) . ":C" . ($cont));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "B" . ($cont) . ":C" . ($cont));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":B" . ($cont))->getFont()->setBold(true);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($cont), "VENDEDOR: ")
                    ->setCellValue('B' . ($cont), $reg[0]['nombres'] . " " . $reg[0]['apellidopaterno']);
        }

        $fecha = "";
        if (!empty($fecini)) {
            $fecha .= "GUIAS DESDE " . $fecini;
        } else {
            $fecha .= "TODAS LAS GUIAS";
        }
        $fecha .= " HASTA ";
        if (!empty($fecfin)) {
            $fecha .= $fecfin;
        } else {
            $fecha .= date('Y/m/d');
        }
        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":B" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "FILTRO: ")
                ->setCellValue('B' . ($cont), $fecha);

        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":B" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "FECHA IMPRESION: ")
                ->setCellValue('B' . ($cont), date('Y/m/d'));

        $cond2 = "";
        if ($aprobados == 2)
            $cond2 = " - APROBADOS";
        else if ($aprobados == 3)
            $cond2 = " - PENDIENTES";
        else if ($aprobados == 4)
            $cond2 = " - DESAPROBADOS";

        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":B" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "CONDICION: ")
                ->setCellValue('B' . ($cont), (empty($condicion) ? "TODOS" : ($condicion == 1 ? 'CONTADO' : ($condicion == 2 ? "CREDITO" : ($condicion == 3 ? 'LETRAS BANCO' : 'LETRAS CARTERA')))));

        $calif = array();

        $cont++;
        $linea = new Linea();
        $ordenventa = $this->AutoLoadModel('ordenventa');
        for ($i = 0; $i < $cantidadData; $i++) {
            $historialcredito = $creditos->resumenevaluacioncrediticia($datos[$i]['idcliente']);
            $montoDeuda = $historialcredito[0]['deudatotal'];
            $montoDeudasoles = $historialcredito[0]['deudatotal'];
            if ($montoDeuda == 0) {
                $montoDeuda = 0.00;
                $montoDeudasoles = 0.00;
            }

            $tienedeuda = ($montoDeuda >= 1.0);
            $tienedeuda = ($montoDeudasoles >= 1.0); //$ordenventa->tieneDeuda($datos[$i]['idcliente']);
            if ((empty($mostrar)) || ($mostrar == 'D' && $tienedeuda) || ($mostrar == 'N' && !$tienedeuda)) {
                if ($zona != $datos[$i]['nombrezona']) {
                    if ($i != 0) {
                        $cont++;
                    }
                    $zona = $datos[$i]['nombrezona'];
                    $cont++;
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells("A" . ($cont) . ":" . $ultimaCelda . ($cont));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($cont) . ":" . $ultimaCelda . ($cont));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($cont), "ZONA: " . $datos[$i]['nombrezona']);

                    $cont++;
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($cont) . ":" . $ultimaCelda . ($cont));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":" . $ultimaCelda . ($cont))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":" . $ultimaCelda . ($cont))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($cont), $titulos[0])
                            ->setCellValue('B' . ($cont), $titulos[1])
                            ->setCellValue('C' . ($cont), $titulos[2])
                            ->setCellValue('D' . ($cont), $titulos[3])
                            ->setCellValue('E' . ($cont), $titulos[4])
                            ->setCellValue('F' . ($cont), $titulos[5])
                            ->setCellValue('G' . ($cont), $titulos[6]);
                    for ($l = 0; $l <= $letraExcel; $l++) {
                        $objPHPExcel->setActiveSheetIndex(0)
                                ->setCellValue($arrayLetrasExcel[$l] . ($cont), $titulosExtras[$l]);
                    }
                }
                $cont++;

                $datos[$i]['direccion'] = trim($datos[$i]['direccion'] . ", " . $datos[$i]['dist'] . " - " . $datos[$i]['prov'] . " - " . $datos[$i]['depa']);
                $datos[$i]['direccion'] = iconv(mb_detect_encoding(trim($datos[$i]['direccion'])), "UTF-8", $datos[$i]['direccion']);

                $datos[$i]['cliente'] = trim($datos[$i]['cliente']);
                $datos[$i]['cliente'] = iconv(mb_detect_encoding(trim($datos[$i]['cliente'])), "UTF-8", $datos[$i]['cliente']);

                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($cont) . ":" . $ultimaCelda . ($cont));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($cont), $datos[$i]['cliente'])
                        ->setCellValue('B' . ($cont), $datos[$i]['ruc'])
                        ->setCellValue('C' . ($cont), $datos[$i]['telefono'] . (empty($datos[$i]['telefono']) || empty($datos[$i]['celular']) ? "" : " / ") . $datos[$i]['celular'])
                        ->setCellValue('D' . ($cont), $datos[$i]['direccion'])
                        ->setCellValue('E' . ($cont), $datos[$i]['email'])
                        ->setCellValue('F' . ($cont), $datos[$i]['fordenventa'])
                        ->setCellValue('G' . ($cont), 'S/ ' . number_format($montoDeuda, 2));

                $posLetraExcel = -1;

                /*                 * start peticion angel */
                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $historialcredito[0]['condicioncompra']);
                }
                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $historialcredito[0]['calificacioncompra']);
                }
                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), 'S/.' . $historialcredito[0]['deudacontadosoles']);
                }
                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), '$. ' . $historialcredito[0]['deudacontadodolares']);
                }
                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), 'S/.' . $historialcredito[0]['deudacreditosoles']);
                }
                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), '$. ' . $historialcredito[0]['deudacreditodolares']);
                }
                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), 'S/.' . $historialcredito[0]['deudaletrabancosoles']);
                }
                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), '$. ' . $historialcredito[0]['deudaletrabancodolares']);
                }
                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), 'S/.' . $historialcredito[0]['deudaletraprotestadasoles']);
                }
                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), '$. ' . $historialcredito[0]['deudaletraprotestadadolares']);
                }

                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), 'S/.' . $historialcredito[0]['lineacreditodisponible']);
                }
                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $historialcredito[0]['fechaultimacompra']);
                }
                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $historialcredito[0]['ovultimacompra']);
                }
                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $historialcredito[0]['importeultimacompra']);
                }
                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $historialcredito[0]['fechaultimopago']);
                }
                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $historialcredito[0]['ovultimopago']);
                }
                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $historialcredito[0]['importeultimopago']);
                }

                /*                 * end peticion angel */
                if ($ultimoVendedor) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $ordenventa->ultimoVendedor($datos[$i]['idcliente']));
                }
                if ($lineadelliente) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $ordenventa->lineadeventa($datos[$i]['idcliente']));
                }
                if ($condicioncompra) {
                    $posLetraExcel++;
                    $tempContado = ($datos[$i]['es_contado'] == 1 ? 'CONTADO' : '');
                    $tempCredito = ($datos[$i]['es_credito'] == 1 ? 'CREDITO' : '');
                    $tempLetras = ($datos[$i]['es_letras'] == 1 ? 'LETRAS' : '');

                    $Auxcondiciones = "";
                    if (!empty($tempContado)) {
                        $Auxcondiciones = $tempContado;
                    }
                    if (!empty($tempCredito)) {
                        if (empty($Auxcondiciones))
                            $Auxcondiciones = $tempCredito;
                        else
                            $Auxcondiciones .= "/" . $tempCredito;
                    }
                    if (!empty($tempLetras)) {
                        if (empty($Auxcondiciones))
                            $Auxcondiciones = $tempLetras;
                        else
                            $Auxcondiciones .= "/" . $tempLetras;
                    }

                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $Auxcondiciones);
                }
                $cant++;
            }
        }
        $objPHPExcel->getActiveSheet()->setTitle('Reporte_Cartera_Clientes');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function reporteCarteraClienteFormatoExcel() {
        set_time_limit(2000);
        //$linprod = $_REQUEST['lstLineaProductos'];
        $zonasseleccion = $_REQUEST['zonaSelec'];
        $condZona = '';
        if (!empty($zonasseleccion)) {
            $condZona = ' and c.zona IN (' . $zonasseleccion[0];
            $tamZon = count($zonasseleccion);
            for ($i = 1; $i < $tamZon; $i++) {
                $condZona .= ", " . $zonasseleccion[$i];
            }
            $condZona .= ')';
        }

        $idvend = $_REQUEST['idVendedor'];
        $condicion = $_REQUEST['lstCondicion'];
        $catprin = $_REQUEST['lstCategoriaPrincipal'];
        $regcobr = $_REQUEST['lstRegionCobranza'];
        $zona = $_REQUEST['lstZona'];
        $fecini = $_REQUEST['txtFechaInicio'];
        $fecfin = $_REQUEST['txtFechaFin'];
        $depa = $_REQUEST['lstDepartamento'];
        $prov = $_REQUEST['lstProvincia'];
        $dist = $_REQUEST['lstDistrito'];
        $ordenar = $_REQUEST['lstOrden'];
        $mostrar = $_REQUEST['lstMostrar'];
        $aprobados = $_REQUEST['lstAprobados'];

        $ultimoVendedor = $_REQUEST['txtUltVend'];
        $lineadelliente = $_REQUEST['txtLinCli'];
        $condicioncompra = $_REQUEST['txtCondComp'];
        $verAuditoriaCobranza = $_REQUEST['lstVerAuditoriaCobranza'];

        $arrayLetrasExcel = array("F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "AA", "AB");
        $titulosExtras = array();
        $cartcli = new CarteraCliente($idvend, $condicion, $catprin, $regcobr, $zona, $fecini, $fecfin, $depa, $prov, $dist, $ordenar, $aprobados);
        $letraExcel = -1;
        if ($lineadelliente) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "LINEA";
        }
        if ($verAuditoriaCobranza) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "L/ CREDITO S/";
            $letraExcel++;
            $titulosExtras[$letraExcel] = "L/ UTILIZADA S/";
            $letraExcel++;
            $titulosExtras[$letraExcel] = "L/ DISPONIBLE S/";
        }
        if ($condicioncompra) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "CONDICION";
            $letraExcel++;
            $titulosExtras[$letraExcel] = "OBSERVACION";
            $letraExcel++;
            $titulosExtras[$letraExcel] = "CALIFICACION";
            $arrayCalificacion = $cartcli->getArrayCalificacion();
            $arrayCondicioncompra = $cartcli->getArrayCondicionCompra();
        }
        if ($ultimoVendedor) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "VENDEDOR";
        }

        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'Cartera_de_Clientes_Formato_Excel.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $completo = '';
        if (!empty($mostrar) || $verAuditoriaCobranza) {
            $completo = 1;
        }
        $datos = $cartcli->listarCarteraNuevoFormato($condZona, $completo);
        $cantidadData = count($datos);
        $titulos = array('CLIENTE', 'RUC', 'TELF.', 'DIRECCION', 'EMAIL');
        //poniendo stylo al encabezado
        //Lineas para cuadros
        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        //estableciendo a automatico el ancho
        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        //$objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);

        for ($l = 0; $l <= $letraExcel; $l++) {
            $objPHPExcel->getActiveSheet()->getColumnDimension($arrayLetrasExcel[$l])->setAutoSize(true);
        }

        $zona = "";
        $total = 0.0;
        $cant = 0;
        $cont = 1;

        $ultimaCelda = 'E';
        if ($letraExcel > -1)
            $ultimaCelda = $arrayLetrasExcel[$letraExcel];

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("A" . ($cont) . ":" . $ultimaCelda . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont) . ":" . $ultimaCelda . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "CARTERA DE CLIENTES");

        $cont++;
        if (!empty($idvend)) {
            $cont++;
            $vendedor = new Actor();
            $reg = $vendedor->buscarxid($idvend);

            $objPHPExcel->setActiveSheetIndex(0)->mergeCells("B" . ($cont) . ":C" . ($cont));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "B" . ($cont) . ":C" . ($cont));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":B" . ($cont))->getFont()->setBold(true);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($cont), "VENDEDOR: ")
                    ->setCellValue('B' . ($cont), $reg[0]['nombres'] . " " . $reg[0]['apellidopaterno']);
        }

        $fecha = "";
        if (!empty($fecini)) {
            $fecha .= "GUIAS DESDE " . $fecini;
        } else {
            $fecha .= "TODAS LAS GUIAS";
        }
        $fecha .= " HASTA ";
        if (!empty($fecfin)) {
            $fecha .= $fecfin;
        } else {
            $fecha .= date('Y/m/d');
        }
        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":B" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "FILTRO: ")
                ->setCellValue('B' . ($cont), $fecha);

        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":B" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "FECHA IMPRESION: ")
                ->setCellValue('B' . ($cont), date('Y/m/d'));

        $cond2 = "";
        if ($aprobados == 2)
            $cond2 = " - APROBADOS";
        else if ($aprobados == 3)
            $cond2 = " - PENDIENTES";
        else if ($aprobados == 4)
            $cond2 = " - DESAPROBADOS";

        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":B" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "CONDICION: ")
                ->setCellValue('B' . ($cont), (empty($condicion) ? "TODOS" : ($condicion == 1 ? 'CONTADO' : ($condicion == 2 ? "CREDITO" : ($condicion == 3 ? 'LETRAS BANCO' : 'LETRAS CARTERA')))));

        $calif = array();

        $cont++;
        $linea = new Linea();
        $ordenventa = $this->AutoLoadModel('ordenventa');

        for ($i = 0; $i < $cantidadData; $i++) {
            $mostrar_row = 1;
            if (!(empty($mostrar)) || $verAuditoriaCobranza) {
                $montoDeuda = $datos[$i]['deudatotal'];
                if ($mostrar == 'N' && $datos[$i]['deudatotal'] > 0) {
                    $mostrar_row = 0;
                }
            }
            if ($mostrar_row == 1) {
                //if ((empty($mostrar)) || ($mostrar == 'D' && $tienedeuda) || ($mostrar == 'N' && !$tienedeuda)) {
                if ($zona != $datos[$i]['nombrezona']) {
                    if ($i != 0) {
                        $cont++;
                    }
                    $zona = $datos[$i]['nombrezona'];
                    $cont++;
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells("A" . ($cont) . ":" . $ultimaCelda . ($cont));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($cont) . ":" . $ultimaCelda . ($cont));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($cont), "ZONA: " . $datos[$i]['nombrezona']);

                    $cont++;
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($cont) . ":" . $ultimaCelda . ($cont));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":" . $ultimaCelda . ($cont))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":" . $ultimaCelda . ($cont))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($cont), $titulos[0])
                            ->setCellValue('B' . ($cont), $titulos[1])
                            ->setCellValue('C' . ($cont), $titulos[2])
                            ->setCellValue('D' . ($cont), $titulos[3])
                            ->setCellValue('E' . ($cont), $titulos[4]);
                    for ($l = 0; $l <= $letraExcel; $l++) {
                        $objPHPExcel->setActiveSheetIndex(0)
                                ->setCellValue($arrayLetrasExcel[$l] . ($cont), $titulosExtras[$l]);
                    }
                }
                $datos[$i]['direccion'] = trim($datos[$i]['direccion'] . ", " . $datos[$i]['dist'] . " - " . $datos[$i]['prov'] . " - " . $datos[$i]['depa']);
                $datos[$i]['direccion'] = iconv(mb_detect_encoding(trim($datos[$i]['direccion'])), "UTF-8", $datos[$i]['direccion']);

                $datos[$i]['cliente'] = trim($datos[$i]['cliente']);
                $datos[$i]['cliente'] = iconv(mb_detect_encoding(trim($datos[$i]['cliente'])), "UTF-8", $datos[$i]['cliente']);
                $cont++;
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($cont) . ":" . $ultimaCelda . ($cont));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($cont), $datos[$i]['cliente'])
                        ->setCellValue('B' . ($cont), $datos[$i]['ruc'])
                        ->setCellValue('C' . ($cont), $datos[$i]['telefono'] . (empty($datos[$i]['telefono']) || empty($datos[$i]['celular']) ? "" : " / ") . $datos[$i]['celular'])
                        ->setCellValue('D' . ($cont), $datos[$i]['direccion'])
                        ->setCellValue('E' . ($cont), $datos[$i]['email']);

                $posLetraExcel = -1;

                if ($lineadelliente) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $ordenventa->lineadeventa($datos[$i]['idcliente']));
                }

                if ($verAuditoriaCobranza) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), 'S/.' . $datos[$i]['lineacreditototal']);
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), 'S/. ' . $datos[$i]['deudatotal']);
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), 'S/. ' . $datos[$i]['lineacreditodisponible']);
                }

                if ($condicioncompra) {
                    $dataCC = $cartcli->ultimaCondicionCompraxCliente($datos[$i]['idcliente']);
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $arrayCondicioncompra[$dataCC[0]['idcondicioncompra']]);
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $dataCC[0]['observaciones1']);
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $arrayCalificacion[$dataCC[0]['idcalificacion']]);
                }

                if ($ultimoVendedor) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $ordenventa->ultimoVendedor($datos[$i]['idcliente']));
                }

                $cant++;
            }
        }
        $objPHPExcel->getActiveSheet()->setTitle('Cartera de Clientes');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function reporteCarteraClientes() {
        set_time_limit(2000);
        $zonasseleccion = $_REQUEST['zonaSelec'];
        $condZona = '';
        if (!empty($zonasseleccion)) {
            $condZona = ' and c.zona IN (' . $zonasseleccion[0];
            $tamZon = count($zonasseleccion);
            for ($i = 1; $i < $tamZon; $i++) {
                $condZona .= ", " . $zonasseleccion[$i];
            }
            $condZona .= ')';
        }

        $cliente = New Cliente();
        $idvend = $_REQUEST['idVendedor'];
        $condicion = $_REQUEST['lstCondicion'];
        $catprin = $_REQUEST['lstCategoriaPrincipal'];
        $regcobr = $_REQUEST['lstRegionCobranza'];
        $zona = $_REQUEST['lstZona'];
        $fecini = $_REQUEST['txtFechaInicio'];
        $fecfin = $_REQUEST['txtFechaFin'];
        $depa = $_REQUEST['lstDepartamento'];
        $prov = $_REQUEST['lstProvincia'];
        $dist = $_REQUEST['lstDistrito'];
        $ordenar = $_REQUEST['lstOrden'];
        $mostrar = $_REQUEST['lstMostrar'];
        $aprobados = $_REQUEST['lstAprobados'];
        $ultimoVendedor = $_REQUEST['txtUltVend'];
        $lineadelliente = $_REQUEST['txtLinCli'];
        $condicioncompra = $_REQUEST['txtCondComp'];
        $arrayLetrasExcel = array("P", "Q", "R");
        $titulosExtras = array();

        $letraExcel = -1;
        if ($ultimoVendedor) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "VENDEDOR";
        }
        if ($lineadelliente) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "LINEA";
        }
        if ($condicioncompra) {
            $letraExcel++;
            $titulosExtras[$letraExcel] = "CONDICION";
        }

        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'CarteraClientes.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $cartcli = new CarteraCliente($idvend, $condicion, $catprin, $regcobr, $zona, $fecini, $fecfin, $depa, $prov, $dist, $ordenar, $aprobados);
        $datos = $cartcli->listarCartera($condZona);
        $cantidadData = count($datos);
        $titulos = array('CLIENTE', 'RUC', 'TELF.', 'DIRECCION', 'EMAIL', 'ULT. GUIA', 'FECHA GUIA', 'PROM.COMPRA', "PROM.MORA", "DEUDA", "CALIFICACION", "LINEA CREDITO", "CALIFICACION CREDITO", "OBSERVACION", "LINEA DE CREDITO DISPONIBLE");

        //poniendo stylo al encabezado
        //Lineas para cuadros
        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        //estableciendo a automatico el ancho
        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('N')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('O')->setAutoSize(true);

        for ($l = 0; $l <= $letraExcel; $l++) {
            $objPHPExcel->getActiveSheet()->getColumnDimension($arrayLetrasExcel[$l])->setAutoSize(true);
        }

        $zona = "";
        $total = 0.0;
        $cant = 0;
        $cont = 1;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("A" . ($cont) . ":" . ($letraExcel > -1 ? $arrayLetrasExcel[$letraExcel] : 'O') . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont) . ":" . ($letraExcel > -1 ? $arrayLetrasExcel[$letraExcel] : 'O') . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "REPORTE DE CARTERA DE CLIENTES");

        $cont++;
        if (!empty($idvend)) {
            $cont++;
            $vendedor = new Actor();
            $reg = $vendedor->buscarxid($idvend);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells("B" . ($cont) . ":C" . ($cont));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "B" . ($cont) . ":C" . ($cont));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":B" . ($cont))->getFont()->setBold(true);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($cont), "VENDEDOR: ")
                    ->setCellValue('B' . ($cont), $reg[0]['nombres'] . " " . $reg[0]['apellidopaterno']);
        }

        $fecha = "";
        if (!empty($fecini)) {
            $fecha .= "GUIAS DESDE " . $fecini;
        } else {
            $fecha .= "TODAS LAS GUIAS";
        }
        $fecha .= " HASTA ";
        if (!empty($fecfin)) {
            $fecha .= $fecfin;
        } else {
            $fecha .= date('Y/m/d');
        }

        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":B" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "FILTRO: ")
                ->setCellValue('B' . ($cont), $fecha);

        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":B" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "FECHA IMPRESION: ")
                ->setCellValue('B' . ($cont), date('Y/m/d'));

        $cond2 = "";
        if ($aprobados == 2)
            $cond2 = " - APROBADOS";
        else if ($aprobados == 3)
            $cond2 = " - PENDIENTES";
        else if ($aprobados == 4)
            $cond2 = " - DESAPROBADOS";

        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":B" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "CONDICION: ")
                ->setCellValue('B' . ($cont), (empty($condicion) ? "TODOS" : ($condicion == 1 ? 'CONTADO' : ($condicion == 2 ? "CREDITO" : ($condicion == 3 ? 'LETRAS BANCO' : 'LETRAS CARTERA')))));

        $calif = array();
        $cont++;
        $linea = new Linea();
        $ordenventa = $this->AutoLoadModel('ordenventa');
        for ($i = 0; $i < $cantidadData; $i++) {
           
            $datosOrden = $ordenventa->detalleOrden($datos[$i]['idcliente'], 2);
            $dataPosicionCliente = $cliente->detalleposicion($datos[$i]['idcliente']);
            $tamanio = count($dataPosicionCliente);
            for ($j = 0; $j < $tamanio; $j++) {
                $lineaCredito = $dataPosicionCliente[$j]['lineacredito'];
                $observacionCredito = $dataPosicionCliente[$j]['observacion'];
                switch ($dataPosicionCliente[$j]['calificacion']) {
                    case '1': $formacobro = "Cliente A1";
                        break;
                    case '2': $formacobro = "Buen cliente";
                        break;
                    case '3': $formacobro = "Cliente en Observación";
                        break;
                    case '4': $formacobro = "Cliente moroso";
                        break;
                    case '5': $formacobro = "Cliente incobrable";
                        break;
                }
            }
            $tienedeuda = ($datosOrden['deuda'] >= 1.0); //$ordenventa->tieneDeuda($datos[$i]['idcliente']);
            if ((empty($mostrar)) || ($mostrar == 'D' && $tienedeuda) || ($mostrar == 'N' && !$tienedeuda)) {
                //$datosOrden = $ordenventa->detalleOrden($datos[$i]['idcliente']);
                $tot = 0;
                if ($datosOrden['sumtotal'] < 900) {
                    $tot += 3;
                } elseif ($datosOrden['sumtotal'] >= 900 && $datosOrden['sumtotal'] < 4000) {
                    $tot += 2;
                } else {
                    $tot += 1;
                }

                if ($datosOrden['diasmora'] < 5) {
                    $tot += 1;
                } elseif ($datosOrden['diasmora'] >= 5 && $datosOrden['diasmora'] < 90) {
                    $tot += 2;
                } else {
                    $tot += 3;
                }
                $datosOrden['calif'] = $tot;

                if ($zona != $datos[$i]['nombrezona']) {
                    if ($i != 0) {
                        $cont++;
                    }
                    $zona = $datos[$i]['nombrezona'];
                    $cont++;
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells("A" . ($cont) . ":" . ($letraExcel > -1 ? $arrayLetrasExcel[$letraExcel] : 'O') . ($cont));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($cont) . ":" . ($letraExcel > -1 ? $arrayLetrasExcel[$letraExcel] : 'O') . ($cont));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($cont), "ZONA: " . $datos[$i]['nombrezona']);

                    $cont++;
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($cont) . ":" . ($letraExcel > -1 ? $arrayLetrasExcel[$letraExcel] : 'O') . ($cont));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":" . ($letraExcel > -1 ? $arrayLetrasExcel[$letraExcel] : 'O') . ($cont))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":" . ($letraExcel > -1 ? $arrayLetrasExcel[$letraExcel] : 'O') . ($cont))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($cont), $titulos[0])
                            ->setCellValue('B' . ($cont), $titulos[1])
                            ->setCellValue('C' . ($cont), $titulos[2])
                            ->setCellValue('D' . ($cont), $titulos[3])
                            ->setCellValue('E' . ($cont), $titulos[4])
                            ->setCellValue('F' . ($cont), $titulos[5])
                            ->setCellValue('G' . ($cont), $titulos[6])
                            ->setCellValue('H' . ($cont), $titulos[7])
                            ->setCellValue('I' . ($cont), $titulos[8])
                            ->setCellValue('J' . ($cont), $titulos[9])
                            ->setCellValue('K' . ($cont), $titulos[10])
                            ->setCellValue('L' . ($cont), $titulos[11])
                            ->setCellValue('M' . ($cont), $titulos[12])
                            ->setCellValue('N' . ($cont), $titulos[13])
                            ->setCellValue('O' . ($cont), $titulos[14]);
                    for ($l = 0; $l <= $letraExcel; $l++) {
                        $objPHPExcel->setActiveSheetIndex(0)
                                ->setCellValue($arrayLetrasExcel[$l] . ($cont), $titulosExtras[$l]);
                    }
                }
                $cont++;

                switch ($dataPosicionCliente['calificacion']) {
                    case '1': $formacobro = "Cliente A1";
                        break;
                    case '2': $formacobro = "Buen cliente";
                        break;
                    case '3': $formacobro = "Cliente en Observación";
                        break;
                    case '4': $formacobro = "Cliente moroso";
                        break;
                    case '5': $formacobro = "Cliente incobrable";
                        break;
                }

                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($cont) . ":" . ($letraExcel > -1 ? $arrayLetrasExcel[$letraExcel] : 'O') . ($cont));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($cont), html_entity_decode($datos[$i]['cliente'], ENT_QUOTES, 'UTF-8'))
                        ->setCellValue('B' . ($cont), $datos[$i]['ruc'])
                        ->setCellValue('C' . ($cont), $datos[$i]['telefono'] . (empty($datos[$i]['telefono']) || empty($datos[$i]['celular']) ? "" : " / ") . $datos[$i]['celular'])
                        ->setCellValue('D' . ($cont), utf8_decode(html_entity_decode($datos[$i]['direccion'] . ", " . $datos[$i]['dist'] . " - " . $datos[$i]['prov'] . " - " . $datos[$i]['depa'], ENT_QUOTES, 'UTF-8')))
                        ->setCellValue('E' . ($cont), $datos[$i]['email'])
                        ->setCellValue('F' . ($cont), $datos[$i]['codigov'])
                        ->setCellValue('G' . ($cont), $datos[$i]['fordenventa'])
                        ->setCellValue('H' . ($cont), round($datosOrden['sumtotal'], 2))
                        ->setCellValue('I' . ($cont), round($datosOrden['diasmora']))
                        ->setCellValue('J' . ($cont), round($datosOrden['deuda'], 2))
                        ->setCellValue('K' . ($cont), ($datosOrden['calif'] == 2 || $datosOrden['calif'] == 3 ? 'BUENO' : ($datosOrden['calif'] == 4 ? 'REGULAR' : 'CLASE C')))
                        ->setCellValue('L' . ($cont), $lineaCredito)
                        ->setCellValue('M' . ($cont), $formacobro)
                        ->setCellValue('N' . ($cont), $observacionCredito)
                        ->setCellValue('O' . ($cont), round($lineaCredito - $datosOrden['deuda'], 2));

                $posLetraExcel = -1;
                if ($ultimoVendedor) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $ordenventa->ultimoVendedor($datos[$i]['idcliente']));
                }
                if ($lineadelliente) {
                    $posLetraExcel++;
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $ordenventa->lineadeventa($datos[$i]['idcliente']));
                }
                if ($condicioncompra) {
                    $posLetraExcel++;
                    $tempContado = "";
                    $tempCredito = "";
                    $tempLetras = "";
                    $tempcondiciones = $ordenventa->ultimascondicionesdecompra($datos[$i]['idcliente']);
                    $tam = count($tempcondiciones);
                    for ($con_i = 0; $con_i < $tam; $con_i) {
                        if ($tempcondiciones[$con_i]['es_contado'] == 1) {
                            $tempContado = "CONTADO";
                            $con_i++;
                        }
                        if ($tempcondiciones[$con_i]['es_credito'] == 1) {
                            $tempCredito = "CREDITO";
                            $con_i++;
                        }
                        if ($tempcondiciones[$con_i]['es_letras'] == 1) {
                            $tempLetras = "LETRAS";
                            $con_i++;
                        }
                    }
                    $Auxcondiciones = "";
                    if (!empty($tempContado)) {
                        $Auxcondiciones = $tempContado;
                    }
                    if (!empty($tempCredito)) {
                        if (empty($Auxcondiciones))
                            $Auxcondiciones = $tempCredito;
                        else
                            $Auxcondiciones .= "/" . $tempCredito;
                    }
                    if (!empty($tempLetras)) {
                        if (empty($Auxcondiciones))
                            $Auxcondiciones = $tempLetras;
                        else
                            $Auxcondiciones .= "/" . $tempLetras;
                    }

                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($arrayLetrasExcel[$posLetraExcel] . ($cont), $Auxcondiciones)
                    ;
                }
                $total += $datosOrden['sumtotal'];
                $cant++;
            }
            //}
        }
        if (!empty($idvend)) {
            $cont++;
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('E' . ($cont), "SUMA PROM.:")
                    ->setCellValue('F' . ($cont), round($total / $cant, 2));
            $objPHPExcel->getActiveSheet()->getStyle("E" . ($cont))->getFont()->setBold(true);
        }

        $objPHPExcel->getActiveSheet()->setTitle('Reporte_Cartera_Clientes');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function creaplanillaExcel() {
        $letra = $_REQUEST['letra'];
        $cantidadData = count($datos);
        //Creamos en nombre de archivo
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Ymd');
        $basenombre = 'Planilla.xls';
        $filename = $fechaCreacion . $basenombre;

        //traemos la libreria de Excel e instanciamos
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        //llenamos los datos
        $titulos = array('NOMBRES', 'AP.PATERMO', 'AP.MATERNO', 'T.DOC', 'Nº DE DOCUMENTO', 'LETRA/FACTURA', '(DDMMAA)', 'IMPORTE');

        //poniendo stylo al encabezado
        //Lineas para cuadros
        $sharedStyle1 = new PHPExcel_Style();
        //estableciendo a automatico el ancho
        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);

        $importe = 0;
        $zona = 0;
        $cont = 0;
        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), $titulos[0])
                ->setCellValue('B' . ($cont), $titulos[1])
                ->setCellValue('C' . ($cont), $titulos[2])
                ->setCellValue('D' . ($cont), $titulos[3])
                ->setCellValue('E' . ($cont), $titulos[4])
                ->setCellValue('F' . ($cont), $titulos[5])
                ->setCellValue('G' . ($cont), $titulos[6])
                ->setCellValue('H' . ($cont), $titulos[7]);
        //negrita
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($cont) . ":H" . ($cont));
        $ordencobro = new OrdenCobro();
        foreach ($letra as $datos) {
            $ordencobro->letraEvaluacion($datos['nombreletra'], 1);
            $cont++;
            $tring = "=\"" . $datos['tipodoc'] . "\"";
            $fechavencimieto = "=\"" . $datos['fvencimiento'] . "\"";
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($cont), html_entity_decode($datos['nombrecli'], ENT_QUOTES, 'UTF-8'))
                    ->setCellValue('B' . ($cont), html_entity_decode($datos['apellido1'], ENT_QUOTES, 'UTF-8'))
                    ->setCellValue('C' . ($cont), html_entity_decode($datos['apellido2'], ENT_QUOTES, 'UTF-8'))
                    ->setCellValue('D' . ($cont), $datos['doc'])
                    ->setCellValue('E' . ($cont), $tring)
                    ->setCellValue('F' . ($cont), $datos['nombreletra'])
                    ->setCellValue('G' . ($cont), $fechavencimieto)
                    ->setCellValue('H' . ($cont), $datos['importedoc']);
        }

        $objPHPExcel->getActiveSheet()->setTitle('Reporte_Cartera_Clientes');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function creaplanillaExcel2() {
        $letra = $_REQUEST['letra'];
        $cantidadData = count($datos);
        //Creamos en nombre de archivo
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Ymd');
        $basenombre = 'Planilla2.xls';
        $filename = $fechaCreacion . $basenombre;

        //traemos la libreria de Excel e instanciamos
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        //llenamos los datos
        $titulos = array('RAZÓN SOCIAL', 'RUC', 'MON', 'LETRA/FACTURA', 'F.I. (DD/MM/AAAA)', 'F.V. (DD/MM/AAAA)', 'IMPORTE', 'PLAZA');

        //poniendo stylo al encabezado
        //Lineas para cuadros
        $sharedStyle1 = new PHPExcel_Style();
        //estableciendo a automatico el ancho
        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);

        $objPHPExcel->getActiveSheet()->mergeCells('A1:D1');
        $objPHPExcel->getActiveSheet()->mergeCells('E1:M1');
        $objPHPExcel->getActiveSheet()->mergeCells('N1:P1');
        $objPHPExcel->getActiveSheet()->mergeCells('Q1:V1');
        $objPHPExcel->getActiveSheet()->mergeCells('X1:AC1');
        $objPHPExcel->getActiveSheet()->mergeCells('AD1:AH1');
        $objPHPExcel->getActiveSheet()->mergeCells('AI1:AM1');
        $importe = 0;
        $zona = 0;
        $cont = 0;
        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), $titulos[0])
                ->setCellValue('E' . ($cont), $titulos[1])
                ->setCellValue('N' . ($cont), $titulos[2])
                ->setCellValue('Q' . ($cont), $titulos[3])
                ->setCellValue('W' . ($cont), $titulos[4])
                ->setCellValue('X' . ($cont), $titulos[5])
                ->setCellValue('AD' . ($cont), $titulos[6])
                ->setCellValue('AI' . ($cont), $titulos[7]);
        //negrita
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($cont) . ":H" . ($cont));

        $ordencobro = new OrdenCobro();
        foreach ($letra as $datos) {
            $ordencobro->letraEvaluacion($datos['nombreletra'], 1);


            $cont++;
            $tring = "=\"" . $datos['tipodoc'] . "\"";
            $fechavencimieto = "=\"" . $datos['fvencimiento'] . "\"";

            $objPHPExcel->getActiveSheet()->mergeCells('A' . $cont . ':D' . $cont);
            $objPHPExcel->getActiveSheet()->mergeCells('E' . $cont . ':M' . $cont);
            $objPHPExcel->getActiveSheet()->mergeCells('N' . $cont . ':P' . $cont);
            $objPHPExcel->getActiveSheet()->mergeCells('Q' . $cont . ':V' . $cont);
            $objPHPExcel->getActiveSheet()->mergeCells('X' . $cont . ':AC' . $cont);
            $objPHPExcel->getActiveSheet()->mergeCells('AD' . $cont . ':AH' . $cont);
            $objPHPExcel->getActiveSheet()->mergeCells('AI' . $cont . ':AM' . $cont);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($cont), html_entity_decode($datos['nombres'], ENT_QUOTES, 'UTF-8'))
                    ->setCellValue('E' . ($cont), $datos['ruc'])
                    ->setCellValue('N' . ($cont), $datos['moneda'])
                    ->setCellValue('Q' . ($cont), $datos['nombreletra'])
                    ->setCellValue('W' . ($cont), $datos['diaHoy'])
                    ->setCellValue('X' . ($cont), $datos['fvencimiento'])
                    ->setCellValue('AD' . ($cont), $datos['importedoc'])
                    ->setCellValue('AI' . ($cont), $datos['plaza']);
        }

        $objPHPExcel->getActiveSheet()->setTitle('Reporte_Cartera_Clientes2');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function reportecartera() {
        $this->AutoLoadLib(array('GoogChart', 'GoogChart.class'));
        $chart = new GoogChart();
        $color = array('#95b645', '#7498e9', '#999999',);
        $dataMultiple = array('Año 2009' => array(XBox => 30, PS3 => 20, Wii => 45, Otros => 5,), 'Año 2008' => array(XBox => 40, PS3 => 20, Wii => 30, Otros => 10,),);
        echo '<h2>MERCADO DE VIDEOJUEGOS</h2>';
        $chart->setChartAttrs(array('type' => 'pie', 'title' => 'Ventas: ' . $fecha, 'data' => $dataMultiple, 'size' => array(550, 300), 'color' => $color, 'labelsXY' => true,));
        echo $chart;
    }

    public function seguimientocobranzas() {
        set_time_limit(500);
        $fecini = $_REQUEST['txtFechaInicio'];
        $fecfin = $_REQUEST['txtFechaFinal'];

        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'SeguimientoCobranza.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $cobranza = new Cobranza();
        $datos = $cobranza->listarGuias($fecini, $fecfin);
        $cantidadData = count($datos);
        $titulos = array('NUM. O.V.', 'FECHA', 'CLIENTE', 'RUC', 'N° G/R', 'FACTURA', 'BOLETA', 'IMPORTE', 'COBRO CONTADO', 'PAGADO', 'FECHA', 'ESTADO', 'COBRO CREDITO', 'IMPORTE', 'DIAS', 'F. COBRO', 'COBRO LETRA', 'N° LETRA', 'IMPORTE', 'F. COBRO');

        //poniendo stylo al encabezado
        //Lineas para cuadros
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                'left' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                'top' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $cont = 1;
        $fecha = "Guías";
        if (!empty($fecini)) {
            $fecha .= " desde " . $fecini;
        }
        $fecha .= " hasta ";
        if (!empty($fecfin)) {
            $fecha .= $fecfin;
        } else {
            $fecha .= date('Y-m-d');
        }
        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), $fecha);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->mergeCells('A' . $cont . ':C' . $cont);
        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "FECHA IMPRESION: " . date('Y/m/d H:i:s'));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->mergeCells('A' . $cont . ':C' . $cont);

        $cont++;
        $ultcol = array(0 => 65);
        for ($i = 0; $i < $cantidadData; $i++) {
            $cont++;
            $cont++;
            $cont++;
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($cont), $datos[$i]['codigov'])
                    ->setCellValue('B' . ($cont), $datos[$i]['fordenventa'])
                    ->setCellValue('C' . ($cont), $datos[$i]['razonsocial'])
                    ->setCellValue('D' . ($cont), $datos[$i]['ruc']);

            $documento = $this->AutoLoadModel('documento');
            $filtro = " nombredoc=4 ";
            $datadocumento1 = $documento->buscadocumentoxordenventa($datos[$i]['idordenventa'], $filtro, true);
            if (count($datadocumento1) > 0) {
                $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($cont), str_pad($datadocumento1[0]['serie'], 3, "0", STR_PAD_LEFT) . ' - ' . $datadocumento1[0]['numdoc']);
            }
            $filtro = " nombredoc=1 ";
            $datadocumento2 = $documento->buscadocumentoxordenventa($datos[$i]['idordenventa'], $filtro, true);
            if (count($datadocumento2) > 1) {
                $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($cont), str_pad($datadocumento2[0]['serie'], 3, "0", STR_PAD_LEFT) . ' - ' . $datadocumento2[0]['numdoc']);
            }
            $filtro = " nombredoc=2 ";
            $datadocumento3 = $documento->buscadocumentoxordenventa($datos[$i]['idordenventa'], $filtro, true);
            if (count($datadocumento3) > 1) {
                $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($cont), str_pad($datadocumento3[0]['serie'], 3, "0", STR_PAD_LEFT) . ' - ' . $datadocumento3[0]['numdoc']);
            }
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($cont), (!empty($datadocumento3[0]['montofacturado']) ? $datadocumento3[0]['simbolo'] . number_format($datadocumento3[0]['montofacturado'], 2) : (!empty($datadocumento2[0]['montofacturado']) ? $datadocumento2[0]['simbolo'] . number_format($datadocumento2[0]['montofacturado'], 2) : (!empty($datadocumento1[0]['montofacturado']) ? $datadocumento1[0]['simbolo'] . number_format($datadocumento1[0]['montofacturado'], 2) : $datos[$i]['simbolo'] . number_format($datos[$i]['importeov'], 2)))));
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($cont - 1), $titulos[0])
                    ->setCellValue('B' . ($cont - 1), $titulos[1])
                    ->setCellValue('C' . ($cont - 1), $titulos[2])
                    ->setCellValue('D' . ($cont - 1), $titulos[3])
                    ->setCellValue('E' . ($cont - 1), $titulos[4])
                    ->setCellValue('F' . ($cont - 1), $titulos[5])
                    ->setCellValue('G' . ($cont - 1), $titulos[6])
                    ->setCellValue('H' . ($cont - 1), $titulos[7]);

            $ordencobro = New OrdenCobro();
            $detalleOrdenCobro = New DetalleOrdenCobro();
            $dataOrdenCobro = $ordencobro->listarxguia($datos[$i]['idordenventa']);
            $col = array(0 => 72);
            for ($n = count($dataOrdenCobro) - 1; $n >= 0; $n--) {
                $col = $this->obtenerColumnaExcel($col, 1);
                $dataDetalleOrdenCobro = $detalleOrdenCobro->listadoxidOrdenCobro($dataOrdenCobro[$n]['idordencobro']);
                $tamanio = count($dataDetalleOrdenCobro);
                for ($m = 0; $m < $tamanio; $m++) {
                    if ($dataDetalleOrdenCobro[$m]['formacobro'] == '1') {
                        $col2 = $this->obtenerColumnaExcel($col, 1);
                        $col3 = $this->obtenerColumnaExcel($col2, 1);

                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col) . ($cont - 2), $titulos[8]);
                        $objPHPExcel->getActiveSheet()->mergeCells($this->columnaExcel($col) . ($cont - 2) . ':' . $this->columnaExcel($col3) . ($cont - 2));

                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col) . ($cont - 1), $titulos[9]);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col2) . ($cont - 1), $titulos[10]);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col3) . ($cont - 1), $titulos[11]);

                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col) . ($cont), $datos[$i]['simbolo'] . number_format($dataDetalleOrdenCobro[$m]['importedoc'], 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col2) . ($cont), $dataDetalleOrdenCobro[$m]['fechapago']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col3) . ($cont), (($dataDetalleOrdenCobro[$m]['situacion'] == '') ? 'pendiente ref (' . $dataDetalleOrdenCobro[$m]['referencia'] . ')' : $dataDetalleOrdenCobro[$m]['situacion'] . ' ref (' . $dataDetalleOrdenCobro[$m]['referencia'] . ')'));

                        $col = $this->obtenerColumnaExcel($col3, 1);
                    } else if ($dataDetalleOrdenCobro[$m]['formacobro'] == '2') {
                        $col2 = $this->obtenerColumnaExcel($col, 1);
                        $col3 = $this->obtenerColumnaExcel($col2, 1);
                        $col4 = $this->obtenerColumnaExcel($col3, 1);

                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col) . ($cont - 2), $titulos[12]);
                        $objPHPExcel->getActiveSheet()->mergeCells($this->columnaExcel($col) . ($cont - 2) . ':' . $this->columnaExcel($col4) . ($cont - 2));

                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col) . ($cont - 1), $titulos[13]);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col2) . ($cont - 1), $titulos[14]);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col3) . ($cont - 1), $titulos[15]);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col4) . ($cont - 1), $titulos[11]);

                        $dias = explode('Credito Dias: &lt;/strong&gt;', $datos[$i]['observaciones']);
                        $dias = explode('&lt;', $dias[1]);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col) . ($cont), $datos[$i]['simbolo'] . number_format($dataDetalleOrdenCobro[$m]['importedoc'], 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col2) . ($cont), $dias[0]);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col3) . ($cont), $dataDetalleOrdenCobro[$m]['fechapago']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col4) . ($cont), (($dataDetalleOrdenCobro[$m]['situacion'] == '') ? 'pendiente ref (' . $dataDetalleOrdenCobro[$m]['referencia'] . ')' : $dataDetalleOrdenCobro[$m]['situacion'] . ' ref (' . $dataDetalleOrdenCobro[$m]['referencia'] . ')'));

                        $col = $this->obtenerColumnaExcel($col4, 1);
                    } else {
                        $col2 = $this->obtenerColumnaExcel($col, 1);
                        $col3 = $this->obtenerColumnaExcel($col2, 1);
                        $col4 = $this->obtenerColumnaExcel($col3, 1);

                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col) . ($cont - 2), $titulos[16]);
                        $objPHPExcel->getActiveSheet()->mergeCells($this->columnaExcel($col) . ($cont - 2) . ':' . $this->columnaExcel($col4) . ($cont - 2));

                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col) . ($cont - 1), $titulos[17]);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col2) . ($cont - 1), $titulos[18]);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col3) . ($cont - 1), $titulos[19]);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col4) . ($cont - 1), $titulos[11]);

                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col) . ($cont), $dataDetalleOrdenCobro[$m]['numeroletra']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col2) . ($cont), $datos[$i]['simbolo'] . number_format($dataDetalleOrdenCobro[$m]['importedoc'], 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col3) . ($cont), $dataDetalleOrdenCobro[$m]['fechapago']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($this->columnaExcel($col4) . ($cont), (($dataDetalleOrdenCobro[$m]['situacion'] == '') ? 'pendiente ref (' . $dataDetalleOrdenCobro[$m]['referencia'] . ')' : $dataDetalleOrdenCobro[$m]['situacion'] . ' ref (' . $dataDetalleOrdenCobro[$m]['referencia'] . ')'));

                        $col = $this->obtenerColumnaExcel($col4, 1);
                    }
                }
            }
            $col = $this->obtenerColumnaExcel($col, -1);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($cont - 1) . ":" . $this->columnaExcel($col) . ($cont - 1));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont - 1) . ":" . $this->columnaExcel($col) . ($cont - 1))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont - 1) . ":" . $this->columnaExcel($col) . ($cont - 1))->getFill()->setRotation(1);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "I" . ($cont - 2) . ":" . $this->columnaExcel($col) . ($cont - 2));
            $objPHPExcel->getActiveSheet()->getStyle("I" . ($cont - 2) . ":" . $this->columnaExcel($col) . ($cont - 2))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("I" . ($cont - 2) . ":" . $this->columnaExcel($col) . ($cont - 2))->getFill()->setRotation(1);
            $cont++;
            if (count($ultcol) < count($col)) {
                $ultcol = $col;
            } else if (count($ultcol) == count($col)) {
                for ($x = 0; $x < count($col); $x++) {
                    if ($ultcol[$x] < $col[$x]) {
                        $ultcol = $col;
                    } else if ($ultcol[$x] > $col[$x]) {
                        break;
                    }
                }
            }
        }

        $colx = $this->obtenerColumnaExcel();
        //$ultcol = $this->columnaExcel($ultcol);
        while ($colx <= $ultcol) {
            $objPHPExcel->getActiveSheet()->getColumnDimension($this->columnaExcel($colx))->setAutoSize(true);
            $colx = $this->obtenerColumnaExcel($colx, 1);
        }

        $objPHPExcel->getActiveSheet()->setTitle('Reporte_Cartera_Clientes');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function listagerencial() {
        set_time_limit(500);
        $idAlmacen = $_REQUEST['idAlmacen'];
        $idLinea = $_REQUEST['idLinea'];
        $idSubLinea = $_REQUEST['idSubLinea'];
        $idProducto = $_REQUEST['idProducto'];
        $moneda = $_REQUEST['idmoneda'];

        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'ListaGerencial.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $titulos = array('Codigo', 'Descipcion', 'Fec. Ult. Compra', 'Cant. Comprada', 'Stock', 'FOB', 'CIF', 'P. L.', 'P. Neto', 'Utilidad');

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);

        $contador = 0;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "LISTA GERENCIAL");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "*El precio neto se saca en relación al descuento 13 + 5 + 9.5 + 5 (28.94%)");

        $reporte = new Reporte();
        $linea = $this->AutoLoadModel('linea');
        $tipoCambio = $this->AutoLoadModel('tipocambio');
        $data = $reporte->reporteListaPrecio($idAlmacen, $idLinea, $idSubLinea, $idProducto);

        $contador = $contador + 3;
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $titulos[0])
                ->setCellValue('B' . ($contador), $titulos[1])
                ->setCellValue('C' . ($contador), $titulos[2])
                ->setCellValue('D' . ($contador), $titulos[3])
                ->setCellValue('E' . ($contador), $titulos[4])
                ->setCellValue('F' . ($contador), $titulos[5])
                ->setCellValue('G' . ($contador), $titulos[6])
                ->setCellValue('H' . ($contador), $titulos[7])
                ->setCellValue('I' . ($contador), $titulos[8])
                ->setCellValue('J' . ($contador), $titulos[9]);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);

        $contador ++;
        $lineaA = 0;
        $subLineaA = 0;

        for ($i = 0; $i < count($data); $i++) {
            if ($lineaA != $data[$i]['idpadre']) {
                $contador = $contador + 2;
                $lineaA = $data[$i]['idpadre'];
                $dataLinea = $linea->buscaLinea($lineaA);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":J" . ($contador));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "LINEA : " . $dataLinea[0]['nomlin']);
            }
            if ($subLineaA != $data[$i]['idlinea']) {
                $contador ++;
                $subLineaA = $data[$i]['idlinea'];

                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "SUB_LINEA : " . $data[$i]['nomlin']);
                $contador ++;
            }
            $dataordencompra = $reporte->getUltimaOrdenCompra($data[$i]['idproducto']);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $data[$i]['codigopa']);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('B' . ($contador), $data[$i]['nompro']);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('C' . ($contador), $dataordencompra[0]['fordencompra']);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('D' . ($contador), $dataordencompra[0]['cantidadrecibidaoc']);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('E' . ($contador), $data[$i]['stockactual']);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('F' . ($contador), (empty($data[$i]['fob']) ? '0.00' : $data[$i]['fob']));
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('G' . ($contador), (empty($data[$i]['cifventasdolares']) ? '0.00' : $data[$i]['cifventasdolares']));
            if ($moneda == 1) {
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('H' . ($contador), $data[$i]['preciolista']);
                $precioneto = number_format($data[$i]['preciolista'] - ($data[$i]['preciolista'] * 0.289417), 2);
            } else {
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('H' . ($contador), $data[$i]['preciolistadolares']);
                $precioneto = number_format($data[$i]['preciolistadolares'] - ($data[$i]['preciolistadolares'] * 0.289417), 2);
            }
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('I' . ($contador), $precioneto);
            $cif = (empty($data[$i]['cifventasdolares']) ? '0.00' : $data[$i]['cifventasdolares']);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('J' . ($contador), ($cif == 0.00 ? 'CIF = 0.00' : number_format(((($precioneto - $cif) / $cif) * 100), 2) . ' %'));

            $contador ++;
        }

        $objPHPExcel->getActiveSheet()->setTitle('Lista_De_Precios');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function reporteletrasdetalladas() {
        set_time_limit(1000);
        $reporte = $this->AutoLoadModel('reporte');
        $tipo = $this->AutoLoadModel('tipocobranza');
        $ordenGasto = $this->AutoLoadModel('ordengasto');
        $tipoCobroIni = $this->configIniTodo('TipoCobro');
        $movimiento = $this->AutoLoadModel('movimiento');
        $detalleordencobro = $this->AutoLoadModel('detalleordencobro');
        $detalleordencobroingreso = $this->AutoLoadModel('detalleordencobroingreso');
        $idzona = $_REQUEST['FM-idzona'];
        $idcategoriaprincipal = $_REQUEST['FM-idcategoriaprincipal'];
        $idcategoria = $_REQUEST['FM-idcategoria'];
        $idvendedor = $_REQUEST['FM-idvendedor'];
        $idtipocobranza = $_REQUEST['FM-idtipocobranza'];
        $idtipocobro = $_REQUEST['FM-idtipocobro'];
        $fechaInicio = $_REQUEST['FM-fechaInicio'];
        $fechaFinal = $_REQUEST['FM-fechaFinal'];
        $pendiente = $_REQUEST['FM-pendiente'];
        $cancelado = $_REQUEST['FM-cancelado'];
        $octava = $_REQUEST['FM-octava'];
        $novena = $_REQUEST['FM-novena'];
        $idcobrador = $_REQUEST['FM-idcobrador'];
        $IdCliente = $_REQUEST['FM-IdCliente'];
        $IdOrdenVenta = $_REQUEST['FM-IdOrdenVenta'];
        $vendedor = $_REQUEST['FM-vendedor'];
        $tipocobro = $_REQUEST['FM-tipocobro'];

        $octavaNovena = " ";
        if (!empty($octava) && !empty($novena)) {
            $octavaNovena .= " and (wc_detalleordencobro.`fvencimiento`=DATE_SUB(CURDATE(), INTERVAL 8 DAY) or wc_detalleordencobro.`fvencimiento`=DATE_SUB(CURDATE(), INTERVAL 9 DAY)) and wc_detalleordencobro.`situacion`='' ";
        } elseif (!empty($novena)) {
            $octavaNovena .= " and wc_detalleordencobro.`fvencimiento`=DATE_SUB(CURDATE(), INTERVAL 9 DAY) and wc_detalleordencobro.`situacion`='' ";
        } elseif (!empty($octava)) {
            $octavaNovena .= " and wc_detalleordencobro.`fvencimiento`=DATE_SUB(CURDATE(), INTERVAL 8 DAY) and wc_detalleordencobro.`situacion`='' ";
        }

        $situacion = "";
        if (!empty($pendiente) && !empty($cancelado)) {
            $situacion .= " and (wc_detalleordencobro.`situacion`='' or wc_detalleordencobro.`situacion`='cancelado') ";
        } elseif (!empty($cancelado)) {
            $situacion .= " and wc_detalleordencobro.`situacion`='cancelado' ";
        } elseif (!empty($pendiente)) {
            $situacion .= " and wc_detalleordencobro.`situacion`='' ";
        }
        if ($_REQUEST['fechaInicio'] != "") {
            $fechaInicio = date('Y-m-d', strtotime($_REQUEST['fechaInicio']));
        }
        $fechaFinal = $_REQUEST['fechaFinal'];
        if ($_REQUEST['fechaFinal'] != "") {
            $fechaFinal = date('Y-m-d', strtotime($_REQUEST['fechaFinal']));
        }
        if ($_REQUEST['fechaPagoInicio'] != "") {
            $fechaPagoInicio = date('Y-m-d', strtotime($_REQUEST['fechaPagoInicio']));
        } else {
            $fechaPagoInicio = $_REQUEST['fechaPagoInicio'];
        }
        if ($_REQUEST['fechaPagoFinal'] != "") {
            $fechaPagoFinal = date('Y-m-d', strtotime($_REQUEST['fechaPagoFinal']));
        } else {
            $fechaPagoFinal = $_REQUEST['fechaPagoFinal'];
        }
        $idcategorias = "";
        if (!empty($idcobrador)) {
            $cobrador = $this->AutoLoadModel('cobrador');
            $dataCobrador = $cobrador->buscaZonasxCobrador($idcobrador);
            $cantidadCobrador = count($dataCobrador);
            if ($cantidadCobrador != 0) {
                $idcategorias .= " and (";
                for ($i = 0; $i < $cantidadCobrador; $i++) {
                    if ($i == 0) {
                        $idcategorias .= " wc_categoria.`idcategoria`='" . $dataCobrador[$i]['idzona'] . "' ";
                    } else {
                        $idcategorias .= " or wc_categoria.`idcategoria`='" . $dataCobrador[$i]['idzona'] . "' ";
                    }
                }
                $idcategorias .= " ) ";
            } else {
                $idcategorias .= " and  wc_categoria.`idcategoria`='0' ";
            }
        } elseif (!empty($idcategoria)) {
            $idcategorias = " and wc_categoria.`idcategoria`='" . $idcategoria . "' ";
        }


        if ($idtipocobro == 3) {//letras al banco
            $filtro = "wc_detalleordencobro.`formacobro`='3' and wc_ordencobro.`tipoletra`=1";
        } elseif ($idtipocobro == 4) {
            $filtro = "wc_detalleordencobro.`formacobro`='3' and  wc_ordencobro.`tipoletra`=2";
        } elseif ($idtipocobro == 2) {//credito
            $filtro = "wc_detalleordencobro.`formacobro`='2' and wc_detalleordencobro.referencia=''";
        } elseif ($idtipocobro == 1) {//al contado
            $filtro = "wc_detalleordencobro.`formacobro`='1' ";
        } elseif ($idtipocobro == 5) {//letras protestadas
            $filtro = "wc_detalleordencobro.`formacobro`='2' and (substring( wc_detalleordencobro.referencia,9,1)='p' or substring( wc_detalleordencobro.referencia,11,1)='p')";
            $dias = 10;
        }

        $TOTALIMPORTE2 = 0;

        $totalPagado = 0;
        $totalImporte = 0;
        $importe = 0;
        $totalDevolucion = 0;
        $total = 0;
        $TPagado = 0;
        $cont = 0;
        $fechaActual = date('Y-m-d');
        $datareporte = $reporte->reportletras($filtro, $idzona, $idcategoriaprincipal, $idcategorias, $idvendedor, $idtipocobranza, $fechaInicio, $fechaFinal, $octavaNovena, $situacion, $fechaPagoInicio, $fechaPagoFinal, $IdCliente, $IdOrdenVenta);
//
        //$dataAnterior=$datareporte[-1]['idordenventa'];
        $cantidadreporte = count($datareporte);

        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'LetrasProtestadas.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $titulos = array('Guia', 'Ciudad', 'Cliente', 'Banco', 'Letra', 'Fecha Emision', 'F. Vencimiento', 'Importe', 'Gastos Protestos', 'Importe Total', 'Pagos', 'Saldo', 'Fecha de Pago.');

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':M' . $contador);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":M" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "LETRAS BANCO");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $titulos[0])
                ->setCellValue('B' . ($contador), $titulos[1])
                ->setCellValue('C' . ($contador), $titulos[2])
                ->setCellValue('D' . ($contador), $titulos[3])
                ->setCellValue('E' . ($contador), $titulos[4])
                ->setCellValue('F' . ($contador), $titulos[5])
                ->setCellValue('G' . ($contador), $titulos[6])
                ->setCellValue('H' . ($contador), $titulos[7])
                ->setCellValue('I' . ($contador), $titulos[8])
                ->setCellValue('J' . ($contador), $titulos[9])
                ->setCellValue('K' . ($contador), $titulos[10])
                ->setCellValue('L' . ($contador), $titulos[11])
                ->setCellValue('M' . ($contador), $titulos[12]);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":M" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);

        $contador ++;

        $dataAnterior = $datareporte[-1]['idordenventa'];
        for ($i = 0; $i < $cantidadreporte; $i++) {
            $devolucion = 0;
            if (!empty($dias)) {
                $datareporte[$i]['diffechas'] = $datareporte[$i]['diffechas'] + 10;
            }
            $simbolomoneda = $datareporte[$i]['simbolo'];
            if (strcasecmp($datareporte[$i]['situacion'], '') == 0) {
                $color = "style='color:red;text-align:right;'";
                $total += $datareporte[$i]['saldodoc'];
            } else {
                $color = "style='color:blue;text-align:right;'";
                $totalPagado += $datareporte[$i]['importedoc'] - $datareporte[$i]['saldodoc'];
            }

            if ($datareporte[$i]['referencia']) {
                //$letra=str_replace("P","",$datareporte[$i]['referencia']);
                $letra = substr($datareporte[$i]['referencia'], 0, 8);
                $importeLetra = $detalleordencobro->buscaLetra($letra);
            }
            if (!empty($datareporte[$i]['codigov'])) {
                $codigov = $datareporte[$i]['codigov'];
            }

            $pagosCredito = $detalleordencobroingreso->pagos($datareporte[$i]['iddetalleordencobro']);
            $acumulaxIdMoneda[$simbolomoneda]['acumulaSaldoDoc'] += $datareporte[$i]['saldodoc'];
            $acumulaxIdMoneda[$simbolomoneda]['importedevolucion'] += $devolucion;
            $acumulaxIdMoneda[$simbolomoneda]['pagoscredito'] += $datareporte[$i]['importedoc'] - $datareporte[$i]['saldodoc'];
            $acumulaxIdMoneda[$simbolomoneda]['importedoc'] += $datareporte[$i]['importedoc'];
            $acumulaxIdMoneda[$simbolomoneda]['montoprotesto'] += $datareporte[$i]['montoprotesto'];
            $acumulaxIdMoneda[$simbolomoneda]['importeLetra'] += $importeLetra;
//            $acumulaxIdMoneda[$simbolomoneda]['acumulaSaldoDoc'] += $datareporte[$i]['importedoc'] - $pagosCredito[0]['suma'];
//            $acumulaxIdMoneda[$simbolomoneda]['importedevolucion'] += $devolucion;
//            $acumulaxIdMoneda[$simbolomoneda]['pagoscredito'] += $pagosCredito[0]['suma'];
//            $acumulaxIdMoneda[$simbolomoneda]['importedoc'] += $datareporte[$i]['importedoc'];
//            $acumulaxIdMoneda[$simbolomoneda]['montoprotesto'] += $datareporte[$i]['montoprotesto'];
//            $acumulaxIdMoneda[$simbolomoneda]['importeLetra'] += $importeLetra;
            //$acumulaTotal[$simbolomoneda]['totalDeuda']=$acumulaxIdMoneda[$simbolomoneda]['importedoc']-$acumulaxIdMoneda[$simbolomoneda]['acumulaSaldoDoc'];
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $datareporte[$i]['codigov']);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('B' . ($contador), $datareporte[$i]['nombrezona']);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('C' . ($contador), $datareporte[$i]['razonsocial']);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('D' . ($contador), $datareporte[$i]['numerounico']);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('E' . ($contador), $datareporte[$i]['numeroletra']);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('F' . ($contador), date('d/m/y', strtotime($datareporte[$i]['fechagiro'])));
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('G' . ($contador), date('d/m/y', strtotime($datareporte[$i]['fvencimiento'])));
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('H' . ($contador), $simbolomoneda . " " . number_format($importeLetra, 2));
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('I' . ($contador), $simbolomoneda . " " . $datareporte[$i]['montoprotesto']);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('J' . ($contador), $simbolomoneda . " " . number_format($datareporte[$i]['importedoc'], 2));
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('K' . ($contador), $simbolomoneda . " " . number_format($pagosCredito[0]['suma'], 2));
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('L' . ($contador), $simbolomoneda . " " . number_format($datareporte[$i]['importedoc'] - $pagosCredito[0]['suma'], 2));
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('M' . ($contador), ($datareporte[$i]['fechapago'] != '0000-00-00' ? date('d/m/y', strtotime($datareporte[$i]['fechapago'])) : "0000-00-00"));
            $contador ++;
        }

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "H" . ($contador) . ":L" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("H" . ($contador) . ":L" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("H" . ($contador) . ":L" . ($contador))->getFill()->setRotation(1);

        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('H' . ($contador), "S/." . number_format($acumulaxIdMoneda['S/']['importeLetra'], 2));
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('I' . ($contador), "S/." . number_format($acumulaxIdMoneda['S/']['montoprotesto'], 2));
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('J' . ($contador), "S/. " . number_format($acumulaxIdMoneda['S/']['importedoc'], 2));
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('K' . ($contador), "S/." . number_format($acumulaxIdMoneda['S/']['pagoscredito'], 2));
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('L' . ($contador), "S/. " . number_format($acumulaxIdMoneda['S/']['acumulaSaldoDoc'], 2));

        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "H" . ($contador) . ":L" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("H" . ($contador) . ":L" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("H" . ($contador) . ":L" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('H' . ($contador), "US $" . number_format($acumulaxIdMoneda['US $']['importeLetra'], 2));
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('I' . ($contador), "US $" . number_format($acumulaxIdMoneda['US $']['montoprotesto'], 2));
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('J' . ($contador), "US $ " . number_format($acumulaxIdMoneda['US $']['importedoc'], 2));
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('K' . ($contador), "US $ " . number_format($acumulaxIdMoneda['US $']['pagoscredito'], 2));
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('L' . ($contador), "US $ " . number_format($acumulaxIdMoneda['US $']['acumulaSaldoDoc'], 2));

        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "H" . ($contador) . ":L" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("H" . ($contador) . ":L" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("H" . ($contador) . ":L" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('H' . ($contador), "Total Deuda (S/.): ");
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('I' . ($contador), "S/. " . number_format($acumulaxIdMoneda['S/']['acumulaSaldoDoc'], 2));
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('J' . ($contador), "Total Deuda (US $ ):" . number_format($acumulaxIdMoneda['US $']['importedoc'], 2));
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('K' . ($contador), "US $ " . number_format($acumulaxIdMoneda['US $']['acumulaSaldoDoc'], 2));

        $objPHPExcel->getActiveSheet()->setTitle('Letras Protestadas');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function reporteletras() {
        set_time_limit(1000);
        $reporte = $this->AutoLoadModel('reporte');
        $tipo = $this->AutoLoadModel('tipocobranza');
        $ordenGasto = $this->AutoLoadModel('ordengasto');
        $tipoCobroIni = $this->configIniTodo('TipoCobro');
        $movimiento = $this->AutoLoadModel('movimiento');
        $idzona = $_REQUEST['FM-idzona'];
        $idcategoriaprincipal = $_REQUEST['FM-idcategoriaprincipal'];
        $idcategoria = $_REQUEST['FM-idcategoria'];
        $idvendedor = $_REQUEST['FM-idvendedor'];
        $idtipocobranza = $_REQUEST['FM-idtipocobranza'];
        $idtipocobro = $_REQUEST['FM-idtipocobro'];
        $fechaInicio = $_REQUEST['FM-fechaInicio'];
        $fechaFinal = $_REQUEST['FM-fechaFinal'];
        $pendiente = $_REQUEST['FM-pendiente'];
        $cancelado = $_REQUEST['FM-cancelado'];
        $octava = $_REQUEST['FM-octava'];
        $novena = $_REQUEST['FM-novena'];
        $idcobrador = $_REQUEST['FM-idcobrador'];
        $IdCliente = $_REQUEST['FM-IdCliente'];
        $IdOrdenVenta = $_REQUEST['FM-IdOrdenVenta'];

        $octavaNovena = " ";
        if (!empty($octava) && !empty($novena)) {
            $octavaNovena .= " and (wc_detalleordencobro.`fvencimiento`=DATE_SUB(CURDATE(), INTERVAL 8 DAY) or wc_detalleordencobro.`fvencimiento`=DATE_SUB(CURDATE(), INTERVAL 9 DAY)) and wc_detalleordencobro.`situacion`='' ";
        } elseif (!empty($novena)) {

            $octavaNovena .= " and wc_detalleordencobro.`fvencimiento`=DATE_SUB(CURDATE(), INTERVAL 9 DAY) and wc_detalleordencobro.`situacion`='' ";
        } elseif (!empty($octava)) {
            $octavaNovena .= " and wc_detalleordencobro.`fvencimiento`=DATE_SUB(CURDATE(), INTERVAL 8 DAY) and wc_detalleordencobro.`situacion`='' ";
        }

        $situacion = "";
        if (!empty($pendiente) && !empty($cancelado)) {
            $situacion .= " and (wc_detalleordencobro.`situacion`='' or wc_detalleordencobro.`situacion`='cancelado') ";
        } elseif (!empty($cancelado)) {
            $situacion .= " and wc_detalleordencobro.`situacion`='cancelado' ";
        } elseif (!empty($pendiente)) {
            $situacion .= " and wc_detalleordencobro.`situacion`='' ";
        }
        if ($_REQUEST['fechaInicio'] != "") {
            $fechaInicio = date('Y-m-d', strtotime($_REQUEST['fechaInicio']));
        }
        $fechaFinal = $_REQUEST['fechaFinal'];
        if ($_REQUEST['fechaFinal'] != "") {
            $fechaFinal = date('Y-m-d', strtotime($_REQUEST['fechaFinal']));
        }
        if ($_REQUEST['fechaPagoInicio'] != "") {
            $fechaPagoInicio = date('Y-m-d', strtotime($_REQUEST['fechaPagoInicio']));
        } else {
            $fechaPagoInicio = $_REQUEST['fechaPagoInicio'];
        }
        if ($_REQUEST['fechaPagoFinal'] != "") {
            $fechaPagoFinal = date('Y-m-d', strtotime($_REQUEST['fechaPagoFinal']));
        } else {
            $fechaPagoFinal = $_REQUEST['fechaPagoFinal'];
        }
        $idcategorias = "";
        if (!empty($idcobrador)) {
            $cobrador = $this->AutoLoadModel('cobrador');
            $dataCobrador = $cobrador->buscaZonasxCobrador($idcobrador);
            $cantidadCobrador = count($dataCobrador);
            if ($cantidadCobrador != 0) {
                $idcategorias .= " and (";
                for ($i = 0; $i < $cantidadCobrador; $i++) {
                    if ($i == 0) {
                        $idcategorias .= " wc_categoria.`idcategoria`='" . $dataCobrador[$i]['idzona'] . "' ";
                    } else {
                        $idcategorias .= " or wc_categoria.`idcategoria`='" . $dataCobrador[$i]['idzona'] . "' ";
                    }
                }
                $idcategorias .= " ) ";
            } else {
                $idcategorias .= " and  wc_categoria.`idcategoria`='0' ";
            }
        } elseif (!empty($idcategoria)) {
            $idcategorias = " and wc_categoria.`idcategoria`='" . $idcategoria . "' ";
        }
        if ($idtipocobro == 3) {//letras al banco
            $filtro = "wc_detalleordencobro.`formacobro`='3' and wc_ordencobro.`tipoletra`=1";
        } elseif ($idtipocobro == 4) {
            $filtro = "wc_detalleordencobro.`formacobro`='3' and  wc_ordencobro.`tipoletra`=2";
        } elseif ($idtipocobro == 2) {//credito
            $filtro = "wc_detalleordencobro.`formacobro`='2' and wc_detalleordencobro.referencia=''";
        } elseif ($idtipocobro == 1) {//al contado
            $filtro = "wc_detalleordencobro.`formacobro`='1' ";
        } elseif ($idtipocobro == 5) {//letras protestadas
            $filtro = "wc_detalleordencobro.`formacobro`='2' and (substring( wc_detalleordencobro.referencia,9,1)='p' or substring( wc_detalleordencobro.referencia,11,1)='p')";
            $dias = 10;
        }

        $totalPagado = 0;
        $totalImporte = 0;
        $importe = 0;
        $totalDevolucion = 0;
        $total = 0;
        $TPagado = 0;
        $cont = 0;
        $fechaActual = date('Y-m-d');
        $datareporte = $reporte->reportletras($filtro, $idzona, $idcategoriaprincipal, $idcategorias, $idvendedor, $idtipocobranza, $fechaInicio, $fechaFinal, $octavaNovena, $situacion, $fechaPagoInicio, $fechaPagoFinal, $IdCliente, $IdOrdenVenta);
//
        $dataAnterior = $datareporte[-1]['idordenventa'];

        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'ReporteCobranza.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $titulos = array('Codigo', 'Vendedor', 'Zona Cobranza', 'Zona', 'F. Des.', 'F. venc.', 'Cliente', 'Total', 'Pagado', 'Devol.', 'Deuda', 'Tipo Cobranza', date('d/m'), date('d/m', strtotime("$fechaActual + 1 day")), date('d/m', strtotime("$fechaActual + 2 day")), date('d/m', strtotime("$fechaActual + 3 day")), date('d/m', strtotime("$fechaActual + 4 day")));

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF95DFFD')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFDEDFFF')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFFFFFFF')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('N')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('O')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('P')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('Q')->setAutoSize(true);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':Q' . $contador);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($contador) . ":Q" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "REPORTE DE COBRANZAS");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":Q" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFill()->setRotation(1);

        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $titulos[0])
                ->setCellValue('B' . ($contador), $titulos[1])
                ->setCellValue('C' . ($contador), $titulos[2])
                ->setCellValue('D' . ($contador), $titulos[3])
                ->setCellValue('E' . ($contador), $titulos[4])
                ->setCellValue('F' . ($contador), $titulos[5])
                ->setCellValue('G' . ($contador), $titulos[6])
                ->setCellValue('H' . ($contador), $titulos[7])
                ->setCellValue('I' . ($contador), $titulos[8])
                ->setCellValue('J' . ($contador), $titulos[9])
                ->setCellValue('K' . ($contador), $titulos[10])
                ->setCellValue('L' . ($contador), $titulos[11])
                ->setCellValue('M' . ($contador), $titulos[12])
                ->setCellValue('N' . ($contador), $titulos[13])
                ->setCellValue('O' . ($contador), $titulos[14])
                ->setCellValue('P' . ($contador), $titulos[15])
                ->setCellValue('Q' . ($contador), $titulos[16]);

        $cantidadreporte = count($datareporte);
        $contador++;
        for ($i = 0; $i < $cantidadreporte; $i++) {
            if (!empty($dias)) {
                $datareporte[$i]['diffechas'] = $datareporte[$i]['diffechas'] + 10;
            }
            $simbolomoneda = $datareporte[$i]['simbolo'];
            if (strcasecmp($datareporte[$i]['situacion'], '') == 0) {
                $color = "style='color:red;text-align:right;'";
                $total += $datareporte[$i]['saldodoc'];
            } else {
                $color = "style='color:blue;text-align:right;'";
                $totalPagado += $datareporte[$i]['importedoc'] - $datareporte[$i]['saldodoc'];
            }
            if ($dataAnterior != $datareporte[$i]['idordenventa']) {
                $contador++;
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle4, "A" . ($contador) . ":Q" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFill()->setRotation(1);

                $dataAnterior = $datareporte[$i]['idordenventa'];
                $dataTipoCobranza = $tipo->buscaxid($datareporte[$i]['idtipocobranza']);
                $tipocobranza = !empty($dataTipoCobranza[0]['nombre']) ? $dataTipoCobranza[0]['nombre'] : 'Sin Asignar';
                $importe = $ordenGasto->totalGuia($datareporte[$i]['idordenventa']);
                $percepcion = $ordenGasto->ImporteGastoxIdDetalleOrdenCobro($datareporte[$i]['iddetalleordencobro']);
                $acumulaxIdMoneda[$simbolomoneda]['totalImporte'] += $importe;
                $acumulaxIdMoneda[$simbolomoneda]['TPagado'] += $datareporte[$i]['importepagado'];
                $acumulaxIdMoneda[$simbolomoneda]['totalDevolucion'] += $datareporte[$i]['importedevolucion'];
                $acumulaxIdMoneda[$simbolomoneda]['totalDeuda'] = $acumulaxIdMoneda[$simbolomoneda]['totalImporte'] - $acumulaxIdMoneda[$simbolomoneda]['TPagado']; /*
                  $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":Q" . ($contador));
                  $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFont()->setBold(true);
                  $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFill()->setRotation(1);
                 */
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $datareporte[$i]['codigov'])
                        ->setCellValue('B' . ($contador), substr($datareporte[$i]['codigoa'] . ' ' . $datareporte[$i]['apellidopaterno'] . ' ' . $datareporte[$i]['apellidomaterno'] . ' ' . $datareporte[$i]['nombres'], 0, 20))
                        ->setCellValue('C' . ($contador), $datareporte[$i]['nombrec'])
                        ->setCellValue('D' . ($contador), $datareporte[$i]['nombrezona'])
                        ->setCellValue('E' . ($contador), date('d/m/y', strtotime($datareporte[$i]['fechadespacho'])))
                        ->setCellValue('F' . ($contador), date('d/m/y', strtotime($datareporte[$i]['fechavencimiento'])))
                        ->setCellValue('G' . ($contador), $datareporte[$i]['razonsocial'])
                        ->setCellValue('H' . ($contador), $simbolomoneda . " " . number_format($importe, 2))
                        ->setCellValue('I' . ($contador), $simbolomoneda . " " . number_format($datareporte[$i]['importepagado'], 2))
                        ->setCellValue('J' . ($contador), $simbolomoneda . " " . number_format($datareporte[$i]['importedevolucion'], 2))
                        ->setCellValue('K' . ($contador), $simbolomoneda . " " . number_format($importe - $datareporte[$i]['importepagado'] - $datareporte[$i]['importedevolucion'], 2))
                        ->setCellValue('L' . ($contador), $tipocobranza)
                        ->setCellValue('M' . ($contador), '')
                        ->setCellValue('N' . ($contador), '')
                        ->setCellValue('O' . ($contador), '')
                        ->setCellValue('P' . ($contador), '')
                        ->setCellValue('Q' . ($contador), '');

                $contador++;
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($contador) . ":Q" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':D' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Direccion");


                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('E' . ($contador), "Estado")
                        ->setCellValue('F' . ($contador), "Cond. Venta")
                        ->setCellValue('G' . ($contador), "N° Letra")
                        ->setCellValue('H' . ($contador), "F. Giro")
                        ->setCellValue('I' . ($contador), "F. Ven.")
                        ->setCellValue('J' . ($contador), "F. Can.")
                        ->setCellValue('K' . ($contador), "N° Unico")
                        ->setCellValue('L' . ($contador), "Indicador")
                        ->setCellValue('M' . ($contador), "Importe")
                        ->setCellValue('N' . ($contador), "Percepcion")
                        ->setCellValue('O' . ($contador), "Saldo")
                        ->setCellValue('P' . ($contador), "Situacion")
                        ->setCellValue('Q' . ($contador), "Referencia ");

                $contador++;
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "A" . ($contador) . ":Q" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFill()->setRotation(1);
            if ($cont == 0) {
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':D' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $datareporte[$i]['direccion']);
                $cont++;
            } else {
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':D' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "");
            }

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('E' . ($contador), ($dias == 10 ? 'PROTESTO - ' : "") . ($datareporte[$i]['idtipocobranza'] == 4 ? 'INCOBRABLES' : strtoupper($tipo->NombreTipoCobranzaxDiasVencidos($datareporte[$i]['diffechas']))))
                    ->setCellValue('F' . ($contador), $tipoCobroIni[$datareporte[$i]['formacobro']])
                    ->setCellValue('G' . ($contador), ($datareporte[$i]['numeroletra']))
                    ->setCellValue('H' . ($contador), date('d/m/y', strtotime($datareporte[$i]['fechagiro'])))
                    ->setCellValue('I' . ($contador), date('d/m/y', strtotime($datareporte[$i]['fvencimiento'])))
                    ->setCellValue('J' . ($contador), $this->FechaFormatoCorto($datareporte[$i]['fechapago']))
                    ->setCellValue('K' . ($contador), $datareporte[$i]['numerounico'])
                    ->setCellValue('L' . ($contador), $datareporte[$i]['recepcionletras'])
                    ->setCellValue('M' . ($contador), $simbolomoneda . " " . number_format($datareporte[$i]['importedoc'], 2))
                    ->setCellValue('N' . ($contador), (!empty($percepcion) ? ($simbolomoneda . " " . number_format($percepcion, 2)) : ''))
                    ->setCellValue('O' . ($contador), $simbolomoneda . " " . number_format($datareporte[$i]['saldodoc'], 2))
                    ->setCellValue('P' . ($contador), ($datareporte[$i]['situacion'] == '' ? 'Pendiente' : $datareporte[$i]['situacion']))
                    ->setCellValue('Q' . ($contador), strtoupper($datareporte[$i]['proviene'] . " " . substr($datareporte[$i]['referencia'], 0, 11)));
            $contador++;
        }
        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":Q" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFill()->setRotation(1);

        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('E' . ($contador), "TOTAL (S/.): ")
                ->setCellValue('F' . ($contador), "S/. " . number_format($acumulaxIdMoneda['S/']['totalImporte'], 2))
                ->setCellValue('G' . ($contador), "Total Pagado (S/.): ")
                ->setCellValue('H' . ($contador), "S/. " . number_format($acumulaxIdMoneda['S/']['TPagado'], 2))
                ->setCellValue('I' . ($contador), "Total Devolucion (S/.): ")
                ->setCellValue('J' . ($contador), "S/. " . number_format($acumulaxIdMoneda['S/']['totalDevolucion'], 2))
                ->setCellValue('K' . ($contador), "Total Deuda (S/.): ")
                ->setCellValue('L' . ($contador), "S/. " . number_format($acumulaxIdMoneda['S/']['totalDeuda'], 2));

        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":Q" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFill()->setRotation(1);

        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('E' . ($contador), "TOTAL (US $.): ")
                ->setCellValue('F' . ($contador), "US $. " . number_format($acumulaxIdMoneda['US $']['totalImporte'], 2))
                ->setCellValue('G' . ($contador), "Total Pagado (US $.): ")
                ->setCellValue('H' . ($contador), "US $ " . number_format($acumulaxIdMoneda['US $']['TPagado'], 2))
                ->setCellValue('I' . ($contador), "Total Devolucion (US $.): ")
                ->setCellValue('J' . ($contador), "US $ " . number_format($acumulaxIdMoneda['US $']['totalDevolucion'], 2))
                ->setCellValue('K' . ($contador), "Total Deuda (US $.): ")
                ->setCellValue('L' . ($contador), "US $ " . number_format($acumulaxIdMoneda['US $']['totalDeuda'], 2));

        $objPHPExcel->getActiveSheet()->setTitle('Reporte_de_Cobranza');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    function costodeproductos() {
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'COSTODEPRODUCTOS.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $titulos = array('ITEM', 'CODIGO', 'DESCRIPCION', 'PRECIO UNITARIO (U4.)');

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);

        $contador = 1;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':D' . $contador);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":D" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":D" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":D" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "COSTO DE PRODUCTOS");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $contador++;

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":A" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":B" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "FECHA: : ");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('B' . ($contador), date("Y-m-d"));

        $contador = $contador + 3;
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $titulos[0])
                ->setCellValue('B' . ($contador), $titulos[1])
                ->setCellValue('C' . ($contador), $titulos[2])
                ->setCellValue('D' . ($contador), $titulos[3]);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":D" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":D" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":D" . ($contador))->getFill()->setRotation(1);

        $contador ++;
        $ordencompra = new Ordencompra();
        $datos = $ordencompra->reporteCostodeProducto();
        $tam = count($datos);
        $idproducto = 0;
        $cant = 1;
        for ($i = 0; $i < $tam; $i++) {
            if ($idproducto != $datos[$i]['idproducto']) {
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $cant);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('B' . ($contador), $datos[$i]['codigopa']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('C' . ($contador), $datos[$i]['nompro']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('D' . ($contador), "U$. " . number_format($datos[$i]['totalunitario'], 2));
                $cant ++;
                $idproducto = $datos[$i]['idproducto'];
                $contador ++;
            }
        }
        $objPHPExcel->getActiveSheet()->setTitle('Costo_de_Productos');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function reporteOrdenCompra() {
        set_time_limit(500);
        $idOrdenCompra = $_REQUEST['idOrdenCompra'];
        $idProducto = $_REQUEST['idProducto'];

        $reporte = new Reporte();
        $data = $reporte->reporteOrdenCompraRevision($idOrdenCompra, $idProducto);
        if (strlen($idOrdenCompra) > 0) {
            $codigoocX = $data[0]['codigooc'];
        } else {
            $codigoocX = "";
        }

        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reporteOordenCompra.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $titulos = array('Codigo', 'Descipcion', 'FOB($)', 'CIF($)', 'P.L.($)', 'S.A', 'S.D', 'Compra', 'U.M');

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('rgb' => 'FFFFFFFF')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);

        $contador = 0;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':I' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":I" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "REPORTE ORDEN COMPRA # " . $codigoocX);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $contador = $contador + 3;
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $titulos[0])
                ->setCellValue('B' . ($contador), $titulos[1])
                ->setCellValue('C' . ($contador), $titulos[2])
                ->setCellValue('D' . ($contador), $titulos[3])
                ->setCellValue('E' . ($contador), $titulos[4])
                ->setCellValue('F' . ($contador), $titulos[5])
                ->setCellValue('G' . ($contador), $titulos[6])
                ->setCellValue('H' . ($contador), $titulos[7])
                ->setCellValue('I' . ($contador), $titulos[8]);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":I" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFill()->setRotation(1);
        $contador ++;

        for ($i = 0; $i < count($data); $i++) {
            if ($data[$i]['preciolistadolares'] > 0) {
                $preciolistadolares = $data[$i]['preciolistadolares'];
            } else {
                $preciolistadolares = $data[$i]['preciolista'] * $data[$i]['valortipocambio'];
            }
            $importe += $preciolistadolares * $data[$i]['cantidadrecibidaoc'];
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), html_entity_decode($data[$i]['codigopa'], ENT_QUOTES, 'UTF-8'));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), html_entity_decode($data[$i]['nompro'], ENT_QUOTES, 'UTF-8'));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), number_format($data[$i]['fobdoc'], 2));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), number_format($data[$i]['cifventasdolares'], 2));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), number_format($preciolistadolares, 2));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), round($data[$i]['stockactual']));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), $data[$i]['stockdisponible']);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), $data[$i]['cantidadrecibidaoc']);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), html_entity_decode($data[$i]['codigo'], ENT_QUOTES, 'UTF-8'));
            $contador ++;
        }

        $contador++;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':I' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":I" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), 'TOTAL $.  ' . number_format($importe, 2));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':I' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":I" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "F. Ingreso : " . $data[0]['fordencompra'] . " - F. A .LLegada: " . $data[0]['faproxllegada']);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $objPHPExcel->getActiveSheet()->setTitle('Orden Comnpra');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    function durezaproductoseleccionado() {
        $selecccionados = $_REQUEST['pseleccionPDF'];
        $fecha = date('Y-m-d');
        $producto = new Producto();
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'DUREZAPRODUCTOS_SELECCIONADOS.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $titulos = array('CODIGO', 'PRODUCTO', 'LINEA', 'SUB-LINEA', 'U.M.', 'F. LLEGADA', 'S. INICIAL', 'S. DISPONIBLE', 'PVM', 'DUREZA (MESES)');

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $contador = 1;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "DUREZA DE PRODUCTOS");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $contador++;

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":A" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":B" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "ALMACEN: ");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('B' . ($contador), "CORPORACION POWER ACOUSTIK S.A.C.");
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "C" . ($contador) . ":C" . ($contador));
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('C' . ($contador), "FECHA: ");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('D' . ($contador), $fecha);
        $contador = $contador + 3;

        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $titulos[0])
                ->setCellValue('B' . ($contador), $titulos[1])
                ->setCellValue('C' . ($contador), $titulos[2])
                ->setCellValue('D' . ($contador), $titulos[3])
                ->setCellValue('E' . ($contador), $titulos[4])
                ->setCellValue('F' . ($contador), $titulos[5])
                ->setCellValue('G' . ($contador), $titulos[6])
                ->setCellValue('H' . ($contador), $titulos[7])
                ->setCellValue('I' . ($contador), $titulos[8])
                ->setCellValue('J' . ($contador), $titulos[9]);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
        $contador ++;

        $tam = count($selecccionados);
        for ($i = 0; $i < $tam; $i++) {
            $data2 = $producto->durezaProducto($selecccionados[$i], 1);
            if (!empty($data2[0]['codigopa'])) {
                $datetime1 = new DateTime($fecha);
                $datetime2 = new DateTime($data2[0]['fecha']);
                $interval = $datetime1->diff($datetime2);

                if ($data2[0]['stockactual'] > 0) {
                    $PVM = ($data2[0]['stockinicial'] - $data2[0]['stockactual']) / (($interval->y * 12 ) + ($interval->m * 30) + $interval->d);
                    $PVM = $PVM * 30;
                    if ($PVM == 0)
                        $PVM = 1;
                    $dureza = $data2[0]['stockactual'] / $PVM;
                } else {
                    $PVM = 0;
                    $dureza = 0;
                }
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $data2[0]['codigopa']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('B' . ($contador), $data2[0]['nompro']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('C' . ($contador), $data2[0]['linea']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('D' . ($contador), $data2[0]['sublinea']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('E' . ($contador), $data2[0]['nommedida']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('F' . ($contador), $data2[0]['fecha']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('G' . ($contador), $data2[0]['stockinicial']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('H' . ($contador), $data2[0]['stockactual']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('I' . ($contador), number_format($PVM, 2));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('J' . ($contador), number_format($dureza, 2));
            } else {
                $data2 = $producto->durezaProducto($selecccionados[$i], 2);
                if (!empty($data2[0]['codigopa']) && !empty($data2[0]['cif'])) {
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), $data2[0]['codigopa']);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('B' . ($contador), $data2[0]['nompro']);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('C' . ($contador), $data2[0]['linea']);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('D' . ($contador), $data2[0]['sublinea']);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('E' . ($contador), $data2[0]['nommedida']);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('F' . ($contador), "---");
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('G' . ($contador), "---");
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('H' . ($contador), $data2[0]['stockactual']);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('I' . ($contador), '---');
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('J' . ($contador), 'CIF: ' . $data2[0]['cif']);
                }
            }
            $contador ++;
        }

        $objPHPExcel->getActiveSheet()->setTitle('Dureza_de_Productos');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function reporteventas() {
        set_time_limit(3000);
        set_time_limit(1000);
        $fecha = date('Y-m-d');
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'REPORTE_VENTAS.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $titulos = array('NOMBRE VENDEDOR', 'FECHA GUIADO', 'FECHA DESPACHO', 'FECHA CANCELADO', 'ORDEN VENTA', 'NOMBRE CLIENTE', 'ESTADO', 'CONDICION VENTA', 'DETALLE', 'SITUACION', 'SIMBOLO', 'IMPORTE APROBADO', 'SIMBOLO', 'IMPORTE DESPACHADO', 'SIMBOLO', 'DEUDA', 'ZONA', 'DIRECCION', 'DIRECCION DESPACHO');

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('N')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('O')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('P')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('Q')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('R')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('S')->setAutoSize(true);

        $contador = 1;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':S' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":S" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":S" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":S" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "REPORTE DE VENTAS");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $contador = $contador + 3;
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $titulos[0])
                ->setCellValue('B' . ($contador), $titulos[1])
                ->setCellValue('C' . ($contador), $titulos[2])
                ->setCellValue('D' . ($contador), $titulos[3])
                ->setCellValue('E' . ($contador), $titulos[4])
                ->setCellValue('F' . ($contador), $titulos[5])
                ->setCellValue('G' . ($contador), $titulos[6])
                ->setCellValue('H' . ($contador), $titulos[7])
                ->setCellValue('I' . ($contador), $titulos[8])
                ->setCellValue('J' . ($contador), $titulos[9])
                ->setCellValue('K' . ($contador), $titulos[10])
                ->setCellValue('L' . ($contador), $titulos[11])
                ->setCellValue('M' . ($contador), $titulos[12])
                ->setCellValue('N' . ($contador), $titulos[13])
                ->setCellValue('O' . ($contador), $titulos[14])
                ->setCellValue('p' . ($contador), $titulos[15])
                ->setCellValue('q' . ($contador), $titulos[16])
                ->setCellValue('r' . ($contador), $titulos[17])
                ->setCellValue('s' . ($contador), $titulos[18]);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":S" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":S" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":S" . ($contador))->getFill()->setRotation(1);
        $contador ++;

        if (!empty($_REQUEST['txtFechaAprobadoInicio'])) {
            $txtFechaAprobadoInicio = date('Y-m-d', strtotime($_REQUEST['txtFechaAprobadoInicio']));
        }
        if (!empty($_REQUEST['txtFechaAprobadoFinal'])) {
            $txtFechaAprobadoFinal = date('Y-m-d', strtotime($_REQUEST['txtFechaAprobadoFinal']));
        }
        if (!empty($_REQUEST['txtFechaGuiadoInicio'])) {
            $txtFechaGuiadoInicio = date('Y-m-d', strtotime($_REQUEST['txtFechaGuiadoInicio']));
        }
        if (!empty($_REQUEST['txtFechaGuiadoFin'])) {
            $txtFechaGuiadoFin = date('Y-m-d', strtotime($_REQUEST['txtFechaGuiadoFin']));
        }
        if (!empty($_REQUEST['txtFechaDespachoInicio'])) {
            $txtFechaDespachoInicio = date('Y-m-d', strtotime($_REQUEST['txtFechaDespachoInicio']));
        }
        if (!empty($_REQUEST['txtFechaDespachoFin'])) {
            $txtFechaDespachoFin = date('Y-m-d', strtotime($_REQUEST['txtFechaDespachoFin']));
        }
        if (!empty($_REQUEST['txtFechaCanceladoInicio'])) {
            $txtFechaCanceladoInicio = date('Y-m-d', strtotime($_REQUEST['txtFechaCanceladoInicio']));
        }
        if (!empty($_REQUEST['txtFechaCanceladoFin'])) {
            $txtFechaCanceladoFin = date('Y-m-d', strtotime($_REQUEST['txtFechaCanceladoFin']));
        }

        $idOrdenVenta = $_REQUEST['idOrdenVenta'];
        $idCliente = $_REQUEST['idCliente'];
        $idVendedor = $_REQUEST['idVendedor'];
        $idpadre = $_REQUEST['idpadre'];
        $idcategoria = $_REQUEST['idcategoria'];
        $idzona = $_REQUEST['idzona'];
        $condicion = $_REQUEST['condicion'];
        $aprobados = $_REQUEST['aprobados'];
        $desaprobados = $_REQUEST['desaprobados'];
        $pendiente = $_REQUEST['pendiente'];
        $idmoneda = $_REQUEST['idmoneda'];
        $condVenta = $_REQUEST['condVenta'];
        $filtrocliente = $_REQUEST['filtrocliente'];

        $condicionVenta = "";
        if ($condicion == 1) {
            $condicionVenta = " and ov.es_contado='1' and ov.es_credito!='1' and ov.es_letras!='1' ";
        } elseif ($condicion == 2) {
            $condicionVenta = " and ov.es_credito='1' and ov.es_letras!='1' ";
        } elseif ($condicion == 3) {
            $condicionVenta = "  and ov.es_letras='1' and  ov.tipo_letra=1";
        } elseif ($condicion == 4) {
            $condicionVenta = "  and ov.es_letras='1' and ov.tipo_letra=2";
        }

        $reporte = $this->AutoLoadModel('reporte');
        $dataIdVendedor = $reporte->reporteVendedores($idVendedor, $txtFechaGuiadoInicio, $txtFechaGuiadoFin);
        $cantidadVendedor = count($dataIdVendedor);

        $generalAprobado = 0; //DOLARES
        $generalDespachado = 0; //DOLARES
        $generalAprobadoSol = 0;
        $generalDespachadoSol = 0;
        for ($x = 0; $x < $cantidadVendedor; $x++) {
            $totalAprobado = 0; //DOLARES
            $totalDespachado = 0; //DOLARES
            $totalAprobadoSol = 0;
            $totalDespachadoSol = 0;
            $totalDeuda = 0; //DOLARES
            $totalDeudaSol = 0;
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':R' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":S" . ($contador));
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $dataIdVendedor[$x]['nombres'] . " " . $dataIdVendedor[$x]['apellidopaterno'] . " " . $dataIdVendedor[$x]['apellidomaterno']);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":S" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":S" . ($contador))->getFill()->setRotation(1);
            $dataReporte = $reporte->reporteVentas($txtFechaAprobadoInicio, $txtFechaAprobadoFinal, $txtFechaGuiadoInicio, $txtFechaGuiadoFin, $txtFechaDespachoInicio, $txtFechaDespachoFin, $txtFechaCanceladoInicio, $txtFechaCanceladoFin, $idOrdenVenta, $idCliente, $dataIdVendedor[$x]['idactor'], $idpadre, $idcategoria, $idzona, $condicionVenta, $aprobados, $desaprobados, $pendiente, $idmoneda, $condVenta, $filtrocliente);
            $cantidad = count($dataReporte);

            $contador++;
            $sumaDeuda = 0;
            for ($i = 0; $i < $cantidad; $i++) {

                $cobroTotal = $reporte->cobroTotal($dataReporte[$i]['idordenventa']);
                $deuda = $cobroTotal[0]['cobrototal'] - $dataReporte[$i]['importepagado'];
                $sumaDeuda += $deuda;

                $situtacion = "";
                if ($dataReporte[$i]['es_contado'] == 1 && $dataReporte[$i]['es_credito'] != 1 && $dataReporte[$i]['es_letras'] != 1) {
                    $situtacion = "Contado";
                } elseif ($dataReporte[$i]['es_credito'] == 1 && $dataReporte[$i]['es_letras'] != 1) {
                    $situtacion = "Credito";
                } elseif ($dataReporte[$i]['es_letras'] == 1 && $dataReporte[$i]['tipo_letra'] == 1) {
                    $situtacion = "Letra Banco";
                } elseif ($dataReporte[$i]['es_letras'] == 1 && $dataReporte[$i]['tipo_letra'] == 2) {
                    $situtacion = "Letra Cartera";
                }
                $estado = "Pendiente";
                if ($dataReporte[$i]['desaprobado'] == 1) {
                    $estado = "Desaprobado";
                } elseif ($dataReporte[$i]['vbcreditos'] == 1) {
                    $estado = "Aprobado";
                }
                if ($dataReporte[$i]['vbcreditos'] != 1) {
                    $valorImporte = 0.00;
                } else {
                    $valorImporte = $dataReporte[$i]['importeov'];
                }

                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('B' . ($contador), $dataReporte[$i]['fordenventa']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('C' . ($contador), $dataReporte[$i]['fechadespacho']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('D' . ($contador), $dataReporte[$i]['fechaCancelado']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('E' . ($contador), $dataReporte[$i]['codigov']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('F' . ($contador), $dataReporte[$i]['razonsocial']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('G' . ($contador), $estado);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('H' . ($contador), $situtacion);
                $detalle = str_replace("<ul>", " ", html_entity_decode($dataReporte[$i]['observaciones'], ENT_QUOTES, 'UTF-8'));
                $detalle = str_replace("<li>", " ", $detalle);
                $detalle = str_replace("<strong>", "", $detalle);
                $detalle = str_replace("</ul>", " ", $detalle);
                $detalle = str_replace("</li>", " ", $detalle);
                $detalle = str_replace("</strong>", "", $detalle);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('I' . ($contador), $detalle);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('J' . ($contador), $dataReporte[$i]['estadoov']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('K' . ($contador), $dataReporte[$i]['simbolo']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('L' . ($contador), $dataReporte[$i]['importeaprobado']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('M' . ($contador), $dataReporte[$i]['simbolo']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('N' . ($contador), $valorImporte);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('O' . ($contador), $dataReporte[$i]['simbolo']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('P' . ($contador), $deuda);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('Q' . ($contador), $dataReporte[$i]['nombrezonax']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('R' . ($contador), $dataReporte[$i]['dir']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('S' . ($contador), $dataReporte[$i]['dirdc']);
                if ($dataReporte[$i]['simbolo'] == 'US $') {
                    $totalAprobado += $dataReporte[$i]['importeaprobado'];
                    $totalDespachado += $valorImporte;
                    $totalDeuda += $deuda;
                } else {
                    $totalAprobadoSol += $dataReporte[$i]['importeaprobado'];
                    $totalDespachadoSol += $valorImporte;
                    $totalDeudaSol += $deuda;
                }

                $contador ++;
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "K" . ($contador) . ":P" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":p" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":p" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('K' . ($contador), "US $. ");
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('L' . ($contador), $totalAprobado);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('M' . ($contador), "US $. ");
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('N' . ($contador), $totalDespachado);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('O' . ($contador), "US $. ");
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('P' . ($contador), $totalDeuda);
            $contador ++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "K" . ($contador) . ":P" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('K' . ($contador), "S/. ");
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('L' . ($contador), $totalAprobadoSol);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('M' . ($contador), "S/. ");
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('N' . ($contador), $totalDespachadoSol);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('O' . ($contador), "S/. ");
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('P' . ($contador), $totalDeudaSol);
            $contador++;
            $generalAprobado += $totalAprobado;
            $generalDespachado += $totalDespachado;
            $generalAprobadoSol += $totalAprobadoSol;
            $generalDespachadoSol += $totalDespachadoSol;
            $generalDeuda += $totalDeuda;
            $generalDeudaSol += $totalDeudaSol;
        }
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":P" . ($contador));
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "TOTALES GENERALES: ");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('K' . ($contador), "US $. ");
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('L' . ($contador), $generalAprobado);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('M' . ($contador), "US $. ");
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('N' . ($contador), $generalDespachado);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('O' . ($contador), "US $. ");
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('P' . ($contador), $generalDeuda);
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":P" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('K' . ($contador), "S/. ");
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('L' . ($contador), $generalAprobadoSol);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('M' . ($contador), "S/. ");
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('N' . ($contador), $generalDespachadoSol);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('O' . ($contador), "S/. ");
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('P' . ($contador), $generalDeudaSol);
        $objPHPExcel->getActiveSheet()->setTitle('Reporte_de_Ventas');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function reporteclientevendedorresumido() {
        set_time_limit(1000);
        $idvendedor = $_REQUEST['idVendedor'];
        $anio = $_REQUEST['cmbAnio'];

        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'RankinClientexVendedor.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $reporte = $this->AutoLoadModel('reporte');
        $datos = $reporte->reporteclientevendedorresumido($idvendedor, $anio);
        $cantidadData = count($datos);
        $titulos = array('ENERO', 'FEBRERO', 'MARZO.', 'ABRIL', 'MAYO', 'JUNIO', 'JULIO', 'AGOSTO', "SETIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE");
        $subtitulos = array("US$", "Cant.");

        //poniendo stylo al encabezado
        //Lineas para cuadros
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        ); ////HASTA AQUI ESTOY
        //estableciendo a automatico el ancho
        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('N')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('O')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('P')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('Q')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('R')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('S')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('T')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('U')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('V')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('W')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('X')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('Y')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('Z')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('AA')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('AB')->setAutoSize(true);

        $cont = 1;
        $cont++;
        $vendedor = new Actor();
        $reg = $vendedor->buscarxid($idvendedor);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "VENDEDOR: " . $reg[0]['nombres'] . " " . $reg[0]['apellidopaterno'])
                ->mergeCells('A' . $cont . ':F' . $cont);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);

        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), 'AÑO: ' . $anio)
                ->mergeCells('A' . $cont . ':B' . $cont);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);

        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "FECHA IMPRESION: " . date('Y/m/d'))
                ->mergeCells('A' . $cont . ':B' . $cont);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);

        $cont++;
        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($cont), "N°")
                    ->mergeCells('A' . $cont . ':A' . ($cont + 1))
                    ->setCellValue('B' . ($cont), "CLIENTE")
                    ->mergeCells('B' . $cont . ':B' . ($cont + 1))
                    ->setCellValue('C' . ($cont), $titulos[0])
                    ->mergeCells('C' . $cont . ':D' . $cont)
                    ->setCellValue('E' . ($cont), $titulos[1])
                    ->mergeCells('E' . $cont . ':F' . $cont)
                    ->setCellValue('G' . ($cont), $titulos[2])
                    ->mergeCells('G' . $cont . ':H' . $cont)
                    ->setCellValue('I' . ($cont), $titulos[3])
                    ->mergeCells('I' . $cont . ':J' . $cont)
                    ->setCellValue('K' . ($cont), $titulos[4])
                    ->mergeCells('K' . $cont . ':L' . $cont)
                    ->setCellValue('M' . ($cont), $titulos[5])
                    ->mergeCells('M' . $cont . ':N' . $cont)
                    ->setCellValue('O' . ($cont), $titulos[6])
                    ->mergeCells('O' . $cont . ':P' . $cont)
                    ->setCellValue('Q' . ($cont), $titulos[7])
                    ->mergeCells('Q' . $cont . ':R' . $cont)
                    ->setCellValue('S' . ($cont), $titulos[8])
                    ->mergeCells('S' . $cont . ':T' . $cont)
                    ->setCellValue('U' . ($cont), $titulos[9])
                    ->mergeCells('U' . $cont . ':V' . $cont)
                    ->setCellValue('W' . ($cont), $titulos[10])
                    ->mergeCells('W' . $cont . ':X' . $cont)
                    ->setCellValue('Y' . ($cont), $titulos[11])
                    ->mergeCells('Y' . $cont . ':Z' . $cont)
                    ->mergeCells('AA' . $cont . ':AA' . ($cont + 1))
                    ->setCellValue('AA' . ($cont), "ZONA")
                    ->mergeCells('AB' . $cont . ':AB' . ($cont + 1))
                    ->setCellValue('AB' . ($cont), "LUGAR");
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($cont) . ":AB" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":AB" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":AB" . ($cont))->getFill()->setRotation(1);

        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('C' . ($cont), $subtitulos[0])
                    ->setCellValue('D' . ($cont), $subtitulos[1])
                    ->setCellValue('E' . ($cont), $subtitulos[0])
                    ->setCellValue('F' . ($cont), $subtitulos[1])
                    ->setCellValue('G' . ($cont), $subtitulos[0])
                    ->setCellValue('H' . ($cont), $subtitulos[1])
                    ->setCellValue('I' . ($cont), $subtitulos[0])
                    ->setCellValue('J' . ($cont), $subtitulos[1])
                    ->setCellValue('K' . ($cont), $subtitulos[0])
                    ->setCellValue('L' . ($cont), $subtitulos[1])
                    ->setCellValue('M' . ($cont), $subtitulos[0])
                    ->setCellValue('N' . ($cont), $subtitulos[1])
                    ->setCellValue('O' . ($cont), $subtitulos[0])
                    ->setCellValue('P' . ($cont), $subtitulos[1])
                    ->setCellValue('Q' . ($cont), $subtitulos[0])
                    ->setCellValue('R' . ($cont), $subtitulos[1])
                    ->setCellValue('S' . ($cont), $subtitulos[0])
                    ->setCellValue('T' . ($cont), $subtitulos[1])
                    ->setCellValue('U' . ($cont), $subtitulos[0])
                    ->setCellValue('V' . ($cont), $subtitulos[1])
                    ->setCellValue('W' . ($cont), $subtitulos[0])
                    ->setCellValue('X' . ($cont), $subtitulos[1])
                    ->setCellValue('Y' . ($cont), $subtitulos[0])
                    ->setCellValue('Z' . ($cont), $subtitulos[1]);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($cont) . ":AB" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":AB" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":AB" . ($cont))->getFill()->setRotation(1);

        $mesDol = array(1 => 'C', 2 => 'E', 3 => 'G', 4 => 'I', 5 => 'K', 6 => 'M', 7 => 'O', 8 => 'Q', 9 => 'S', 10 => 'U', 11 => 'W', 12 => 'Y');
        $mesCan = array(1 => 'D', 2 => 'F', 3 => 'H', 4 => 'J', 5 => 'L', 6 => 'N', 7 => 'P', 8 => 'R', 9 => 'T', 10 => 'V', 11 => 'X', 12 => 'Z');
        $nro = 1;
        $cliente = $datos[0]['razonsocial'];
        for ($i = 0; $i < $cantidadData; $i++) {
            $cont++;
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($cont), $nro);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('B' . ($cont), html_entity_decode($datos[$i]['razonsocial'], ENT_QUOTES, 'UTF-8'));
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('AA' . ($cont), html_entity_decode($datos[$i]['zona'], ENT_QUOTES, 'UTF-8'));
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('AB' . ($cont), strtoupper(html_entity_decode($datos[$i]['provincia'], ENT_QUOTES, 'UTF-8')));
            for ($j = 1; $j <= 12; $j++) {
                if ($i < $cantidadData && $cliente == $datos[$i]['razonsocial'] && $datos[$i]['mes'] == $j) {
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($mesDol[$j] . ($cont), round($datos[$i]['importeov'], 2));
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($mesCan[$j] . ($cont), $datos[$i]['cant']);
                    $i++;
                } else {
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($mesDol[$j] . ($cont), "0.00");
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($mesCan[$j] . ($cont), "0");
                }
            }

            $cliente = $datos[$i]['razonsocial'];
            $i--;
            $nro++;
        }

        $objPHPExcel->getActiveSheet()->setTitle('Reporte_Cartera_Clientes');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    function DescargarExcelPedidoVentas1() {
        header('Content-type: application/vnd.ms-excel');
        header("Content-Disposition: attachment; filename=ventas" . date('YmdHis') . ".xls");
        header("Pragma: no-cache");
        header("Expires: 0");

        $idvendedor = empty($_REQUEST['idVendedor']) ? '' : $_REQUEST['idVendedor'];
        $fechaInicial = empty($_REQUEST['txtFechaInicio']) ? '' : $_REQUEST['txtFechaInicio'];
        $fechaFinal = empty($_REQUEST['txtFechaFin']) ? '' : $_REQUEST['txtFechaFin'];
        $provinciax = empty($_REQUEST['lstprovinciax']) ? '' : $_REQUEST['lstprovinciax'];
        $reporte = new Reporte();
        $data = $reporte->reportePedidoVentas1($idvendedor, $fechaInicial, $fechaFinal, $provinciax);

        $cantidad = count($data);
        echo "<table>";
        echo "<thead>";
        echo "<tr style='background-color:#0693DE;color:white;'>";
        echo "<td>#</td>";
        echo "<td>DISTRITO</td>";
        echo "<td># CLIENTE</td>";
        echo "<td>VENTA TOTAL</td>";
        echo "<td>PROM. VENTAS</td>";
        echo "</tr>";
        echo "</thead>";
        echo "<tbody>";

        $contClientes = 0;
        $sumaVenta = 0;
        $contador = 0;
        $distritoAnt = 0;

        for ($i = 0; $i <= $cantidad; $i++) {
            if ($data[$i]['IDDISTRITO'] == $distritoAnt || $i == 0) {
                $contClientes++;
                $distrito = $data[$i]['DISTRITO'];
                $sumaVenta += $data[$i]['VENTAS'];
                $distritoAnt = $data[$i]['IDDISTRITO'];
            } else {
                $contador++;
                echo "<tr>";
                echo "<td>" . $contador . "</td>";
                echo "<td>" . $distrito . "</td>";
                echo "<td>" . $contClientes . "</td>";
                echo "<td>" . number_format($sumaVenta, 2, ',', '') . "</td>";
                echo "<td>" . number_format(round($sumaVenta / $contClientes, 2), 2, ',', '') . "</td>";
                echo "</tr>";

                $contClientes = 1;
                $sumaVenta = $data[$i]['VENTAS'];
                $distritoAnt = $data[$i]['IDDISTRITO'];
                $distrito = $data[$i]['DISTRITO'];
            }
        }
        echo "</tbody>";
        echo "</table>";
    }

    function descargarclientes() {
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'clientesdescargados.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $titulos = array('TIPO', 'RUC', 'RAZONSOCIAL', 'DIRECCION', 'UBIGEO', 'TELEFONO', 'PROVEEDOR', 'ENVIO XML', 'MAIL PRINCIPAL', 'MAIL CC', 'MAIL CC2', 'MAIL CC3', 'MAIL CC4');
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);

        $contador = 1;

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":M" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);

        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $titulos[0])
                ->setCellValue('B' . ($contador), $titulos[1])
                ->setCellValue('C' . ($contador), $titulos[2])
                ->setCellValue('D' . ($contador), $titulos[3])
                ->setCellValue('E' . ($contador), $titulos[4])
                ->setCellValue('F' . ($contador), $titulos[5])
                ->setCellValue('G' . ($contador), $titulos[6])
                ->setCellValue('H' . ($contador), $titulos[7])
                ->setCellValue('I' . ($contador), $titulos[8])
                ->setCellValue('J' . ($contador), $titulos[9])
                ->setCellValue('K' . ($contador), $titulos[10])
                ->setCellValue('L' . ($contador), $titulos[11])
                ->setCellValue('M' . ($contador), $titulos[12]);

        $contador++;
        $descarga = new Descarga();
        $UltFecha = $descarga->ultimaDescarga();
        $listaClientes = $descarga->lista($UltFecha[0]['fechacreacion']);
        $tam = count($listaClientes);

        for ($i = 0; $i < $tam; $i++) {
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":M" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $listaClientes[$i]['tipocliente']);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('B' . ($contador), " " . $listaClientes[$i]['documento']);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('C' . ($contador), html_entity_decode(trim($listaClientes[$i]['razonsocial']), ENT_QUOTES, 'UTF-8'));
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('D' . ($contador), html_entity_decode(trim($listaClientes[$i]['direccion']), ENT_QUOTES, 'UTF-8') . " - " . trim($listaClientes[$i]['distrito']) . " - " . trim($listaClientes[$i]['provincia']) . " - " . trim($listaClientes[$i]['departamento']));
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('E' . ($contador), trim($listaClientes[$i]['codubigeo']));
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('F' . ($contador), trim($listaClientes[$i]['telefonos']));
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('G' . ($contador), 'N');
            $TempEmail = (filter_var(trim($listaClientes[$i]['email']), FILTER_VALIDATE_EMAIL) ? trim($listaClientes[$i]['email']) : '');
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('H' . ($contador), (!empty($TempEmail) ? 'S' : 'N'));
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('I' . ($contador), $TempEmail);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('J' . ($contador), '');
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('K' . ($contador), '');
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('L' . ($contador), '');
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('M' . ($contador), '');
            $contador++;
        }

        $data['numero'] = $tam;
        $descarga->graba($data);

        $objPHPExcel->getActiveSheet()->setTitle('Clientes_Descargados');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function cuadregeneral() {
        set_time_limit(1000);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'cuadregeneral_inventario.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $cmbInventario = $_REQUEST['lstInventario'];
        $lstBloques = $_REQUEST['lstBloques'];
        $rbFiltro = $_REQUEST['rbFiltro'];
        $FilStock = $_REQUEST['FilStock'];

        $cmbTipo = $_REQUEST['cmbTipo'];
        $cmbAlmacen = "";
        $cmbLinea = "";
        $cmbSublinea = "";
        $txtIdproducto = "";
        if ($rbFiltro == 2 && $cmbTipo == 1) {
            $cmbAlmacen = $_REQUEST['cmbAlmacen'];
        } else if ($rbFiltro == 3 && $cmbTipo == 1) {
            $cmbLinea = $_REQUEST['cmbLinea'];
        } else if ($rbFiltro == 4 && $cmbTipo == 1) {
            $cmbSublinea = $_REQUEST['cmbSublinea'];
        } else if ($rbFiltro == 5 && $cmbTipo == 1) {
            $txtIdproducto = $_REQUEST['txtIdproducto'];
        } else if ($cmbTipo == 2) {
            $lstBloques = 70; // bloque NO INVENTARIADOS (FALTANTES)
        } else if ($cmbTipo == 3) {
            $cmbTipo = 2;
            $lstBloques = 119; // bloque NO cargados en sistema
        }
        $reporte = $this->AutoLoadModel('inventario');
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $titulos = array('ITEM', 'CODIGO', 'DESCRIPCION', 'CONTEO 1', 'CONTEO 2', 'CONTEO 3', 'MERMA', 'S. T.', 'SHOW ROOM', 'TOTAL', 'FOB', 'T. FISICO', 'STOCK CIERRE', 'DIF.(+/-)', 'F. REGISTRO');

        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAECECC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'CEE3F6FF')
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAABBCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('N')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('O')->setAutoSize(true);
        $contador = 1;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':O' . $contador);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":O" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "CUADRE GENERAL DE INVENTARIO");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $InventarioDX = $reporte->listadoInventarioxId($cmbInventario);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "CODIGO: ")
                ->setCellValue('C' . ($contador), $InventarioDX[0]['codigoinv']);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "DESCRIPCION: ")
                ->setCellValue('C' . ($contador), $InventarioDX[0]['descripcioninv']);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "FECHA:")
                ->setCellValue('C' . ($contador), $InventarioDX[0]['fechainv']);

        $contador = $contador + 2;

        $data = $reporte->reporte_cuadregeneral($cmbInventario, $lstBloques, $cmbAlmacen, $cmbLinea, $cmbSublinea, $txtIdproducto, $cmbTipo);
        $tam = count($data);
        $auxBloque = "";
        $item = 1;

        $TotalRealFisico = 0;
        $TotalCierre = 0;
        $TotalFaltante = 0;
        $totalSobrante = 0;

        for ($i = 0; $i < $tam; $i++) {
            if ($auxBloque != $data[$i]['codigobloque']) {
                $item = 1;
                $contador++;
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "D" . ($contador) . ":D" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":C" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "E" . ($contador) . ":F" . ($contador));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "ALMACEN:")
                        ->setCellValue('C' . ($contador), "CORPORACION POWER ACOUSTIK S.A.C.")
                        ->setCellValue('D' . ($contador), "ANAQUEL:")
                        ->setCellValue('E' . ($contador), $data[$i]['codigobloque']);

                $contador++;
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $titulos[0])
                        ->setCellValue('B' . ($contador), $titulos[1])
                        ->setCellValue('C' . ($contador), $titulos[2])
                        ->setCellValue('D' . ($contador), $titulos[3])
                        ->setCellValue('E' . ($contador), $titulos[4])
                        ->setCellValue('F' . ($contador), $titulos[5])
                        ->setCellValue('G' . ($contador), $titulos[6])
                        ->setCellValue('H' . ($contador), $titulos[7])
                        ->setCellValue('I' . ($contador), $titulos[8])
                        ->setCellValue('J' . ($contador), $titulos[9])
                        ->setCellValue('K' . ($contador), $titulos[10])
                        ->setCellValue('L' . ($contador), $titulos[11])
                        ->setCellValue('M' . ($contador), $titulos[12])
                        ->setCellValue('N' . ($contador), $titulos[13])
                        ->setCellValue('O' . ($contador), $titulos[14]);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":O" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
                $auxBloque = $data[$i]['codigobloque'];
                $contador++;
            }

            $stockINVENTARIO = 0;
            if ($data[$i]['buenos3'] > 0)
                $stockINVENTARIO = $data[$i]['buenos3'];
            else if ($data[$i]['buenos2'] > 0)
                $stockINVENTARIO = $data[$i]['buenos2'];
            else if ($data[$i]['buenos'] > 0)
                $stockINVENTARIO = $data[$i]['buenos'];

            $diferenciaStock = ($stockINVENTARIO + $data[$i]['showroom']) - $data[$i]['stockanterior'];

            $banderaView = 1;
            if ($FilStock == 1 && $diferenciaStock <= 0) {
                $banderaView = 0;
            } else if ($FilStock == 2 && $diferenciaStock >= 0) {
                $banderaView = 0;
            } else if ($FilStock == 3 && $diferenciaStock != 0) {
                $banderaView = 0;
            }

            if ($banderaView == 1) {
                if ($diferenciaStock < 0)
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle4, "A" . ($contador) . ":O" . ($contador));
                else if ($diferenciaStock > 0)
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "A" . ($contador) . ":O" . ($contador));
                else
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":O" . ($contador));

                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $item);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('B' . ($contador), $data[$i]['codigopa']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('C' . ($contador), html_entity_decode(trim($data[$i]['nompro']), ENT_QUOTES, 'UTF-8'));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('D' . ($contador), $data[$i]['buenos']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('E' . ($contador), $data[$i]['buenos2']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('F' . ($contador), $data[$i]['buenos3']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('G' . ($contador), $data[$i]['malos']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('H' . ($contador), $data[$i]['servicio']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('I' . ($contador), $data[$i]['showroom']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('J' . ($contador), $stockINVENTARIO + $data[$i]['malos'] + $data[$i]['servicio'] + $data[$i]['showroom']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('K' . ($contador), "U$. " . number_format($data[$i]['fob'], 2));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('L' . ($contador), $stockINVENTARIO + $data[$i]['showroom']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('M' . ($contador), $data[$i]['stockanterior']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('N' . ($contador), ($diferenciaStock > 0 ? '+' : '') . $diferenciaStock);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('O' . ($contador), $data[$i]['fechacreacion']);

                $TotalRealFisico += ($stockINVENTARIO + $data[$i]['showroom']) * $data[$i]['fob'];
                $TotalCierre += ($data[$i]['stockanterior'] * $data[$i]['fob']);
                if ($diferenciaStock > 0)
                    $totalSobrante += $diferenciaStock * $data[$i]['fob'];
                else
                    $TotalFaltante += -1 * $diferenciaStock * $data[$i]['fob'];

                $contador++;
                $item++;
            }
        }
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('I' . $contador . ':N' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "I" . ($contador) . ":N" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('I' . ($contador), "TOTAL GENERAL DE INVENTARIO");
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador))->getFont()->setBold(true);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('I' . $contador . ':K' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('L' . $contador . ':N' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "I" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "L" . ($contador) . ":N" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('I' . ($contador), "MONTO TOTAL REAL/FISICO (U$.): ")
                ->setCellValue('L' . ($contador), "U$. " . number_format($TotalRealFisico, 2));

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('I' . $contador . ':K' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('L' . $contador . ':N' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "I" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "L" . ($contador) . ":N" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('I' . ($contador), "MONTO TOTAL DE CIERRE (U$.): ")
                ->setCellValue('L' . ($contador), "U$. " . number_format($TotalCierre, 2));

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('I' . $contador . ':K' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('L' . $contador . ':N' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "I" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "L" . ($contador) . ":N" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('I' . ($contador), "MONTO TOTAL FALTANTE (U$.): ")
                ->setCellValue('L' . ($contador), "U$. " . number_format($TotalFaltante, 2));

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('I' . $contador . ':K' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('L' . $contador . ':N' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "I" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "L" . ($contador) . ":N" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('I' . ($contador), "MONTO TOTAL EXCEDENTE (U$.): ")
                ->setCellValue('L' . ($contador), "U$. " . number_format($totalSobrante, 2));

        $objPHPExcel->getActiveSheet()->setTitle('Cuadre_General_Inventario');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function resumencobranzas() {
        set_time_limit(1000);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'cuadregeneral_inventario.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $cmbInventario = $_REQUEST['cmbInventario'];
        $lstBloques = $_REQUEST['lstBloques'];
        $rbFiltro = $_REQUEST['rbFiltro'];
        $FilStock = $_REQUEST['FilStock'];

        $cmbTipo = $_REQUEST['cmbTipo'];

        $cmbAlmacen = "";
        $cmbLinea = "";
        $cmbSublinea = "";
        $txtIdproducto = "";
        if ($rbFiltro == 2 && $cmbTipo == 1) {
            $cmbAlmacen = $_REQUEST['cmbAlmacen'];
        } else if ($rbFiltro == 3 && $cmbTipo == 1) {
            $cmbLinea = $_REQUEST['cmbLinea'];
        } else if ($rbFiltro == 4 && $cmbTipo == 1) {
            $cmbSublinea = $_REQUEST['cmbSublinea'];
        } else if ($rbFiltro == 5 && $cmbTipo == 1) {
            $txtIdproducto = $_REQUEST['txtIdproducto'];
        }
        $reporte = $this->AutoLoadModel('inventario');
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $titulos = array('ITEM', 'CODIGO', 'DESCRIPCION', 'CONTEO 1', 'CONTEO 2', 'CONTEO 3', 'MERMA', 'S. T.', 'SHOW ROOM', 'TOTAL', 'CIF VENTAS', 'T. FISICO', 'STOCK CIERRE', 'DIF.(+/-)', 'F. REGISTRO');

        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAECECC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'CEE3F6FF')
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAABBCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('N')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('O')->setAutoSize(true);
        $contador = 1;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':O' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":O" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "CUADRE GENERAL DE INVENTARIO");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $InventarioDX = $reporte->listadoInventarioxId($cmbInventario);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "CODIGO: ")
                ->setCellValue('C' . ($contador), $InventarioDX[0]['codigoinv']);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "DESCRIPCION: ")
                ->setCellValue('C' . ($contador), $InventarioDX[0]['descripcioninv']);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "FECHA:")
                ->setCellValue('C' . ($contador), $InventarioDX[0]['fechainv']);

        $contador = $contador + 2;

        $data = $reporte->reporte_cuadregeneral($cmbInventario, $lstBloques, $cmbAlmacen, $cmbLinea, $cmbSublinea, $txtIdproducto, $cmbTipo);
        $tam = count($data);
        $auxBloque = "";
        $item = 1;

        $TotalRealFisico = 0;
        $TotalCierre = 0;
        $TotalFaltante = 0;
        $totalSobrante = 0;

        for ($i = 0; $i < $tam; $i++) {
            if ($auxBloque != $data[$i]['codigobloque']) {
                $item = 1;
                $contador++;
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "D" . ($contador) . ":D" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":C" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "E" . ($contador) . ":F" . ($contador));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "ALMACEN:")
                        ->setCellValue('C' . ($contador), "CORPORACION POWER ACOUSTIK S.A.C.")
                        ->setCellValue('D' . ($contador), "ANAQUEL:")
                        ->setCellValue('E' . ($contador), $data[$i]['codigobloque']);

                $contador++;
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $titulos[0])
                        ->setCellValue('B' . ($contador), $titulos[1])
                        ->setCellValue('C' . ($contador), $titulos[2])
                        ->setCellValue('D' . ($contador), $titulos[3])
                        ->setCellValue('E' . ($contador), $titulos[4])
                        ->setCellValue('F' . ($contador), $titulos[5])
                        ->setCellValue('G' . ($contador), $titulos[6])
                        ->setCellValue('H' . ($contador), $titulos[7])
                        ->setCellValue('I' . ($contador), $titulos[8])
                        ->setCellValue('J' . ($contador), $titulos[9])
                        ->setCellValue('K' . ($contador), $titulos[10])
                        ->setCellValue('L' . ($contador), $titulos[11])
                        ->setCellValue('M' . ($contador), $titulos[12])
                        ->setCellValue('N' . ($contador), $titulos[13])
                        ->setCellValue('O' . ($contador), $titulos[14]);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":O" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
                $auxBloque = $data[$i]['codigobloque'];
                $contador++;
            }

            $stockINVENTARIO = 0;
            if ($data[$i]['buenos3'] > 0)
                $stockINVENTARIO = $data[$i]['buenos3'];
            else if ($data[$i]['buenos2'] > 0)
                $stockINVENTARIO = $data[$i]['buenos2'];
            else if ($data[$i]['buenos'] > 0)
                $stockINVENTARIO = $data[$i]['buenos'];

            $diferenciaStock = ($stockINVENTARIO + $data[$i]['showroom']) - $data[$i]['stockanterior'];
            $banderaView = 1;
            if ($FilStock == 1 && $diferenciaStock <= 0) {
                $banderaView = 0;
            } else if ($FilStock == 2 && $diferenciaStock >= 0) {
                $banderaView = 0;
            } else if ($FilStock == 3 && $diferenciaStock != 0) {
                $banderaView = 0;
            }

            if ($banderaView == 1) {
                if ($diferenciaStock < 0)
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle4, "A" . ($contador) . ":O" . ($contador));
                else if ($diferenciaStock > 0)
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "A" . ($contador) . ":O" . ($contador));
                else
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":O" . ($contador));

                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $item);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('B' . ($contador), $data[$i]['codigopa']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('C' . ($contador), html_entity_decode(trim($data[$i]['nompro']), ENT_QUOTES, 'UTF-8'));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('D' . ($contador), $data[$i]['buenos']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('E' . ($contador), $data[$i]['buenos2']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('F' . ($contador), $data[$i]['buenos3']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('G' . ($contador), $data[$i]['malos']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('H' . ($contador), $data[$i]['servicio']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('I' . ($contador), $data[$i]['showroom']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('J' . ($contador), $stockINVENTARIO + $data[$i]['malos'] + $data[$i]['servicio'] + $data[$i]['showroom']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('K' . ($contador), "U$. " . number_format($data[$i]['cifventasdolares'], 2));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('L' . ($contador), $stockINVENTARIO + $data[$i]['showroom']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('M' . ($contador), $data[$i]['stockanterior']);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('N' . ($contador), ($diferenciaStock > 0 ? '+' : '') . $diferenciaStock);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('O' . ($contador), $data[$i]['fechacreacion']);

                $TotalRealFisico += ($stockINVENTARIO + $data[$i]['showroom']) * $data[$i]['cifventasdolares'];
                $TotalCierre += ($data[$i]['stockanterior'] * $data[$i]['cifventasdolares']);
                if ($diferenciaStock > 0)
                    $totalSobrante += $diferenciaStock * $data[$i]['cifventasdolares'];
                else
                    $TotalFaltante += -1 * $diferenciaStock * $data[$i]['cifventasdolares'];

                $contador++;
                $item++;
            }
        }
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('I' . $contador . ':N' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "I" . ($contador) . ":N" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('I' . ($contador), "TOTAL GENERAL DE INVENTARIO");
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador))->getFont()->setBold(true);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('I' . $contador . ':K' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('L' . $contador . ':N' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "I" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "L" . ($contador) . ":N" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('I' . ($contador), "MONTO TOTAL REAL/FISICO (U$.): ")
                ->setCellValue('L' . ($contador), "U$. " . number_format($TotalRealFisico, 2));

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('I' . $contador . ':K' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('L' . $contador . ':N' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "I" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "L" . ($contador) . ":N" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('I' . ($contador), "MONTO TOTAL DE CIERRE (U$.): ")
                ->setCellValue('L' . ($contador), "U$. " . number_format($TotalCierre, 2));

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('I' . $contador . ':K' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('L' . $contador . ':N' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "I" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "L" . ($contador) . ":N" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('I' . ($contador), "MONTO TOTAL FALTANTE (U$.): ")
                ->setCellValue('L' . ($contador), "U$. " . number_format($TotalFaltante, 2));

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('I' . $contador . ':K' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('L' . $contador . ':N' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "I" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "L" . ($contador) . ":N" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":N" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('I' . ($contador), "MONTO TOTAL EXCEDENTE (U$.): ")
                ->setCellValue('L' . ($contador), "U$. " . number_format($totalSobrante, 2));

        $objPHPExcel->getActiveSheet()->setTitle('Cuadre_General_Inventario');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function detalladoEmpresa() {
        set_time_limit(1500);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reporte_detalladodeempresa.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $get_txtFechaInicio = !empty($_REQUEST['txtFechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaInicio'])) : null;
        $get_txtFechaFin = !empty($_REQUEST['txtFechaFin']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaFin'])) : date('Y-m-d');
        $get_lstMoneda = $_REQUEST['lstMoneda'];

        $get_txt2FechaInicio = ($get_txtFechaInicio == "") ? "Desde el prinicipio" : $get_txtFechaInicio;
        $get_txt2FechaFin = ($get_txtFechaFin == "") ? "Hasta el fin" : $get_txtFechaFin;

        $cmtEtapa = $_REQUEST['lstEtapa'];
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $titulos = array('Nro', 'Padre', 'Monto', 'Saldo', 'Condicion', 'Nro Letra', 'Fecha Giro', 'F. Vencimiento', 'F. Pago', 'Situacion', 'Recepcion Letra');

        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAECECC')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $contador = 1;
        
        $complementotitulo = "";
        if ($cmtEtapa == 1) {
            $complementotitulo = " ANTES DE LA PANDEMIA";
        } else if ($cmtEtapa == 2) {
            $complementotitulo = " DESPUES DE LA PANDEMIA";
        }

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "REPORTE - DETALLADO DE EMPRESA" . $complementotitulo);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('D' . $contador . ':E' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':H' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('I' . $contador . ':J' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "D" . ($contador) . ":E" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "G" . ($contador) . ":H" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "Fecha Reporte:")
                ->setCellValue('C' . ($contador), date('Y-m-d'))
                ->setCellValue('D' . ($contador), "Fecha Desde:")
                ->setCellValue('F' . ($contador), $get_txt2FechaInicio)
                ->setCellValue('G' . ($contador), "Fecha Hasta:")
                ->setCellValue('I' . ($contador), $get_txt2FechaFin);
        $contador++;

        //start cabecera

        $reporte = $this->AutoLoadModel('reporte');
        $ordenGasto = $this->AutoLoadModel('ordengasto');
        $listado = $reporte->resumenEmpresas($cmtEtapa, $get_txtFechaInicio, $get_txtFechaFin, $get_lstMoneda);
        $tam = count($listado);

        $tempVendedor = -1;
        $tempOrdenventa = -1;
        $tempOrdenCobro = -1;

        $TotalEmpresaSoles = 0;
        $TotalEmpresaDolares = 0;

        for ($i = 0; $i < $tam; $i++) {
            $moneda = 'S/. ';
            if ($listado[$i]['idmoneda'] == 2)
                $moneda = 'US $ ';
            if ($listado[$i]['idvendedor'] != $tempVendedor) {
                if ($i > 1) {
                    $contador++;
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':C' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "MONTOS TOTALES");
                    $contador++;

                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), " ")
                            ->setCellValue('B' . ($contador), "SOLES")
                            ->setCellValue('C' . ($contador), "DOLARES");
                    $contador++;

                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "EMPRESA:")
                            ->setCellValue('B' . ($contador), 'S/. ' . number_format($TotalEmpresaSoles, 2))
                            ->setCellValue('C' . ($contador), 'US $ ' . number_format($TotalEmpresaDolares, 2));
                    $contador++;
                    $TotalEmpresaSoles = 0;
                    $TotalEmpresaDolares = 0;
                }

                $contador = $contador + 2;
                $tempVendedor = $listado[$i]['idvendedor'];
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':J' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":J" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Vendedor: ")
                        ->setCellValue('C' . ($contador), $listado[$i]['vendedor']);
                $contador++;
            }

            if ($listado[$i]['idordenventa'] != $tempOrdenventa) {
                $contador++;
                $importe = $ordenGasto->totalGuia($listado[$i]['idordenventa']);
                if ($listado[$i]['idmoneda'] == 1) {
                    $TotalEmpresaSoles += $importe - $listado[$i]['importepagado'];
                } else {
                    $TotalEmpresaDolares += $importe - $listado[$i]['importepagado'];
                }
                $tempOrdenventa = $listado[$i]['idordenventa'];
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':D' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFill()->setRotation(1);


                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "E" . ($contador) . ":E" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);


                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "G" . ($contador) . ":G" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("G" . ($contador) . ":G" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("G" . ($contador) . ":G" . ($contador))->getFill()->setRotation(1);

                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "I" . ($contador) . ":I" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":I" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":I" . ($contador))->getFill()->setRotation(1);

                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":D" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "F" . ($contador) . ":F" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "H" . ($contador) . ":H" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "J" . ($contador) . ":J" . ($contador));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Cliente:")
                        ->setCellValue('B' . ($contador), $listado[$i]['razonsocial'])
                        ->setCellValue('E' . ($contador), "Orden Venta:")
                        ->setCellValue('F' . ($contador), $listado[$i]['codigov'])
                        ->setCellValue('G' . ($contador), "Fecha:")
                        ->setCellValue('H' . ($contador), $listado[$i]['fordenventa'])
                        ->setCellValue('I' . ($contador), "Situacion: ")
                        ->setCellValue('J' . ($contador), $listado[$i]['situacionov']);
                $contador++;
            }
            if ($listado[$i]['idordencobro'] != $tempOrdenCobro) {
                $contador++;
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "DETALLE DE LA PROGRAMACION DE PAGOS");
                $contador++;

                $tempOrdenCobro = $listado[$i]['idordencobro'];
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':C' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":A" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "D" . ($contador) . ":D" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "G" . ($contador) . ":G" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "I" . ($contador) . ":I" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":B" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "E" . ($contador) . ":E" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "H" . ($contador) . ":H" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "J" . ($contador) . ":J" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Monto Total:")
                        ->setCellValue('B' . ($contador), $moneda . $listado[$i]['importeordencobro'])
                        ->setCellValue('D' . ($contador), "Saldo:")
                        ->setCellValue('E' . ($contador), $moneda . $listado[$i]['saldoordencobro'])
                        ->setCellValue('G' . ($contador), "Fecha Emision:")
                        ->setCellValue('H' . ($contador), $listado[$i]['femision'])
                        ->setCellValue('I' . ($contador), "Situacion:")
                        ->setCellValue('J' . ($contador), $listado[$i]['situacionoc']);
                $contador++;

                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Nro")
                        ->setCellValue('B' . ($contador), "Padre")
                        ->setCellValue('C' . ($contador), "Monto")
                        ->setCellValue('D' . ($contador), "Saldo")
                        ->setCellValue('E' . ($contador), "Condicion")
                        ->setCellValue('F' . ($contador), "Nro Letra")
                        ->setCellValue('G' . ($contador), "F. Vencimiento")
                        ->setCellValue('H' . ($contador), "Situacion")
                        ->setCellValue('I' . ($contador), "Nro Unico")
                        ->setCellValue('J' . ($contador), "Recepcion Letra");
                $contador++;
            }

            switch ($listado[$i]['formacobro']) {
                case '1': $formacobro = "Contado";
                    break;
                case '2': $formacobro = "Crédito";
                    break;
                case '3': $formacobro = "Letras";
                    break;
            }

            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":J" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $listado[$i]['iddetalleordencobro'])
                    ->setCellValue('B' . ($contador), $listado[$i]['idpadre'])
                    ->setCellValue('C' . ($contador), $moneda . number_format($listado[$i]['importedoc'], 2))
                    ->setCellValue('D' . ($contador), $moneda . number_format($listado[$i]['saldodoc'], 2))
                    ->setCellValue('E' . ($contador), $formacobro)
                    ->setCellValue('F' . ($contador), $listado[$i]['numeroletra'])
                    ->setCellValue('G' . ($contador), $listado[$i]['fvencimiento'])
                    ->setCellValue('H' . ($contador), $listado[$i]['situacionoc'])
                    ->setCellValue('I' . ($contador), $listado[$i]['numerounico'])
                    ->setCellValue('J' . ($contador), $listado[$i]['recepletra']);
            $contador++;
        }

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':C' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "MONTOS TOTALES:");

        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), " ")
                ->setCellValue('B' . ($contador), "SOLES")
                ->setCellValue('C' . ($contador), "DOLARES");
        $contador++;

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "EMPRESA:")
                ->setCellValue('B' . ($contador), 'S/. ' . number_format($TotalEmpresaSoles, 2))
                ->setCellValue('C' . ($contador), 'US $ ' . number_format($TotalEmpresaDolares, 2));

        $contador++;

        $objPHPExcel->getActiveSheet()->setTitle('Reporte_Detallado_de_Empresa');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function detalladoCreditos() {
        set_time_limit(1500);
        if ($_REQUEST['chk1'] == 'on') { //formato1
            $baseURL = ROOT . 'descargas' . DS;
            $idActor = $_SESSION['idactor'];
            $fechaCreacion = date('Y-m-d_h.m.s');
            $basenombre = 'reporte_detalladodecreditos.xls';
            $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

            $get_condiciones = $_REQUEST['txtCondiciones'];

            $get_txtFechaInicio = !empty($_REQUEST['txtFechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaInicio'])) : null;
            $get_txtFechaFin = !empty($_REQUEST['txtFechaFin']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaFin'])) : date('Y-m-d');
            $cmtEtapa = $_REQUEST['lstEtapa'];
            $get_lstPrincipal = $_REQUEST['lstCategoriaPrincipal'];
            $get_lstCategoria = $_REQUEST['lstCategoria'];
            $get_lstZona = $_REQUEST['lstZona'];
            $get_lstRecepcionLetras = $_REQUEST['lstRecepcionLetras'];
            $get_txtIdCliente = $_REQUEST['txtIdCliente'];
            $get_txtIdOrdenVenta = $_REQUEST['txtIdOrdenVenta'];
            $get_lstMoneda = $_REQUEST['lstMoneda'];
            $get_lstEstado = $_REQUEST['lstEstado'];
            $get_cmbCondVencimiento2 = $_REQUEST['lstCondVencimiento2'];
            $get_cmbCondVencimiento3 = $_REQUEST['lstCondVencimiento3'];

            $get_txt2FechaInicio = ($get_txtFechaInicio == "") ? "Desde el prinicipio" : $get_txtFechaInicio;
            $get_txt2FechaFin = ($get_txtFechaFin == "") ? "Hasta el fin" : $get_txtFechaFin;

            $this->AutoLoadLib('PHPExcel');
            $objPHPExcel = new PHPExcel();
            $titulos = array('Nro', 'Padre', 'Monto', 'Saldo', 'Condicion', 'Nro Letra', 'Fecha Giro', 'F. Vencimiento', 'F. Pago', 'Situacion', 'Recepcion Letra');

            $sharedStyle5 = new PHPExcel_Style();
            $sharedStyle5->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID,
                    'color' => array('argb' => 'FFAECECC')
                ), 'borders' => array(
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                )
                    )
            );

            $sharedStyle4 = new PHPExcel_Style();
            $sharedStyle4->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID,
                    'color' => array('argb' => 'FFAA8888')
                ), 'borders' => array(
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                )
                    )
            );

            $sharedStyle3 = new PHPExcel_Style();
            $sharedStyle3->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID,
                    'color' => array('argb' => 'FFCCDDF7')
                ), 'borders' => array(
                    'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                ),
                'alignment' => array(
                    'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                )
                    )
            );

            $sharedStyle2 = new PHPExcel_Style();
            $sharedStyle2->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID
                ), 'borders' => array(
                    'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                )
                    )
            );

            $sharedStyle1 = new PHPExcel_Style();
            $sharedStyle1->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID,
                    'color' => array('argb' => 'FFCCCCCC')
                ), 'borders' => array(
                    'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                ), 'alignment' => array(
                    'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                )
                    )
            );

            $sharedStyle0 = new PHPExcel_Style();
            $sharedStyle0->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID,
                    'color' => array('argb' => 'FF81BEF7')
                ), 'borders' => array(
                    'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                ), 'alignment' => array(
                    'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                )
                    )
            );

            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
            $contador = 1;
            
            $complementotitulo = "";
            if ($cmtEtapa == 1) {
                $complementotitulo = " ANTES DE LA PANDEMIA";
            } else if ($cmtEtapa == 2) {
                $complementotitulo = " DESPUES DE LA PANDEMIA";
            }

            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":J" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "REPORTE - DETALLADO DE CREDITOS" . $complementotitulo);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

            $contador++;
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "Fecha Reporte:")
                    ->setCellValue('C' . ($contador), date('Y-m-d'));
            $contador++;

            //start cabecera
            $contador++;
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":J" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $get_condiciones);
            $contador++;

            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':D' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':J' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":J" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "FECHA DESDE")
                    ->setCellValue('C' . ($contador), "FECHA HASTA")
                    ->setCellValue('E' . ($contador), "REPORTE")
                    ->setCellValue('G' . ($contador), "ESTADO");
            $contador++;

            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':D' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':J' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":J" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
            if ($get_lstEstado == 1) {
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $get_txt2FechaInicio)
                        ->setCellValue('C' . ($contador), $get_txt2FechaFin)
                        ->setCellValue('E' . ($contador), "CREDITOS")
                        ->setCellValue('G' . ($contador), ($get_lstEstado == 1 ? 'VENCIDAS ' . (!empty($get_cmbCondVencimiento2) ? (($get_cmbCondVencimiento2 > 90) ? ' (+90 dias)' : ' (' . $get_cmbCondVencimiento2 . ' dias)') : '') : ''));
            }
            if ($get_lstEstado == 2) {
                $filtroMensaje1 = "POR VENCER";
                if (!empty($get_cmbCondVencimiento3)) {
                    if ($get_cmbCondVencimiento3 <= 90) {
                        $filtroMensaje2 = " EN (" . $get_cmbCondVencimiento3 . ") DIAS";
                    }
                    if ($get_cmbCondVencimiento3 == 91) {
                        $filtroMensaje2 = " EN MAS DE 90 DIAS";
                    }
                }

                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $get_txt2FechaInicio)
                        ->setCellValue('C' . ($contador), $get_txt2FechaFin)
                        ->setCellValue('E' . ($contador), "CREDITOS")
                        ->setCellValue('G' . ($contador), $filtroMensaje1 . $filtroMensaje2);
            }

            $contador++;
            $reporte = $this->AutoLoadModel('reporte');
            $ordenGasto = $this->AutoLoadModel('ordengasto');
            $listado = $reporte->resumenDetalladoCreditos($cmtEtapa, $get_txtFechaInicio, $get_txtFechaFin, $get_lstPrincipal, $get_lstCategoria, $get_lstZona, $get_lstEstado, $get_cmbCondVencimiento2, $get_txtIdCliente, $get_txtIdOrdenVenta, $get_lstMoneda, $get_cmbCondVencimiento3);

            $tam = count($listado);
            $tempVendedor = -1;
            $tempOrdenventa = -1;
            $tempOrdenCobro = -1;
            $TotalCreditoSolesLima = 0;
            $TotalCreditoDolaresLima = 0;
            $TotalCreditoSolesProvincia = 0;
            $TotalCreditoDolaresProvincia = 0;

            for ($i = 0; $i < $tam; $i++) {
                $moneda = 'S/. ';
                if ($listado[$i]['idmoneda'] == 2)
                    $moneda = 'US $ ';
                if ($listado[$i]['idvendedor'] != $tempVendedor) {
                    $contador = $contador + 2;
                    $tempVendedor = $listado[$i]['idvendedor'];
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':J' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":J" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Vendedor: ")
                            ->setCellValue('C' . ($contador), $listado[$i]['vendedor']);
                    $contador++;
                }
                if ($listado[$i]['idpadrec'] == 1) {
                    if ($listado[$i]['idmoneda'] == 1) {
                        $TotalCreditoSolesLima += $listado[$i]['saldodoc'];
                    } else {
                        $TotalCreditoDolaresLima += $listado[$i]['saldodoc'];
                    }
                } else {
                    if ($listado[$i]['idmoneda'] == 1) {
                        $TotalCreditoSolesProvincia += $listado[$i]['saldodoc'];
                    } else {
                        $TotalCreditoDolaresProvincia += $listado[$i]['saldodoc'];
                    }
                }

                if ($listado[$i]['idordenventa'] != $tempOrdenventa) {
                    $contador++;
                    $tempOrdenventa = $listado[$i]['idordenventa'];
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "C" . ($contador) . ":C" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "E" . ($contador) . ":E" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':G' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":B" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "D" . ($contador) . ":D" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "F" . ($contador) . ":G" . ($contador));
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Orden Venta:")
                            ->setCellValue('B' . ($contador), $listado[$i]['codigov'])
                            ->setCellValue('C' . ($contador), "Fecha Venta:")
                            ->setCellValue('D' . ($contador), $listado[$i]['fordenventa'])
                            ->setCellValue('E' . ($contador), "Situacion:")
                            ->setCellValue('F' . ($contador), $listado[$i]['situacionov']);
                    $contador++;

                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':D' . $contador);
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':G' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "E" . ($contador) . ":E" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":D" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "F" . ($contador) . ":G" . ($contador));
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Razon Social:")
                            ->setCellValue('B' . ($contador), $listado[$i]['razonsocial'])
                            ->setCellValue('E' . ($contador), "R.U.C.:")
                            ->setCellValue('F' . ($contador), $listado[$i]['ruc']);
                    $contador++;
                }
                if ($listado[$i]['idordencobro'] != $tempOrdenCobro) {
                    $contador++;
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "DETALLE DE LA PROGRAMACION DE PAGOS");
                    $contador++;

                    $tempOrdenCobro = $listado[$i]['idordencobro'];
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':C' . $contador);
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":A" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "D" . ($contador) . ":D" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "G" . ($contador) . ":G" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "I" . ($contador) . ":I" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":B" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "E" . ($contador) . ":E" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "H" . ($contador) . ":H" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "J" . ($contador) . ":J" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Monto Total:")
                            ->setCellValue('B' . ($contador), $moneda . $listado[$i]['importeordencobro'])
                            ->setCellValue('D' . ($contador), "Saldo:")
                            ->setCellValue('E' . ($contador), $moneda . $listado[$i]['saldoordencobro'])
                            ->setCellValue('G' . ($contador), "Fecha Emision:")
                            ->setCellValue('H' . ($contador), $listado[$i]['femision'])
                            ->setCellValue('I' . ($contador), "Situacion:")
                            ->setCellValue('J' . ($contador), $listado[$i]['situacionoc']);
                    $contador++;

                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Nro")
                            ->setCellValue('B' . ($contador), "Padre")
                            ->setCellValue('C' . ($contador), "Monto")
                            ->setCellValue('D' . ($contador), "Saldo")
                            ->setCellValue('E' . ($contador), "Condicion")
                            ->setCellValue('F' . ($contador), "Nro Letra")
                            ->setCellValue('G' . ($contador), "F. Vencimiento")
                            ->setCellValue('H' . ($contador), "Situacion")
                            ->setCellValue('I' . ($contador), "Nro Unico")
                            ->setCellValue('J' . ($contador), "Recepcion Letra");
                    $contador++;
                }

                switch ($listado[$i]['formacobro']) {
                    case '1': $formacobro = "Contado";
                        break;
                    case '2': $formacobro = "Crédito";
                        break;
                    case '3': $formacobro = "Letras";
                        break;
                }

                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":J" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $listado[$i]['iddetalleordencobro'])
                        ->setCellValue('B' . ($contador), $listado[$i]['idpadre'])
                        ->setCellValue('C' . ($contador), $moneda . number_format($listado[$i]['importedoc'], 2))
                        ->setCellValue('D' . ($contador), $moneda . number_format($listado[$i]['saldodoc'], 2))
                        ->setCellValue('E' . ($contador), $formacobro)
                        ->setCellValue('F' . ($contador), $listado[$i]['numeroletra'])
                        ->setCellValue('G' . ($contador), $listado[$i]['fvencimiento'])
                        ->setCellValue('H' . ($contador), $listado[$i]['situacionoc'])
                        ->setCellValue('I' . ($contador), $listado[$i]['numerounico'])
                        ->setCellValue('J' . ($contador), $listado[$i]['recepletra']);
                $contador++;
            }

            $contador++;
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':C' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "MONTOS TOTALES");

            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), " ")
                    ->setCellValue('B' . ($contador), "SOLES")
                    ->setCellValue('C' . ($contador), "DOLARES")
            ;
            $contador++;
            if ($get_lstPrincipal == 1 || $get_lstPrincipal == '') {
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "LIMA")
                        ->setCellValue('B' . ($contador), 'S/. ' . number_format($TotalCreditoSolesLima, 2))
                        ->setCellValue('C' . ($contador), 'US $ ' . number_format($TotalCreditoDolaresLima, 2));
                $contador++;
            }

            if ($get_lstPrincipal == 2 || $get_lstPrincipal == '') {
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "PROVINCIA")
                        ->setCellValue('B' . ($contador), 'S/. ' . number_format($TotalCreditoSolesProvincia, 2))
                        ->setCellValue('C' . ($contador), 'US $ ' . number_format($TotalCreditoDolaresProvincia, 2));
                $contador++;
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "TOTAL")
                    ->setCellValue('B' . ($contador), 'S/. ' . number_format($TotalCreditoSolesLima + $TotalCreditoSolesProvincia, 2))
                    ->setCellValue('C' . ($contador), 'US $ ' . number_format($TotalCreditoDolaresLima + $TotalCreditoDolaresProvincia, 2));
            $contador++;

            $objPHPExcel->getActiveSheet()->setTitle('Reporte_Detallado_de_Creditos');
            $objPHPExcel->setActiveSheetIndex(0);
            $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
            $objWriter->save($filename);

            header('Content-Description: File Transfer');
            header('Content-type: application/force-download');
            header('Content-Disposition: attachment; filename=' . basename($filename));
            header('Content-Transfer-Encoding: binary');
            header("Content-type: application/octet-stream");
            header('Expires: 0');
            header('Cache-Control: must-revalidate');
            header('Pragma: public');
            header('Content-Length: ' . filesize($filename));
            ob_clean();
            flush();

            readfile($filename);
            unlink($filename);
        }

        if ($_REQUEST['chk2'] == 'on') { //formato2
            $baseURL = ROOT . 'descargas' . DS;
            $idActor = $_SESSION['idactor'];
            $fechaCreacion = date('Y-m-d_h.m.s');
            $basenombre = 'reporte_detalladodecreditos.xls';
            $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
            $get_condiciones = $_REQUEST['txtCondiciones'];
            $get_txtFechaInicio = !empty($_REQUEST['txtFechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaInicio'])) : null;
            $get_txtFechaFin = !empty($_REQUEST['txtFechaFin']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaFin'])) : date('Y-m-d');
            $cmtEtapa = $_REQUEST['lstEtapa'];
            $get_lstPrincipal = $_REQUEST['lstCategoriaPrincipal'];
            $get_lstCategoria = $_REQUEST['lstCategoria'];
            $get_lstZona = $_REQUEST['lstZona'];
            $get_lstRecepcionLetras = $_REQUEST['lstRecepcionLetras'];
            $get_txtIdCliente = $_REQUEST['txtIdCliente'];
            $get_txtIdOrdenVenta = $_REQUEST['txtIdOrdenVenta'];
            $get_lstMoneda = $_REQUEST['lstMoneda'];
            $get_lstEstado = $_REQUEST['lstEstado'];
            $get_cmbCondVencimiento2 = $_REQUEST['lstCondVencimiento2'];
            $get_cmbCondVencimiento3 = $_REQUEST['lstCondVencimiento3'];

            $get_txt2FechaInicio = ($get_txtFechaInicio == "") ? "Desde el prinicipio" : $get_txtFechaInicio;
            $get_txt2FechaFin = ($get_txtFechaFin == "") ? "Hasta el fin" : $get_txtFechaFin;

            $this->AutoLoadLib('PHPExcel');
            $objPHPExcel = new PHPExcel();
            $titulos = array('Nro', 'Padre', 'Monto', 'Saldo', 'Condicion', 'Nro Letra', 'Fecha Giro', 'F. Vencimiento', 'F. Pago', 'Situacion', 'Recepcion Letra');

            $sharedStyle5 = new PHPExcel_Style();
            $sharedStyle5->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID,
                    'color' => array('argb' => 'FFAECECC')
                ), 'borders' => array(
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                )
                    )
            );

            $sharedStyle4 = new PHPExcel_Style();
            $sharedStyle4->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID,
                    'color' => array('argb' => 'FFAA8888')
                ), 'borders' => array(
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                )
                    )
            );

            $sharedStyle3 = new PHPExcel_Style();
            $sharedStyle3->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID,
                    'color' => array('argb' => 'FFCCDDF7')
                ), 'borders' => array(
                    'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                ),
                'alignment' => array(
                    'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                )
                    )
            );

            $sharedStyle2 = new PHPExcel_Style();
            $sharedStyle2->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID
                ), 'borders' => array(
                    'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                )
                    )
            );

            $sharedStyle1 = new PHPExcel_Style();
            $sharedStyle1->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID,
                    'color' => array('argb' => 'FFCCCCCC')
                ), 'borders' => array(
                    'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                ), 'alignment' => array(
                    'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                )
                    )
            );

            $sharedStyle0 = new PHPExcel_Style();
            $sharedStyle0->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID,
                    'color' => array('argb' => 'FF81BEF7')
                ), 'borders' => array(
                    'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                ), 'alignment' => array(
                    'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                )
                    )
            );

            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
            $contador = 1;
            
            $complementotitulo = "";
            if ($cmtEtapa == 1) {
                $complementotitulo = " ANTES DE LA PANDEMIA";
            } else if ($cmtEtapa == 2) {
                $complementotitulo = " DESPUES DE LA PANDEMIA";
            }

            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':M' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":M" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "REPORTE - DETALLADO DE CREDITOS" . $complementotitulo);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

            $contador++;
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "Fecha Reporte:")
                    ->setCellValue('C' . ($contador), date('Y-m-d'));
            $contador++;

            //start cabecera
            $contador++;
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':M' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":M" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $get_condiciones);
            $contador++;

            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':C' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('D' . $contador . ':F' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':I' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . $contador . ':M' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":M" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "FECHA DESDE")
                    ->setCellValue('D' . ($contador), "FECHA HASTA")
                    ->setCellValue('G' . ($contador), "REPORTE")
                    ->setCellValue('J' . ($contador), "ESTADO");
            $contador++;

            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':C' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('D' . $contador . ':F' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':I' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . $contador . ':M' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":M" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
            if ($get_lstEstado == 1) {
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $get_txt2FechaInicio)
                        ->setCellValue('D' . ($contador), $get_txt2FechaFin)
                        ->setCellValue('G' . ($contador), "CREDITOS")
                        ->setCellValue('J' . ($contador), ($get_lstEstado == 1 ? 'VENCIDAS ' . (!empty($get_cmbCondVencimiento2) ? (($get_cmbCondVencimiento2 > 90) ? ' (+90 dias)' : ' (' . $get_cmbCondVencimiento2 . ' dias)') : '') : ''));
            }
            if ($get_lstEstado == 2) {
                $filtroMensaje1 = "POR VENCER";
                if (!empty($get_cmbCondVencimiento3)) {
                    if ($get_cmbCondVencimiento3 <= 90) {
                        $filtroMensaje2 = " EN (" . $get_cmbCondVencimiento3 . ") DIAS";
                    }
                    if ($get_cmbCondVencimiento3 == 91) {
                        $filtroMensaje2 = " EN MAS DE 90 DIAS";
                    }
                }

                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $get_txt2FechaInicio)
                        ->setCellValue('C' . ($contador), $get_txt2FechaFin)
                        ->setCellValue('E' . ($contador), "CREDITOS")
                        ->setCellValue('G' . ($contador), $filtroMensaje1 . $filtroMensaje2);
            }


            $contador++;
            $reporte = $this->AutoLoadModel('reporte');
            $ordenGasto = $this->AutoLoadModel('ordengasto');
            $listado = $reporte->resumenDetalladoCreditos($cmtEtapa, $get_txtFechaInicio, $get_txtFechaFin, $get_lstPrincipal, $get_lstCategoria, $get_lstZona, $get_lstEstado, $get_cmbCondVencimiento2, $get_txtIdCliente, $get_txtIdOrdenVenta, $get_lstMoneda, $get_cmbCondVencimiento3);

            $tam = count($listado);
            $tempVendedor = -1;
            $tempOrdenventa = -1;
            $tempOrdenCobro = -1;
            $TotalCreditoSolesLima = 0;
            $TotalCreditoDolaresLima = 0;
            $TotalCreditoSolesProvincia = 0;
            $TotalCreditoDolaresProvincia = 0;

            for ($i = 0; $i < $tam; $i++) {
                $moneda = 'S/. ';
                if ($listado[$i]['idmoneda'] == 2)
                    $moneda = 'US $ ';
                if ($listado[$i]['idvendedor'] != $tempVendedor) {
                    $contador = $contador + 2;
                    $tempVendedor = $listado[$i]['idvendedor'];
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':M' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":M" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Vendedor: ")
                            ->setCellValue('C' . ($contador), $listado[$i]['vendedor']);
                    $contador++;

                    $tempOrdenCobro = $listado[$i]['idordencobro'];
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":M" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Nº")
                            ->setCellValue('B' . ($contador), "RUC")
                            ->setCellValue('C' . ($contador), "CLIENTE")
                            ->setCellValue('D' . ($contador), "DEPARTAMENTO")
                            ->setCellValue('E' . ($contador), "DISTRITO")
                            ->setCellValue('F' . ($contador), "DIRECCION")
                            ->setCellValue('G' . ($contador), "ORD. VENTA (OV)")
                            ->setCellValue('H' . ($contador), "FECHA DE VENTA")
                            ->setCellValue('I' . ($contador), "FECHA DE EMISION CRED.")
                            ->setCellValue('J' . ($contador), "FECHA DE VENCIMIENTO")
                            ->setCellValue('K' . ($contador), "SITUACION")
                            ->setCellValue('L' . ($contador), "S/.")
                            ->setCellValue('M' . ($contador), "$");

                    $contador++;
                }
                if ($listado[$i]['idpadrec'] == 1) {
                    if ($listado[$i]['idmoneda'] == 1) {
                        $TotalCreditoSolesLima += $listado[$i]['saldodoc'];
                    } else {
                        $TotalCreditoDolaresLima += $listado[$i]['saldodoc'];
                    }
                } else {
                    if ($listado[$i]['idmoneda'] == 1) {
                        $TotalCreditoSolesProvincia += $listado[$i]['saldodoc'];
                    } else {
                        $TotalCreditoDolaresProvincia += $listado[$i]['saldodoc'];
                    }
                }

//                if ($listado[$i]['idordencobro'] != $tempOrdenCobro) {
//                    $contador++;
//                    $tempOrdenCobro = $listado[$i]['idordencobro'];
//                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
//                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
//                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
//                    $objPHPExcel->setActiveSheetIndex(0)
//                            ->setCellValue('A' . ($contador), "Nº")
//                            ->setCellValue('B' . ($contador), "RUC")
//                            ->setCellValue('C' . ($contador), "CLIENTE")
//                            ->setCellValue('D' . ($contador), "ORD. VENTA (OV)")
//                            ->setCellValue('E' . ($contador), "FECHA DE VENTA")
//                            ->setCellValue('F' . ($contador), "FECHA DE EMISION CRED.")
//                            ->setCellValue('G' . ($contador), "FECHA DE VENCIMIENTO")
//                            ->setCellValue('H' . ($contador), "SITUACION")
//                            ->setCellValue('I' . ($contador), "S/.")
//                            ->setCellValue('J' . ($contador), "$");
//
//                    $contador++;
//
//                }

                switch ($listado[$i]['formacobro']) {
                    case '1': $formacobro = "Contado";
                        break;
                    case '2': $formacobro = "Crédito";
                        break;
                    case '3': $formacobro = "Letras";
                        break;
                }
                if ($listado[$i]['idmoneda'] == 1) {
                    $saldoSolesTemp = $moneda . number_format($listado[$i]['saldodoc'], 2);
                } else {
                    $saldoSolesTemp = 0.00;
                }

                if ($listado[$i]['idmoneda'] == 2) {
                    $saldoDolaresTemp = $moneda . number_format($listado[$i]['saldodoc'], 2);
                } else {
                    $saldoDolaresTemp = 0.00;
                }
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":M" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $listado[$i]['iddetalleordencobro'])
                        ->setCellValue('B' . ($contador), $listado[$i]['ruc'])
                        ->setCellValue('C' . ($contador), $listado[$i]['razonsocial'])
                        ->setCellValue('D' . ($contador), $listado[$i]['nombredepartamento'])
                        ->setCellValue('E' . ($contador), $listado[$i]['nombredistrito'])
                        ->setCellValue('F' . ($contador), $listado[$i]['direccion'])
                        ->setCellValue('G' . ($contador), $listado[$i]['codigov'])
                        ->setCellValue('H' . ($contador), $listado[$i]['fordenventa'])
                        ->setCellValue('I' . ($contador), $listado[$i]['femision'])
                        ->setCellValue('J' . ($contador), $listado[$i]['fvencimiento'])
                        ->setCellValue('K' . ($contador), $listado[$i]['situacionoc'])
                        ->setCellValue('L' . ($contador), $saldoSolesTemp)
                        ->setCellValue('M' . ($contador), $saldoDolaresTemp);
                $contador++;
            }

            $contador++;
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('K' . $contador . ':M' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "K" . ($contador) . ":M" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('K' . ($contador), "MONTOS TOTALES");

            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "K" . ($contador) . ":M" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('K' . ($contador), " ")
                    ->setCellValue('L' . ($contador), "SOLES")
                    ->setCellValue('M' . ($contador), "DOLARES")
            ;
            $contador++;
            if ($get_lstPrincipal == 1 || $get_lstPrincipal == '') {
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "K" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "L" . ($contador) . ":M" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('K' . ($contador), "LIMA")
                        ->setCellValue('L' . ($contador), 'S/. ' . number_format($TotalCreditoSolesLima, 2))
                        ->setCellValue('M' . ($contador), 'US $ ' . number_format($TotalCreditoDolaresLima, 2));
                $contador++;
            }

            if ($get_lstPrincipal == 2 || $get_lstPrincipal == '') {
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "K" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "L" . ($contador) . ":M" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('K' . ($contador), "PROVINCIA")
                        ->setCellValue('L' . ($contador), 'S/. ' . number_format($TotalCreditoSolesProvincia, 2))
                        ->setCellValue('M' . ($contador), 'US $ ' . number_format($TotalCreditoDolaresProvincia, 2));
                $contador++;
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "K" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "L" . ($contador) . ":M" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('K' . ($contador), "TOTAL")
                    ->setCellValue('L' . ($contador), 'S/. ' . number_format($TotalCreditoSolesLima + $TotalCreditoSolesProvincia, 2))
                    ->setCellValue('M' . ($contador), 'US $ ' . number_format($TotalCreditoDolaresLima + $TotalCreditoDolaresProvincia, 2));
            $contador++;

            $objPHPExcel->getActiveSheet()->setTitle('Reporte_Detallado_de_Creditos');
            $objPHPExcel->setActiveSheetIndex(0);
            $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
            $objWriter->save($filename);

            header('Content-Description: File Transfer');
            header('Content-type: application/force-download');
            header('Content-Disposition: attachment; filename=' . basename($filename));
            header('Content-Transfer-Encoding: binary');
            header("Content-type: application/octet-stream");
            header('Expires: 0');
            header('Cache-Control: must-revalidate');
            header('Pragma: public');
            header('Content-Length: ' . filesize($filename));
            ob_clean();
            flush();

            readfile($filename);
            unlink($filename);
        }
    }

    public function detalladoCelestium() {
        set_time_limit(1500);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reporte_detalladocelestium.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $get_condiciones = $_REQUEST['txtCondiciones'];

        $get_txtFechaInicio = !empty($_REQUEST['txtFechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaInicio'])) : null;
        $get_txtFechaFin = !empty($_REQUEST['txtFechaFin']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaFin'])) : date('Y-m-d');
        $get_lstMoneda = $_REQUEST['lstMoneda'];



        $get_txt2FechaInicio = ($get_txtFechaInicio == "") ? "Desde el prinicipio" : $get_txtFechaInicio;
        $get_txt2FechaFin = ($get_txtFechaFin == "") ? "Hasta el fin" : $get_txtFechaFin;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $titulos = array('Nro', 'Padre', 'Monto', 'Saldo', 'Condicion', 'Nro Letra', 'Fecha Giro', 'F. Vencimiento', 'F. Pago', 'Situacion', 'Recepcion Letra');

        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAECECC')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $contador = 1;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "REPORTE - DETALLADO DE CREDITOS: " . $get_cmbCondVencimiento2);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "Fecha Reporte:")
                ->setCellValue('C' . ($contador), date('Y-m-d'));
        $contador++;

        //start cabecera
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $get_condiciones);
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':D' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':J' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "FECHA DESDE")
                ->setCellValue('C' . ($contador), "FECHA HASTA")
                ->setCellValue('E' . ($contador), "REPORTE")
                ->setCellValue('G' . ($contador), "ESTADO");
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':D' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':J' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $get_txt2FechaInicio)
                ->setCellValue('C' . ($contador), $get_txt2FechaFin)
                ->setCellValue('E' . ($contador), "CREDITOS")
                ->setCellValue('G' . ($contador), ($get_lstEstado == 1 ? 'VENCIDAS' : ($get_lstEstado == 2 ? 'POR VENCER' : 'TODOS')));
        $contador++;

        $reporte = $this->AutoLoadModel('reporte');
        $ordenGasto = $this->AutoLoadModel('ordengasto');
        $listado = $reporte->detalladoCelestium($get_txtFechaInicio, $get_txtFechaFin, $get_lstMoneda);
        $tam = count($listado);

        $tempVendedor = -1;
        $tempOrdenventa = -1;
        $tempOrdenCobro = -1;

        $TotalCreditoSoles = 0;
        $TotalCreditoDolares = 0;

        for ($i = 0; $i < $tam; $i++) {
            $moneda = 'S/. ';
            if ($listado[$i]['idmoneda'] == 2)
                $moneda = 'US $ ';
            if ($listado[$i]['idvendedor'] != $tempVendedor) {
                $contador = $contador + 2;
                $tempVendedor = $listado[$i]['idvendedor'];
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':J' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":J" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Vendedor: ")
                        ->setCellValue('C' . ($contador), $listado[$i]['vendedor']);
                $contador++;
            }
            if ($listado[$i]['idmoneda'] == 1) {
                $TotalCreditoSoles += $listado[$i]['saldodoc'];
            } else {
                $TotalCreditoDolares += $listado[$i]['saldodoc'];
            }
            if ($listado[$i]['idordenventa'] != $tempOrdenventa) {
                $contador++;
                $tempOrdenventa = $listado[$i]['idordenventa'];
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "C" . ($contador) . ":C" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "E" . ($contador) . ":E" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':G' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":B" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "D" . ($contador) . ":D" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "F" . ($contador) . ":G" . ($contador));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Orden Venta:")
                        ->setCellValue('B' . ($contador), $listado[$i]['codigov'])
                        ->setCellValue('C' . ($contador), "Fecha Venta:")
                        ->setCellValue('D' . ($contador), $listado[$i]['fordenventa'])
                        ->setCellValue('E' . ($contador), "Situacion:")
                        ->setCellValue('F' . ($contador), $listado[$i]['situacionov']);
                $contador++;

                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':D' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':G' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "E" . ($contador) . ":E" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":D" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "F" . ($contador) . ":G" . ($contador));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Razon Social:")
                        ->setCellValue('B' . ($contador), $listado[$i]['razonsocial'])
                        ->setCellValue('E' . ($contador), "R.U.C.:")
                        ->setCellValue('F' . ($contador), $listado[$i]['ruc']);
                $contador++;
            }
            if ($listado[$i]['idordencobro'] != $tempOrdenCobro) {
                $contador++;
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "DETALLE DE LA PROGRAMACION DE PAGOS");

                $contador++;
                $tempOrdenCobro = $listado[$i]['idordencobro'];
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':C' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":A" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "D" . ($contador) . ":D" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "G" . ($contador) . ":G" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "I" . ($contador) . ":I" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":B" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "E" . ($contador) . ":E" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "H" . ($contador) . ":H" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "J" . ($contador) . ":J" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Monto Total:")
                        ->setCellValue('B' . ($contador), $moneda . $listado[$i]['importeordencobro'])
                        ->setCellValue('D' . ($contador), "Saldo:")
                        ->setCellValue('E' . ($contador), $moneda . $listado[$i]['saldoordencobro'])
                        ->setCellValue('G' . ($contador), "Fecha Emision:")
                        ->setCellValue('H' . ($contador), $listado[$i]['femision'])
                        ->setCellValue('I' . ($contador), "Situacion:")
                        ->setCellValue('J' . ($contador), $listado[$i]['situacionoc']);
                $contador++;

                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Nro")
                        ->setCellValue('B' . ($contador), "Padre")
                        ->setCellValue('C' . ($contador), "Monto")
                        ->setCellValue('D' . ($contador), "Saldo")
                        ->setCellValue('E' . ($contador), "Condicion")
                        ->setCellValue('F' . ($contador), "Nro Letra")
                        ->setCellValue('G' . ($contador), "F. Vencimiento")
                        ->setCellValue('H' . ($contador), "Situacion")
                        ->setCellValue('I' . ($contador), "Nro Unico")
                        ->setCellValue('J' . ($contador), "Recepcion Letra");
                $contador++;
            }

            switch ($listado[$i]['formacobro']) {
                case '1': $formacobro = "Contado";
                    break;
                case '2': $formacobro = "Crédito";
                    break;
                case '3': $formacobro = "Letras";
                    break;
            }

            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":J" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $listado[$i]['iddetalleordencobro'])
                    ->setCellValue('B' . ($contador), $listado[$i]['idpadre'])
                    ->setCellValue('C' . ($contador), $moneda . number_format($listado[$i]['importedoc'], 2))
                    ->setCellValue('D' . ($contador), $moneda . number_format($listado[$i]['saldodoc'], 2))
                    ->setCellValue('E' . ($contador), $formacobro)
                    ->setCellValue('F' . ($contador), $listado[$i]['numeroletra'])
                    ->setCellValue('G' . ($contador), $listado[$i]['fvencimiento'])
                    ->setCellValue('H' . ($contador), $listado[$i]['situacionoc'])
                    ->setCellValue('I' . ($contador), $listado[$i]['numerounico'])
                    ->setCellValue('J' . ($contador), $listado[$i]['recepletra']);
            $contador++;
        }

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':C' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "MONTOS TOTALES");

        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), " ")
                ->setCellValue('B' . ($contador), "SOLES")
                ->setCellValue('C' . ($contador), "DOLARES")
        ;
        $contador++;

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "CREDITOS")
                ->setCellValue('B' . ($contador), 'S/. ' . number_format($TotalCreditoSoles, 2))
                ->setCellValue('C' . ($contador), 'US $ ' . number_format($TotalCreditoDolares, 2));

        $contador++;

        $objPHPExcel->getActiveSheet()->setTitle('Reporte_Detallado_de_Creditos');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function resumendetalladodeletras() {
        set_time_limit(1500);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reporte_detalladodeletras.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $get_condiciones = $_REQUEST['txtCondiciones'];

        $get_txtFechaInicio = !empty($_REQUEST['txtFechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaInicio'])) : null;
        $get_txtFechaFin = !empty($_REQUEST['txtFechaFinal']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaFinal'])) : date('Y-m-d');
        $cmtEtapa = $_REQUEST['lstEtapa'];
        $get_lstPrincipal = $_REQUEST['lstCategoriaPrincipal'];
        $get_lstCategoria = $_REQUEST['lstCategoria'];
        $get_lstZona = $_REQUEST['lstZona'];
        $get_lstRecepcionLetras = $_REQUEST['lstRecepcionLetras'];
        $get_txtIdCliente = $_REQUEST['txtIdCliente'];
        $get_txtIdOrdenVenta = $_REQUEST['txtIdOrdenVenta'];
        $get_lstMoneda = $_REQUEST['lstMoneda'];
        $get_txt2FechaInicio = ($get_txtFechaInicio == "") ? "Desde el prinicipio" : $get_txtFechaInicio;
        $get_txt2FechaFin = ($get_txtFechaFin == "") ? "Hasta el fin" : $get_txtFechaFin;
        if ($get_lstRecepcionLetras == "") {
            $get_txtlstRecepcionLetras = "TODAS";
        } else if ($get_lstRecepcionLetras == "1") {
            $get_txtlstRecepcionLetras = "ENVIADAS AL BANCO";
        } else if ($get_lstRecepcionLetras == "2") {
            $get_txtlstRecepcionLetras = "SIN ENVIAR AL BANCO";
        } else if ($get_lstRecepcionLetras == "3") {
            $get_txtlstRecepcionLetras = "PRODUCTO";
        } else if ($get_lstRecepcionLetras == "4") {
            $get_txtlstRecepcionLetras = "PROTESTADAS";
        }
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $titulos = array('Nro', 'RUC', 'CLIENTE', 'DEPARTAMENTO', 'DISTRITO', 'DIRECCION', 'ORDEN VENTA', 'FECHA DE VENTA', 'SITUACION', 'SOLES', 'DOLARES');

        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
            )
        ));

        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_LEFT,
            )
        ));

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
        ));

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                'left' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
        ));

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
        ));

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                'left' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
        ));

        $sharedStyleTitulo = new PHPExcel_Style();
        $sharedStyleTitulo->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ), 'font' => array(
                'size' => 14
            )
        ));


        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $contador = 1;
        
        $complementotitulo = "";
        if ($cmtEtapa == 1) {
            $complementotitulo = " ANTES DE LA PANDEMIA";
        } else if ($cmtEtapa == 2) {
            $complementotitulo = " DESPUES DE LA PANDEMIA";
        }

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':H' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyleTitulo, "A" . ($contador) . ":H" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":H" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":H" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "FORMATO DE RESUMEN DE LETRAS PROTESTADAS" . $complementotitulo);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $contador++;
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':E' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':H' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . $contador . ':K' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "E" . ($contador) . ":H" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "I" . ($contador) . ":I" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "C" . ($contador) . ":E" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "G" . ($contador) . ":H" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "J" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "ZONA: ")
                ->setCellValue('C' . ($contador), $get_condiciones)
                ->setCellValue('F' . ($contador), "DESDE: ")
                ->setCellValue('G' . ($contador), $get_txt2FechaInicio)
                ->setCellValue('I' . ($contador), "HASTA: ")
                ->setCellValue('J' . ($contador), $get_txt2FechaFin);
        $contador++;
        $reporte = $this->AutoLoadModel('reporte');
        $listado = $reporte->resumenDetalladoLetrasProtestadas($cmtEtapa, $get_txtFechaInicio, $get_txtFechaFin, $get_lstPrincipal, $get_lstCategoria, $get_lstZona, $get_txtIdCliente, $get_txtIdOrdenVenta, $get_lstMoneda);
        $saldoProtestadoDolares = 0;
        $saldoProtestadoSoles = 0;

        $tam = count($listado);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $titulos[0])
                ->setCellValue('B' . ($contador), $titulos[1])
                ->setCellValue('C' . ($contador), $titulos[2])
                ->setCellValue('D' . ($contador), $titulos[3])
                ->setCellValue('E' . ($contador), $titulos[4])
                ->setCellValue('F' . ($contador), $titulos[5])
                ->setCellValue('G' . ($contador), $titulos[6])
                ->setCellValue('H' . ($contador), $titulos[7])
                ->setCellValue('I' . ($contador), $titulos[8])
                ->setCellValue('J' . ($contador), $titulos[9])
                ->setCellValue('K' . ($contador), $titulos[10]);
        $contador++;

        $tempOrdenventa = $listado[0]['idordenventa'];
        $nroFila = 1;

        $TempProtestadoSoles = 0;
        $TempProtestadoDolares = 0;

        for ($i = 0; $i < $tam; $i++) {
            if ($tempOrdenventa != $listado[$i]['idordenventa']) {
                $tempOrdenventa = $listado[$i]['idordenventa'];
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":B" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle4, "C" . ($contador) . ":F" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "G" . ($contador) . ":I" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "J" . ($contador) . ":K" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $nroFila)
                        ->setCellValue('B' . ($contador), $listado[$i - 1]['ruc'])
                        ->setCellValue('C' . ($contador), (html_entity_decode($listado[$i - 1]['razonsocial'], ENT_QUOTES, 'UTF-8')))
                        ->setCellValue('D' . ($contador), $listado[$i - 1]['nombredepartamento'])
                        ->setCellValue('E' . ($contador), $listado[$i - 1]['nombredistrito'])
                        ->setCellValue('F' . ($contador), $listado[$i - 1]['direccion'])
                        ->setCellValue('G' . ($contador), $listado[$i - 1]['codigov'])
                        ->setCellValue('H' . ($contador), $listado[$i - 1]['fordenventa'])
                        ->setCellValue('I' . ($contador), $listado[$i - 1]['situacionov'])
                        ->setCellValue('J' . ($contador), 'S/ ' . number_format($TempProtestadoSoles, 2))
                        ->setCellValue('K' . ($contador), 'US $. ' . number_format($TempProtestadoDolares, 2));
                $TempProtestadoSoles = 0;
                $TempProtestadoDolares = 0;
                $contador++;
                $nroFila++;
            }
            if ($listado[$i]['idmoneda'] == 1) {
                $moneda = 'S/. ';
                $TempProtestadoSoles += $listado[$i]['saldodoc']; // - $pagosCredito[0]['suma'];
                $saldoProtestadoSoles += $listado[$i]['saldodoc']; // - $pagosCredito[0]['suma'];
            } else if ($listado[$i]['idmoneda'] == 2) {
                $TempProtestadoDolares += $listado[$i]['saldodoc']; // - $pagosCredito[0]['suma'];
                $saldoProtestadoDolares += $listado[$i]['saldodoc']; // - $pagosCredito[0]['suma'];
                $moneda = 'US $ ';
            }
        }
        if ($tempOrdenventa != $listado[$i]['idordenventa']) {
            $tempOrdenventa = $listado[$i]['idordenventa'];
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":B" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle4, "C" . ($contador) . ":F" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "G" . ($contador) . ":I" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "J" . ($contador) . ":K" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $nroFila)
                    ->setCellValue('B' . ($contador), $listado[$i - 1]['ruc'])
                    ->setCellValue('C' . ($contador), (html_entity_decode($listado[$i - 1]['razonsocial'], ENT_QUOTES, 'UTF-8')))
                    ->setCellValue('D' . ($contador), $listado[$i - 1]['nombredepartamento'])
                    ->setCellValue('E' . ($contador), $listado[$i - 1]['nombredistrito'])
                    ->setCellValue('F' . ($contador), $listado[$i - 1]['direccion'])
                    ->setCellValue('G' . ($contador), $listado[$i - 1]['codigov'])
                    ->setCellValue('H' . ($contador), $listado[$i - 1]['fordenventa'])
                    ->setCellValue('I' . ($contador), $listado[$i - 1]['situacionov'])
                    ->setCellValue('J' . ($contador), 'S/ ' . number_format($TempProtestadoSoles, 2))
                    ->setCellValue('K' . ($contador), 'US $. ' . number_format($TempProtestadoDolares, 2));
            $TempProtestadoSoles = 0;
            $TempProtestadoDolares = 0;
            $contador++;
        }

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':I' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "F" . ($contador) . ":I" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "J" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("F" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('F' . ($contador), "MONTOS TOTALES: ")
                ->setCellValue('J' . ($contador), 'S/ ' . number_format($saldoProtestadoSoles, 2))
                ->setCellValue('K' . ($contador), 'US $. ' . number_format($saldoProtestadoDolares, 2));

        $objPHPExcel->getActiveSheet()->setTitle('Reporte_Detallado_Letras');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    public function detalladodeletras() {
        set_time_limit(1500);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reporte_detalladodeletras.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre; 
        $get_condiciones = $_REQUEST['txtCondiciones'];
        $get_txtFechaInicio = !empty($_REQUEST['txtFechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaInicio'])) : null;
        $get_txtFechaFin = !empty($_REQUEST['txtFechaFinal']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaFinal'])) : date('Y-m-d');
        /* $get_txtFechaInicio = $_REQUEST['txtFechaInicio'];
          $get_txtFechaFin = $_REQUEST['txtFechaFin']; */

        $get_lstPrincipal = $_REQUEST['lstCategoriaPrincipal'];
        $get_lstCategoria = $_REQUEST['lstCategoria'];
        $get_lstZona = $_REQUEST['lstZona'];
        $get_lstRecepcionLetras = $_REQUEST['lstRecepcionLetras'];
        $get_txtIdCliente = $_REQUEST['txtIdCliente'];
        $get_txtIdOrdenVenta = $_REQUEST['txtIdOrdenVenta'];
        $get_lstMoneda = $_REQUEST['lstMoneda'];
        $cmtEtapa = $_REQUEST['lstEtapa'];
        $get_txt2FechaInicio = ($get_txtFechaInicio == "") ? "Desde el prinicipio" : $get_txtFechaInicio;
        $get_txt2FechaFin = ($get_txtFechaFin == "") ? "Hasta el fin" : $get_txtFechaFin;
        if ($get_lstRecepcionLetras == "") {
            $get_txtlstRecepcionLetras = "TODAS";
        } else if ($get_lstRecepcionLetras == "1") {
            $get_txtlstRecepcionLetras = "ENVIADAS AL BANCO";
        } else if ($get_lstRecepcionLetras == "2") {
            $get_txtlstRecepcionLetras = "SIN ENVIAR AL BANCO";
        } else if ($get_lstRecepcionLetras == "3") {
            $get_txtlstRecepcionLetras = "PRODUCTO";
        } else if ($get_lstRecepcionLetras == "4") {
            $get_txtlstRecepcionLetras = "PROTESTADAS";
        }
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $titulos = array('Nro', 'Padre', 'Monto', 'Saldo', 'Condicion', 'Nro Letra', 'Fecha Giro', 'F. Vencimiento', 'F. Pago', 'Situacion', 'Recepcion Letra');

        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAECECC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $contador = 1;
        
        $complementotitulo = "";
        if ($cmtEtapa == 1) {
            $complementotitulo = " ANTES DE LA PANDEMIA";
        } else if ($cmtEtapa == 2) {
            $complementotitulo = " DESPUES DE LA PANDEMIA";
        }

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "REPORTE - DETALLADO DE LETRAS" . $complementotitulo);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "Fecha Reporte:")
                ->setCellValue('C' . ($contador), date('Y-m-d'));
        $contador++;

        //start cabecera
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $get_condiciones);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':D' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':J' . $contador);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "FECHA DESDE")
                ->setCellValue('C' . ($contador), "FECHA HASTA")
                ->setCellValue('E' . ($contador), "LETRAS")
                ->setCellValue('G' . ($contador), "ESTADO");
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':D' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':J' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $get_txt2FechaInicio)
                ->setCellValue('C' . ($contador), $get_txt2FechaFin)
                ->setCellValue('E' . ($contador), "LETRAS")
                ->setCellValue('G' . ($contador), $get_txtlstRecepcionLetras);
        $contador++;

        $saldoPaSoles = 0;
        $saldoSinPaSoles = 0;
        $saldoPaDolares = 0;
        $saldoSinPaDolares = 0;

        $tempVendedor = -1;

        $reporte = $this->AutoLoadModel('reporte');
        if ($get_lstRecepcionLetras == "1" || $get_lstRecepcionLetras == "2" || empty($get_lstRecepcionLetras)) {

            $listado = $reporte->listadoDetalladoLetras($cmtEtapa, $get_txtFechaInicio, $get_txtFechaFin, $get_lstPrincipal, $get_lstCategoria, $get_lstZona, $get_lstRecepcionLetras, $get_txtIdCliente, $get_txtIdOrdenVenta, $get_lstMoneda);

            $tempOrdenventa = -1;
            $tempOrdenCobro = -1;
            $tam = count($listado);

            for ($i = 0; $i < $tam; $i++) {
                if ($listado[$i]['recepletra'] == 'PA') {
                    if ($listado[$i]['idmoneda'] == 1) {
                        $saldoPaSoles += $listado[$i]['saldodoc'];
                    } else if ($listado[$i]['idmoneda'] == 2) {
                        $saldoPaDolares += $listado[$i]['saldodoc'];
                    }
                } else {
                    if ($listado[$i]['idmoneda'] == 1) {
                        $saldoSinPaSoles += $listado[$i]['saldodoc'];
                    } else if ($listado[$i]['idmoneda'] == 2) {
                        $saldoSinPaDolares += $listado[$i]['saldodoc'];
                    }
                }

                $moneda = 'S/. ';
                if ($listado[$i]['idmoneda'] == 2)
                    $moneda = 'US $ ';
                if ($listado[$i]['idvendedor'] != $tempVendedor) {
                    $contador = $contador + 2;
                    $tempVendedor = $listado[$i]['idvendedor'];
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':J' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":J" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Vendedor:")
                            ->setCellValue('C' . ($contador), $listado[$i]['vendedor']);
                    $contador++;
                }
                if ($listado[$i]['idordenventa'] != $tempOrdenventa) {
                    $contador++;
                    $tempOrdenventa = $listado[$i]['idordenventa'];
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "C" . ($contador) . ":C" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "E" . ($contador) . ":E" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);

                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':G' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":B" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "D" . ($contador) . ":D" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "F" . ($contador) . ":G" . ($contador));
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Orden Venta:")
                            ->setCellValue('B' . ($contador), $listado[$i]['codigov'])
                            ->setCellValue('C' . ($contador), "Fecha Venta:")
                            ->setCellValue('D' . ($contador), $listado[$i]['fordenventa'])
                            ->setCellValue('E' . ($contador), "Situacion:")
                            ->setCellValue('F' . ($contador), $listado[$i]['situacionov']);
                    $contador++;

                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':D' . $contador);
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':G' . $contador);

                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFill()->setRotation(1);

                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "E" . ($contador) . ":E" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);

                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":D" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "F" . ($contador) . ":G" . ($contador));
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Razon Social:")
                            ->setCellValue('B' . ($contador), $listado[$i]['razonsocial'])
                            ->setCellValue('E' . ($contador), "R.U.C.:")
                            ->setCellValue('F' . ($contador), $listado[$i]['ruc']);
                    $contador++;
                }

                if ($listado[$i]['idordencobro'] != $tempOrdenCobro) {
                    $contador++;
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "DETALLE DE LA PROGRAMACION DE PAGOS");
                    $contador++;

                    $tempOrdenCobro = $listado[$i]['idordencobro'];
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':C' . $contador);
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":A" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "D" . ($contador) . ":D" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "G" . ($contador) . ":G" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "I" . ($contador) . ":I" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":B" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "E" . ($contador) . ":E" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "H" . ($contador) . ":H" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "J" . ($contador) . ":J" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Monto Total:")
                            ->setCellValue('B' . ($contador), $moneda . $listado[$i]['importeordencobro'])
                            ->setCellValue('D' . ($contador), "Saldo:")
                            ->setCellValue('E' . ($contador), $moneda . $listado[$i]['saldoordencobro'])
                            ->setCellValue('G' . ($contador), "Fecha Emision:")
                            ->setCellValue('H' . ($contador), $listado[$i]['femision'])
                            ->setCellValue('I' . ($contador), "Situacion:")
                            ->setCellValue('J' . ($contador), $listado[$i]['situacionoc']);
                    $contador++;

                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Nroaaaaaaa")
                            ->setCellValue('B' . ($contador), "Padre")
                            ->setCellValue('C' . ($contador), "Monto")
                            ->setCellValue('D' . ($contador), "Saldo")
                            ->setCellValue('E' . ($contador), "Condicion")
                            ->setCellValue('F' . ($contador), "Nro Letra")
                            ->setCellValue('G' . ($contador), "F. Vencimiento")
                            ->setCellValue('H' . ($contador), "Situacion")
                            ->setCellValue('I' . ($contador), "Nro Unico")
                            ->setCellValue('J' . ($contador), "Recepcion Letra");
                    $contador++;
                }

                switch ($listado[$i]['formacobro']) {
                    case '1': $formacobro = "Contado";
                        break;
                    case '2': $formacobro = "Crédito";
                        break;
                    case '3': $formacobro = "Letras";
                        break;
                }
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":J" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $listado[$i]['iddetalleordencobro'])
                        ->setCellValue('B' . ($contador), $listado[$i]['idpadre'])
                        ->setCellValue('C' . ($contador), $moneda . $listado[$i]['importedoc'])
                        ->setCellValue('D' . ($contador), $moneda . $listado[$i]['saldodoc'])
                        ->setCellValue('E' . ($contador), $formacobro)
                        ->setCellValue('F' . ($contador), $listado[$i]['numeroletra'])
                        ->setCellValue('G' . ($contador), $listado[$i]['fvencimiento'])
                        ->setCellValue('H' . ($contador), $listado[$i]['situacionoc'])
                        ->setCellValue('I' . ($contador), $listado[$i]['numerounico'])
                        ->setCellValue('J' . ($contador), $listado[$i]['recepletra']);

                $contador++;
            }
        } else if ($get_lstRecepcionLetras == "3" || empty($get_lstRecepcionLetras)) {
            $listado = $reporte->DetalladoLetrasXProducto($get_txtFechaInicio, $get_txtFechaFin, $get_lstPrincipal, $get_lstCategoria, $get_lstZona, $get_txtIdCliente, $get_txtIdOrdenVenta, $get_lstMoneda, "");
            // start producto
            $tempOrdenventa = -1;
            $tempOrdenCobro = -1;
            $tam = count($listado);

            $saldoProductoSoles_cl = 0;
            $saldoProductoSoles_bbva = 0;
            $saldoProductoSoles_bcp = 0;
            $saldoProductoDolares_cl = 0;
            $saldoProductoDolares_bbva = 0;
            $saldoProductoDolares_bcp = 0;

            $TempCondicion = "";
            $nroVuelta = 0;

            while ($nroVuelta < 3) {
                for ($i = 0; $i < $tam; $i++) {
                    $mostrarExcel = 0;
                    if ($listado[$i]['numerounico'] == $TempCondicion) {
                        $mostrarExcel = 1;
                        if ($listado[$i]['idmoneda'] == 1) {
                            if ($TempCondicion == "")
                                $saldoProductoSoles_cl += $listado[$i]['saldodoc'];
                            if ($TempCondicion == "BBVA")
                                $saldoProductoSoles_bbva += $listado[$i]['saldodoc'];
                            if ($TempCondicion == "BCP")
                                $saldoProductoSoles_bcp += $listado[$i]['saldodoc'];
                        } else {
                            if ($TempCondicion == "")
                                $saldoProductoDolares_cl += $listado[$i]['saldodoc'];
                            if ($TempCondicion == "BBVA")
                                $saldoProductoDolares_bbva += $listado[$i]['saldodoc'];
                            if ($TempCondicion == "BCP")
                                $saldoProductoDolares_bcp += $listado[$i]['saldodoc'];
                        }
                    }

                    if ($mostrarExcel == 1) {
                        $moneda = 'S/. ';
                        if ($listado[$i]['idmoneda'] == 2)
                            $moneda = 'US $ ';
                        if ($listado[$i]['idvendedor'] != $tempVendedor) {
                            $contador = $contador + 2;
                            $tempVendedor = $listado[$i]['idvendedor'];
                            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
                            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':J' . $contador);
                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":J" . ($contador));
                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
                            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                            $objPHPExcel->setActiveSheetIndex(0)
                                    ->setCellValue('A' . ($contador), "Vendedor:")
                                    ->setCellValue('C' . ($contador), $listado[$i]['vendedor']);
                            $contador++;
                        }
                        if ($listado[$i]['idordenventa'] != $tempOrdenventa) {
                            $contador++;
                            $tempOrdenventa = $listado[$i]['idordenventa'];
                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
                            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFont()->setBold(true);
                            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFill()->setRotation(1);
                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "C" . ($contador) . ":C" . ($contador));
                            $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
                            $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "E" . ($contador) . ":E" . ($contador));
                            $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
                            $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);

                            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':G' . $contador);
                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":B" . ($contador));
                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "D" . ($contador) . ":D" . ($contador));
                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "F" . ($contador) . ":G" . ($contador));
                            $objPHPExcel->setActiveSheetIndex(0)
                                    ->setCellValue('A' . ($contador), "Orden Venta:")
                                    ->setCellValue('B' . ($contador), $listado[$i]['codigov'])
                                    ->setCellValue('C' . ($contador), "Fecha Venta:")
                                    ->setCellValue('D' . ($contador), $listado[$i]['fordenventa'])
                                    ->setCellValue('E' . ($contador), "Situacion:")
                                    ->setCellValue('F' . ($contador), $listado[$i]['situacionov']);
                            $contador++;

                            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':D' . $contador);
                            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':G' . $contador);

                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
                            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFont()->setBold(true);
                            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFill()->setRotation(1);

                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "E" . ($contador) . ":E" . ($contador));
                            $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
                            $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);

                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":D" . ($contador));
                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "F" . ($contador) . ":G" . ($contador));
                            $objPHPExcel->setActiveSheetIndex(0)
                                    ->setCellValue('A' . ($contador), "Razon Social:")
                                    ->setCellValue('B' . ($contador), $listado[$i]['razonsocial'])
                                    ->setCellValue('E' . ($contador), "R.U.C.:")
                                    ->setCellValue('F' . ($contador), $listado[$i]['ruc']);
                            $contador++;
                        }

                        if ($listado[$i]['idordencobro'] != $tempOrdenCobro) {
                            $contador++;
                            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
                            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                            $objPHPExcel->setActiveSheetIndex(0)
                                    ->setCellValue('A' . ($contador), "DETALLE DE LA PROGRAMACION DE PAGOS");
                            $contador++;

                            $tempOrdenCobro = $listado[$i]['idordencobro'];
                            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':D' . $contador);
                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":A" . ($contador));
                            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFont()->setBold(true);
                            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFill()->setRotation(1);
                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "C" . ($contador) . ":C" . ($contador));
                            $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
                            $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "E" . ($contador) . ":E" . ($contador));
                            $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
                            $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);
                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "G" . ($contador) . ":G" . ($contador));
                            $objPHPExcel->getActiveSheet()->getStyle("G" . ($contador) . ":G" . ($contador))->getFont()->setBold(true);
                            $objPHPExcel->getActiveSheet()->getStyle("G" . ($contador) . ":G" . ($contador))->getFill()->setRotation(1);
                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "H" . ($contador) . ":H" . ($contador));
                            $objPHPExcel->setActiveSheetIndex(0)
                                    ->setCellValue('A' . ($contador), "Monto Total:")
                                    ->setCellValue('B' . ($contador), $moneda . $listado[$i]['importeordencobro'])
                                    ->setCellValue('C' . ($contador), "Saldo:")
                                    ->setCellValue('D' . ($contador), $moneda . $listado[$i]['saldoordencobro'])
                                    ->setCellValue('E' . ($contador), "Fecha Emision:")
                                    ->setCellValue('F' . ($contador), $listado[$i]['femision'])
                                    ->setCellValue('G' . ($contador), "Situacion:")
                                    ->setCellValue('H' . ($contador), $listado[$i]['situacionoc']);
                            $contador++;

                            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
                            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                            $objPHPExcel->setActiveSheetIndex(0)
                                    ->setCellValue('A' . ($contador), "Nro")
                                    ->setCellValue('B' . ($contador), "Padre")
                                    ->setCellValue('C' . ($contador), "Monto")
                                    ->setCellValue('D' . ($contador), "Saldo")
                                    ->setCellValue('E' . ($contador), "Condicion")
                                    ->setCellValue('F' . ($contador), "Nro Letra")
                                    ->setCellValue('G' . ($contador), "F. Vencimiento")
                                    ->setCellValue('H' . ($contador), "Situacion")
                                    ->setCellValue('I' . ($contador), "Nro Unico")
                                    ->setCellValue('J' . ($contador), "Recepcion Letra");
                            $contador++;
                        }

                        switch ($listado[$i]['formacobro']) {
                            case '1': $formacobro = "Contado";
                                break;
                            case '2': $formacobro = "Crédito";
                                break;
                            case '3': $formacobro = "Letras";
                                break;
                        }
                        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":J" . ($contador));
                        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                        $objPHPExcel->setActiveSheetIndex(0)
                                ->setCellValue('A' . ($contador), $listado[$i]['iddetalleordencobro'])
                                ->setCellValue('B' . ($contador), $listado[$i]['idpadre'])
                                ->setCellValue('C' . ($contador), $moneda . $listado[$i]['importedoc'])
                                ->setCellValue('D' . ($contador), $moneda . $listado[$i]['saldodoc'])
                                ->setCellValue('E' . ($contador), $formacobro)
                                ->setCellValue('F' . ($contador), $listado[$i]['numeroletra'])
                                ->setCellValue('G' . ($contador), $listado[$i]['fvencimiento'])
                                ->setCellValue('H' . ($contador), $listado[$i]['situacionoc'])
                                ->setCellValue('I' . ($contador), $listado[$i]['numerounico'])
                                ->setCellValue('J' . ($contador), $listado[$i]['recepletra']);

                        $contador++;
                    }
                }
                $nroVuelta++;
                if ($nroVuelta == 1)
                    $TempCondicion = "BBVA";
                if ($nroVuelta == 2)
                    $TempCondicion = "BCP";
                $i = 0;
            }
            // end producto
        } else if ($get_lstRecepcionLetras == 4 || empty($get_lstRecepcionLetras)) {
            //$detalleordencobroingreso = $this->AutoLoadModel('detalleordencobroingreso');
            $listado = $reporte->detalladoLetrasProtestadas($cmtEtapa, $get_txtFechaInicio, $get_txtFechaFin, $get_lstPrincipal, $get_lstCategoria, $get_lstZona, $get_txtIdCliente, $get_txtIdOrdenVenta, $get_lstMoneda);
            $saldoProtestadoDolares = 0;
            $saldoProtestadoSoles = 0;
            $tam = count($listado);
            for ($i = 0; $i < $tam; $i++) {
                //start
                //$pagosCredito = $detalleordencobroingreso->pagos($listado[$i]['iddetalleordencobro']);
                if ($listado[$i]['idmoneda'] == 1) {
                    $moneda = 'S/. ';
                    $saldoProtestadoSoles += $listado[$i]['saldodoc']; // - $pagosCredito[0]['suma'];
                } else if ($listado[$i]['idmoneda'] == 2) {
                    $saldoProtestadoDolares += $listado[$i]['saldodoc']; // - $pagosCredito[0]['suma'];
                    $moneda = 'US $ ';
                }

                if ($listado[$i]['idvendedor'] != $tempVendedor) {
                    $contador = $contador + 2;
                    $tempVendedor = $listado[$i]['idvendedor'];
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':J' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":J" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Vendedor:")
                            ->setCellValue('C' . ($contador), $listado[$i]['vendedor']);
                    $contador++;
                }

                if ($listado[$i]['idordenventa'] != $tempOrdenventa) {
                    $contador++;
                    $tempOrdenventa = $listado[$i]['idordenventa'];
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "C" . ($contador) . ":C" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "E" . ($contador) . ":E" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);

                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':G' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":B" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "D" . ($contador) . ":D" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "F" . ($contador) . ":G" . ($contador));
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Orden Venta:")
                            ->setCellValue('B' . ($contador), $listado[$i]['codigov'])
                            ->setCellValue('C' . ($contador), "Fecha Venta:")
                            ->setCellValue('D' . ($contador), $listado[$i]['fordenventa'])
                            ->setCellValue('E' . ($contador), "Situacion:")
                            ->setCellValue('F' . ($contador), $listado[$i]['situacionov']);
                    $contador++;

                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':D' . $contador);
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':G' . $contador);

                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFill()->setRotation(1);

                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "E" . ($contador) . ":E" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);

                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":D" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "F" . ($contador) . ":G" . ($contador));
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Razon Social:")
                            ->setCellValue('B' . ($contador), $listado[$i]['razonsocial'])
                            ->setCellValue('E' . ($contador), "R.U.C.:")
                            ->setCellValue('F' . ($contador), $listado[$i]['ruc']);
                    $contador++;
                }

                if ($listado[$i]['idordencobro'] != $tempOrdenCobro) {
                    //START PADRE
                    $listadoPadre = $reporte->obtenerPadreOrdenCobro($listado[$i]['idpadre']);
                    $contador++;
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($contador) . ":J" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "LETRA PADRE");
                    $contador++;

                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':D' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($contador) . ":A" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":C" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "E" . ($contador) . ":E" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "G" . ($contador) . ":G" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("G" . ($contador) . ":G" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("G" . ($contador) . ":G" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "H" . ($contador) . ":H" . ($contador));
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Monto Total:")
                            ->setCellValue('B' . ($contador), $moneda . $listadoPadre[0]['importeordencobro'])
                            ->setCellValue('C' . ($contador), "Saldo:")
                            ->setCellValue('D' . ($contador), $moneda . $listadoPadre[0]['saldoordencobro'])
                            ->setCellValue('E' . ($contador), "Fecha Emision:")
                            ->setCellValue('F' . ($contador), $listadoPadre[0]['femision'])
                            ->setCellValue('G' . ($contador), "Situacion:")
                            ->setCellValue('H' . ($contador), $listadoPadre[0]['situacionoc']);
                    $contador++;

                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($contador) . ":J" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Nro")
                            ->setCellValue('B' . ($contador), "Padre")
                            ->setCellValue('C' . ($contador), "Monto")
                            ->setCellValue('D' . ($contador), "Saldo")
                            ->setCellValue('E' . ($contador), "Condicion")
                            ->setCellValue('F' . ($contador), "Nro Letra")
                            ->setCellValue('G' . ($contador), "F. Vencimiento")
                            ->setCellValue('H' . ($contador), "Situacion")
                            ->setCellValue('I' . ($contador), "Nro Unico")
                            ->setCellValue('J' . ($contador), "Recepcion Letra");
                    $contador++;
                    switch ($listadoPadre[0]['formacobro']) {
                        case '1': $formacobro = "Contado";
                            break;
                        case '2': $formacobro = "Crédito";
                            break;
                        case '3': $formacobro = "Letras";
                            break;
                    }
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":J" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), $listadoPadre[0]['iddetalleordencobro'])
                            ->setCellValue('B' . ($contador), $listadoPadre[0]['idpadre'])
                            ->setCellValue('C' . ($contador), $moneda . $listadoPadre[0]['importedoc'])
                            ->setCellValue('D' . ($contador), $moneda . $listadoPadre[0]['saldodoc'])
                            ->setCellValue('E' . ($contador), $formacobro)
                            ->setCellValue('F' . ($contador), $listadoPadre[0]['numeroletra'])
                            ->setCellValue('G' . ($contador), $listadoPadre[0]['fvencimiento'])
                            ->setCellValue('H' . ($contador), $listadoPadre[0]['situacion'] . ' ref (' . $listadoPadre[0]['referencia'] . ')')
                            ->setCellValue('I' . ($contador), $listadoPadre[0]['numerounico'])
                            ->setCellValue('J' . ($contador), $listadoPadre[0]['recepletra']);
                    //END PADRE

                    $contador++;
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "DETALLE DE LETRAS PROTESTADAS");
                    $contador++;

                    $tempOrdenCobro = $listado[$i]['idordencobro'];
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':D' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":A" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "C" . ($contador) . ":C" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "E" . ($contador) . ":E" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "G" . ($contador) . ":G" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("G" . ($contador) . ":G" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("G" . ($contador) . ":G" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "H" . ($contador) . ":H" . ($contador));
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Monto Total:")
                            ->setCellValue('B' . ($contador), $moneda . $listado[$i]['importeordencobro'])
                            ->setCellValue('C' . ($contador), "Saldo:")
                            ->setCellValue('D' . ($contador), $moneda . $listado[$i]['saldoordencobro'])
                            ->setCellValue('E' . ($contador), "Fecha Emision:")
                            ->setCellValue('F' . ($contador), $listado[$i]['femision'])
                            ->setCellValue('G' . ($contador), "Situacion:")
                            ->setCellValue('H' . ($contador), $listado[$i]['situacionoc']);
                    $contador++;

                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Nro")
                            ->setCellValue('B' . ($contador), "Padre")
                            ->setCellValue('C' . ($contador), "Monto")
                            ->setCellValue('D' . ($contador), "Saldo")
                            ->setCellValue('E' . ($contador), "Condicion")
                            ->setCellValue('F' . ($contador), "Nro Letra")
                            ->setCellValue('G' . ($contador), "F. Vencimiento")
                            ->setCellValue('H' . ($contador), "Situacion")
                            ->setCellValue('I' . ($contador), "Nro Unico")
                            ->setCellValue('J' . ($contador), "Recepcion Letra");
                    $contador++;
                }

                switch ($listado[$i]['formacobro']) {
                    case '1': $formacobro = "Contado";
                        break;
                    case '2': $formacobro = "Crédito";
                        break;
                    case '3': $formacobro = "Letras";
                        break;
                }
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":J" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $listado[$i]['iddetalleordencobro'])
                        ->setCellValue('B' . ($contador), $listado[$i]['idpadre'])
                        ->setCellValue('C' . ($contador), $moneda . $listado[$i]['importedoc'])
                        ->setCellValue('D' . ($contador), $moneda . $listado[$i]['saldodoc'])
                        ->setCellValue('E' . ($contador), $formacobro)
                        ->setCellValue('F' . ($contador), $listado[$i]['numeroletra'])
                        ->setCellValue('G' . ($contador), $listado[$i]['fvencimiento'])
                        ->setCellValue('H' . ($contador), $listado[$i]['situacionov'] . ' ref (' . $listado[$i]['referencia'] . ')')
                        ->setCellValue('I' . ($contador), $listado[$i]['numerounico'])
                        ->setCellValue('J' . ($contador), $listado[$i]['recepletra']);
                $contador++;
            }
        }

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':C' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "MONTOS TOTALES");
        if ($get_lstRecepcionLetras == 1 || $get_lstRecepcionLetras == 2 || empty($get_lstRecepcionLetras)) {
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), " ")
                    ->setCellValue('B' . ($contador), "SOLES")
                    ->setCellValue('C' . ($contador), "DOLARES")
            ;
            $contador++;

            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "ENVIADAS AL BANCO")
                    ->setCellValue('B' . ($contador), 'S/. ' . number_format($saldoPaSoles, 2))
                    ->setCellValue('C' . ($contador), 'US $ ' . number_format($saldoPaDolares, 2));
            $contador++;

            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "SIN ENVIAR AL BANCO")
                    ->setCellValue('B' . ($contador), 'S/. ' . number_format($saldoSinPaSoles, 2))
                    ->setCellValue('C' . ($contador), 'US $ ' . number_format($saldoSinPaDolares, 2));
            $contador++;


            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "TOTALES")
                    ->setCellValue('B' . ($contador), 'S/. ' . number_format($saldoPaSoles + $saldoSinPaSoles, 2))
                    ->setCellValue('C' . ($contador), 'US $ ' . number_format($saldoPaDolares + $saldoSinPaDolares, 2));
            $contador++;
        } else if ($get_lstRecepcionLetras == 4 || empty($get_lstRecepcionLetras)) {
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), " ")
                    ->setCellValue('B' . ($contador), "SOLES")
                    ->setCellValue('C' . ($contador), "DOLARES");
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "LETRAS PROTESTADAS:")
                    ->setCellValue('B' . ($contador), 'S/. ' . number_format($saldoProtestadoSoles, 2))
                    ->setCellValue('C' . ($contador), 'US $ ' . number_format($saldoProtestadoDolares, 2));
            $contador++;
        } else if ($get_lstRecepcionLetras == 3 || empty($get_lstRecepcionLetras)) {
            //start producto
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), " ")
                    ->setCellValue('B' . ($contador), "SOLES")
                    ->setCellValue('C' . ($contador), "DOLARES");
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "LETRAS PRODUCTO CL:")
                    ->setCellValue('B' . ($contador), 'S/. ' . number_format($saldoProductoSoles_cl, 2))
                    ->setCellValue('C' . ($contador), 'US $ ' . number_format($saldoProductoDolares_cl, 2));
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "LETRAS PRODUCTO BCP:")
                    ->setCellValue('B' . ($contador), 'S/. ' . number_format($saldoProductoSoles_bcp, 2))
                    ->setCellValue('C' . ($contador), 'US $ ' . number_format($saldoProductoDolares_bcp, 2));
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "LETRAS PRODUCTO BBVA:")
                    ->setCellValue('B' . ($contador), 'S/. ' . number_format($saldoProductoSoles_bbva, 2))
                    ->setCellValue('C' . ($contador), 'US $ ' . number_format($saldoProductoDolares_bbva, 2));
            $contador++;
            //end producto
        }

        $objPHPExcel->getActiveSheet()->setTitle('Reporte_Detallado_Letras');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function detalladocobranzapagada() {
        set_time_limit(1800);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reporte_cobranzapagada.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $txtFechaInicio = !empty($_REQUEST['txtFechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaInicio'])) : null;
        $txtFechaFin = !empty($_REQUEST['txtFechaFin']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaFin'])) : date('Y-m-d');
        $lstPrincipal = $_REQUEST['lstCategoriaPrincipal'];
        $lstCategoria = $_REQUEST['lstCategoria'];
        $lstZona = $_REQUEST['lstZona'];
        $lstMoneda = $_REQUEST['lstMoneda'];
        $txtIdCliente = $_REQUEST['txtIdCliente'];
        $txtIdOrdenVenta = $_REQUEST['txtIdOrdenVenta'];
        $cmbFormaPago = $_REQUEST['cmbFormaPago'];

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $titulos = array('Nro', 'Padre', 'Monto', 'Saldo', 'Condicion', 'Nro Letra', 'Fecha Giro', 'F. Vencimiento', 'F. Pago', 'Situacion', 'Recepcion Letra');

        $sharedStyle6 = new PHPExcel_Style();
        $sharedStyle6->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFBBCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            )
                )
        );

        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAECECC')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            )
                )
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            )
                )
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            )
                )
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $contador = 1;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "REPORTE - DETALLADO DE COBRANZA PAGADA");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':D' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "C" . ($contador) . ":D" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "B" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "E" . ($contador) . ":E" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "Fecha Inicio:")
                ->setCellValue('B' . ($contador), $txtFechaInicio)
                ->setCellValue('C' . ($contador), "Fecha Fin:")
                ->setCellValue('E' . ($contador), $txtFechaFin);
        $contador++;
        $cobranza = new Cobranza();
        $ingresos = $this->AutoLoadModel('ingresos');
        $listado = $cobranza->resumencobranzapagado($txtFechaInicio, $txtFechaFin, $lstPrincipal, $lstCategoria, $lstZona, $lstMoneda, $txtIdCliente, $txtIdOrdenVenta, $cmbFormaPago);
        $tam = count($listado);

        $filtroIngreso = " and wc_ingresos.montoasignado>0";
        $filtroIngreso .= !empty($txtFechaInicio) ? " and wc_ingresos.`fcobro`>='$txtFechaInicio'" : "";
        $filtroIngreso .= !empty($txtFechaFin) ? " and wc_ingresos.`fcobro`<='$txtFechaFin'" : "";

        $tempVendedor = -1;
        $tempOrdenventa = -1;
        $tempOrdenCobro = -1;

        $TotalPagadoSoles = 0;
        $TotalPagadoDolares = 0;

        for ($i = 0; $i < $tam; $i++) {
            $moneda = 'S/. ';
            if ($listado[$i]['idmoneda'] == 2)
                $moneda = 'US $ ';
            if ($listado[$i]['idvendedor'] != $tempVendedor) {
                $contador = $contador + 2;
                $tempVendedor = $listado[$i]['idvendedor'];
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . ($contador + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':J' . ($contador + 1));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":J" . ($contador + 1));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador + 1));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Vendedor: ")
                        ->setCellValue('C' . ($contador), $listado[$i]['vendedor']);
                $contador++;
                $contador++;
            }
            if ($listado[$i]['idmoneda'] == 1) {
                $TotalPagadoSoles += $listado[$i]['importedoc'];
            } else {
                $TotalPagadoDolares += $listado[$i]['importedoc'];
            }
            if ($listado[$i]['idordenventa'] != $tempOrdenventa) {
                $contador++;
                $tempOrdenventa = $listado[$i]['idordenventa'];
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "C" . ($contador) . ":C" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "E" . ($contador) . ":E" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':G' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":B" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "D" . ($contador) . ":D" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "F" . ($contador) . ":G" . ($contador));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Orden Venta:")
                        ->setCellValue('B' . ($contador), $listado[$i]['codigov'])
                        ->setCellValue('C' . ($contador), "Fecha Venta:")
                        ->setCellValue('D' . ($contador), $listado[$i]['fordenventa'])
                        ->setCellValue('E' . ($contador), "Situacion:")
                        ->setCellValue('F' . ($contador), $listado[$i]['situacionov']);
                $contador++;
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':D' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':G' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":A" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "E" . ($contador) . ":E" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":D" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "F" . ($contador) . ":G" . ($contador));
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Razon Social:")
                        ->setCellValue('B' . ($contador), $listado[$i]['razonsocial'])
                        ->setCellValue('E' . ($contador), "R.U.C.:")
                        ->setCellValue('F' . ($contador), $listado[$i]['ruc']);
                $contador++;
                $contador++;
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':K' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle6, "A" . ($contador) . ":K" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "LISTA DE INGRESOS ASIGNADOS");

                $contador++;
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle6, "A" . ($contador) . ":K" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Cobrador")
                        ->setCellValue('B' . ($contador), "Tipo Ingreso")
                        ->setCellValue('C' . ($contador), "M. Ingresado")
                        ->setCellValue('D' . ($contador), "M. Asignado")
                        ->setCellValue('E' . ($contador), "Saldo")
                        ->setCellValue('F' . ($contador), "M. Liberado")
                        ->setCellValue('G' . ($contador), "M. Anulado")
                        ->setCellValue('H' . ($contador), "F. Cobro")
                        ->setCellValue('I' . ($contador), "N° Recibo")
                        ->setCellValue('J' . ($contador), "N° Operacion")
                        ->setCellValue('K' . ($contador), "Observaciones");
                $contador++;
                $lstIngresos = $ingresos->listarIngresosConCobrador($listado[$i]['idordenventa'], $filtroIngreso);
                $tamIng = count($lstIngresos);
                for ($ii = 0; $ii < $tamIng; $ii++) {
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":K" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), ($lstIngresos[$ii]['nombres'] . ' ' . $lstIngresos[$ii]['apellidopaterno'] . ' ' . $lstIngresos[$ii]['apellidomaterno']))
                            ->setCellValue('B' . ($contador), $this->configIni("TipoIngreso", $lstIngresos[$ii]['tipocobro']))
                            ->setCellValue('C' . ($contador), $moneda . number_format($lstIngresos[$ii]['montoingresado'], 2))
                            ->setCellValue('D' . ($contador), $moneda . number_format($lstIngresos[$ii]['montoasignado'], 2))
                            ->setCellValue('E' . ($contador), $moneda . number_format($lstIngresos[$ii]['saldo'], 2))
                            ->setCellValue('F' . ($contador), $moneda . number_format($lstIngresos[$ii]['montoliberado'], 2))
                            ->setCellValue('G' . ($contador), $moneda . number_format($lstIngresos[$ii]['montoanulado'], 2))
                            ->setCellValue('H' . ($contador), $lstIngresos[$ii]['fcobro'])
                            ->setCellValue('I' . ($contador), $lstIngresos[$ii]['nrorecibo'])
                            ->setCellValue('J' . ($contador), $lstIngresos[$ii]['nrooperacion'])
                            ->setCellValue('K' . ($contador), $lstIngresos[$ii]['observaciones']);
                    $contador++;
                }
            }
            if ($listado[$i]['idordencobro'] != $tempOrdenCobro) {
                $contador++;
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "DETALLE DE LA PROGRAMACION DE PAGOS");
                $contador++;
                $tempOrdenCobro = $listado[$i]['idordencobro'];
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':C' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":A" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "D" . ($contador) . ":D" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "G" . ($contador) . ":G" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "I" . ($contador) . ":I" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":B" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "E" . ($contador) . ":E" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "H" . ($contador) . ":H" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "J" . ($contador) . ":J" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Monto Total:")
                        ->setCellValue('B' . ($contador), $moneda . number_format($listado[$i]['importeordencobro'], 2))
                        ->setCellValue('D' . ($contador), "Saldo:")
                        ->setCellValue('E' . ($contador), $moneda . number_format($listado[$i]['saldoordencobro'], 2))
                        ->setCellValue('G' . ($contador), "Fecha Emision:")
                        ->setCellValue('H' . ($contador), $listado[$i]['femision'])
                        ->setCellValue('I' . ($contador), "Situacion:")
                        ->setCellValue('J' . ($contador), $listado[$i]['situacionoc']);
                $contador++;
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Nro")
                        ->setCellValue('B' . ($contador), "Padre")
                        ->setCellValue('C' . ($contador), "Monto")
                        ->setCellValue('D' . ($contador), "Saldo")
                        ->setCellValue('E' . ($contador), "Condicion")
                        ->setCellValue('F' . ($contador), "Nro Letra")
                        ->setCellValue('G' . ($contador), "F. Vencimiento")
                        ->setCellValue('H' . ($contador), "Situacion")
                        ->setCellValue('I' . ($contador), "Nro Unico")
                        ->setCellValue('J' . ($contador), "Recepcion Letra");
                $contador++;
            }
            switch ($listado[$i]['formacobro']) {
                case '1': $formacobro = "Contado";
                    break;
                case '2': $formacobro = "Crédito";
                    break;
                case '3': $formacobro = "Letras";
                    break;
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":J" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $listado[$i]['iddetalleordencobro'])
                    ->setCellValue('B' . ($contador), $listado[$i]['idpadre'])
                    ->setCellValue('C' . ($contador), $moneda . number_format($listado[$i]['importedoc'], 2))
                    ->setCellValue('D' . ($contador), $moneda . number_format($listado[$i]['saldodoc'], 2))
                    ->setCellValue('E' . ($contador), $formacobro)
                    ->setCellValue('F' . ($contador), $listado[$i]['numeroletra'])
                    ->setCellValue('G' . ($contador), $listado[$i]['fvencimiento'])
                    ->setCellValue('H' . ($contador), (($listado[0]['situacion'] == '') ? 'pendiente ref (' . $listado[0]['referencia'] . ')' : $listado[0]['situacion'] . ' ref (' . $listado[0]['referencia'] . ')'))
                    ->setCellValue('I' . ($contador), $listado[$i]['numerounico'])
                    ->setCellValue('J' . ($contador), $listado[$i]['recepletra']);
            $contador++;
        }
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':C' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "MONTOS TOTALES");

        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), " ")
                ->setCellValue('B' . ($contador), "SOLES")
                ->setCellValue('C' . ($contador), "DOLARES")
        ;
        $contador++;

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "PAGADO: ")
                ->setCellValue('B' . ($contador), 'S/. ' . number_format($TotalPagadoSoles, 2))
                ->setCellValue('C' . ($contador), 'US $ ' . number_format($TotalPagadoDolares, 2));

        $contador++;
        $objPHPExcel->getActiveSheet()->setTitle('Detallado Cobranza Pagada');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    
    public function rankingingresos() {
        set_time_limit(1800);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'ranking_ingresos_x_cobrador.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $fechaInicio = !empty($_REQUEST['fechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['fechaInicio'])) : null;
        $fechaFinal = !empty($_REQUEST['fechaFinal']) ? date('Y-m-d', strtotime($_REQUEST['fechaFinal'])) : null;
        $nroRecibo = $_REQUEST['nroRecibo'];
        $idOrdenVenta = $_REQUEST['idOrdenVenta'];
        $idCliente = $_REQUEST['idCliente'];
        $idCobrador = $_REQUEST['idCobrador'];
        $idTipoCobro = $_REQUEST['idTipoCobro'];
        $simbolo = $_REQUEST['simbolo'];
        $monto = $_REQUEST['monto'];
        $cmbtipo = $_REQUEST['cmbTipo'];
        if ($idtipocobro != 1 && $idtipocobro != 3) {
            $cmbtipo = '';
        }
        $this->configIniTodo('TipoIngreso');
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $titulos = array('Nro', 'Padre', 'Monto', 'Saldo', 'Condicion', 'Nro Letra', 'Fecha Giro', 'F. Vencimiento', 'F. Pago', 'Situacion', 'Recepcion Letra');

        $sharedStyle6 = new PHPExcel_Style();
        $sharedStyle6->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFBBCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            ))
        );

        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAECECC')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            ))
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('N')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('O')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('P')->setAutoSize(true);
        
        $contador = 1;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':P' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":P" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "RANKING DE COBRANZAS GENERAL");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':D' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle6, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "C" . ($contador) . ":D" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "FECHA: ")
                ->setCellValue('C' . ($contador), $fechaInicio . " - " . $fechaFinal);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;

        $nombremoneda = "Soles";
        $moneda = "S/. ";

        for ($vuelta = 1; $vuelta <= 2; $vuelta++) {
            $contador++;
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':P' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle6, "A" . ($contador) . ":P" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "Ranking de Cobranza en " . $nombremoneda);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($contador) . ":P" . ($contador + 1));
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':A' . ($contador + 1));
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':B' . ($contador + 1));
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':C' . ($contador + 1));
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('D' . $contador . ':D' . ($contador + 1));
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':E' . ($contador + 1));
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':F' . ($contador + 1));
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':H' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('I' . $contador . ':J' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('K' . $contador . ':L' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('M' . $contador . ':M' . ($contador + 1));
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('N' . $contador . ':N' . ($contador + 1));
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('O' . $contador . ':O' . ($contador + 1));
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('P' . $contador . ':P' . ($contador + 1));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "Nro.")
                    ->setCellValue('B' . ($contador), "Cobrador")
                    ->setCellValue('C' . ($contador), "Total")
                    ->setCellValue('D' . ($contador), "Efectivo")
                    ->setCellValue('E' . ($contador), "LC Efectivo")
                    ->setCellValue('F' . ($contador), "LC DEPOSITO")
                    ->setCellValue('G' . ($contador), "R-CL")
                    ->setCellValue('I' . ($contador), "Cheque")
                    ->setCellValue('K' . ($contador), "Deposito")
                    ->setCellValue('M' . ($contador), "Por Devolucion")
                    ->setCellValue('N' . ($contador), "Tranferir de Orden de Venta")
                    ->setCellValue('O' . ($contador), "Por Letra Bancaria")
                    ->setCellValue('P' . ($contador), "Nota Credito");
            $contador++;

            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($contador) . ":P" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('G' . ($contador), "EFECTIVO")
                    ->setCellValue('H' . ($contador), "DEPOSITO")              
                    ->setCellValue('I' . ($contador), "BCP")
                    ->setCellValue('J' . ($contador), "BBVA")
                    ->setCellValue('K' . ($contador), "BCP")
                    ->setCellValue('L' . ($contador), "BBVA");
            $contador++;

            $ingresos = $this->AutoLoadModel('ingresos');
            $dataIngresos = $ingresos->rankingGeneralXVendedor($fechaInicio, $fechaFinal, $idOrdenVenta, $idCliente, $idCobrador, $idTipoCobro, $cmbtipo, $nroRecibo, $simbolo, $monto, $vuelta);
            $tam = count($dataIngresos);
            $total = 0;
            $totales[1][0] = 0.00;
            $totales[2][1] = 0.00;
            $totales[2][2] = 0.00;
            $totales[3][1] = 0.00;
            $totales[3][2] = 0.00;
            $totales[4][1] = 0.00;
            $totales[4][2] = 0.00;
            $totales[5][0] = 0.00;
            $totales[6][0] = 0.00;
            $totales[7][0] = 0.00;
            $totales[8][0] = 0.00;
            $totales[9][0] = 0.00;
            $totales[10][0] = 0;
            $totales[12][0] = 0;
            $totales[13][0] = 0;
            $totales[20][0] = 0; // R-CL
            for ($i = 0; $i < $tam; $i++) {
                $montos[1][0] = 0.00;
                $montos[2][1] = 0.00;
                $montos[2][2] = 0.00;
                $montos[3][1] = 0.00;
                $montos[3][2] = 0.00;
                $montos[4][1] = 0.00;
                $montos[4][2] = 0.00;
                $montos[5][0] = 0.00;
                $montos[6][0] = 0.00;
                $montos[7][0] = 0.00;
                $montos[8][0] = 0.00;
                $montos[9][0] = 0.00;
                $montos[10][0] = 0.00;
                $montos[12][0] = 0.00;
                $montos[13][0] = 0.00;
                
                $montos[20][1] = 0.00; // R-CL
                $montos[20][3] = 0.00; // R-CL
                
                $dataCobrador = $ingresos->rankingDetalladoXVendedor($fechaInicio, $fechaFinal, $idOrdenVenta, $idCliente, $dataIngresos[$i]['idcobrador'], $idTipoCobro, $cmbtipo, $nroRecibo, $simbolo, $monto, $vuelta);
                $tamanio = count($dataCobrador);
                for ($j = 0; $j < $tamanio; $j++) {
                    if ($dataCobrador[$j]['tipo'] != '' && ($dataCobrador[$j]['tipocobro'] == 1 || $dataCobrador[$j]['tipocobro'] == 3)) {
                        if ($dataCobrador[$j]['tipo'] == 'R-CL') {
                            $montos[20][$dataCobrador[$j]['tipocobro']] += $dataCobrador[$j]['totalasignado'];
                        }
                    } else if ($dataCobrador[$j]['tipocobro'] == 2) {
                        $montos[$dataCobrador[$j]['tipocobro']][$dataCobrador[$j]['idbancocheque']] += $dataCobrador[$j]['totalasignado'];
                    } else if ($dataCobrador[$j]['tipocobro'] == 12 || $dataCobrador[$j]['tipocobro'] == 13) {
                        $montos[$dataCobrador[$j]['tipocobro']][0] += $dataCobrador[$j]['totalasignado'];
                    } else {
                        $montos[$dataCobrador[$j]['tipocobro']][$dataCobrador[$j]['idbanco']] += $dataCobrador[$j]['totalasignado'];
                    }
                }
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":P" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), " " . ($i + 1))
                        ->setCellValue('B' . ($contador), $dataIngresos[$i]['nombrecobrador'])
                        ->setCellValue('C' . ($contador), $moneda . number_format($dataIngresos[$i]['totalcobrado'], 2))
                        ->setCellValue('D' . ($contador), $moneda . number_format($montos[1][0], 2))
                        ->setCellValue('E' . ($contador), $moneda . number_format($montos[12][0], 2))
                        ->setCellValue('F' . ($contador), $moneda . number_format($montos[13][0], 2))
                        ->setCellValue('G' . ($contador), $moneda . number_format($montos[20][1], 2))
                        ->setCellValue('H' . ($contador), $moneda . number_format($montos[20][3], 2))
                       
                        ->setCellValue('I' . ($contador), $moneda . number_format($montos[2][1], 2))
                        ->setCellValue('J' . ($contador), $moneda . number_format($montos[2][2], 2))
                        ->setCellValue('K' . ($contador), $moneda . number_format($montos[3][1], 2))
                        ->setCellValue('L' . ($contador), $moneda . number_format($montos[3][2], 2))
                        
                        ->setCellValue('M' . ($contador), $moneda . number_format($montos[7][0], 2))
                        ->setCellValue('N' . ($contador), $moneda . number_format($montos[8][0], 2))
                        ->setCellValue('O' . ($contador), $moneda . number_format($montos[9][0], 2))
                        ->setCellValue('P' . ($contador), $moneda . number_format($montos[10][0], 2));
                $contador++;
                $total += $dataIngresos[$i]['totalcobrado'];
                $totales[1][0] += $montos[1][0];
                $totales[2][1] += $montos[2][1];
                $totales[2][2] += $montos[2][2];
                $totales[3][1] += $montos[3][1];
                $totales[3][2] += $montos[3][2];
                $totales[4][1] += $montos[4][1];
                $totales[4][2] += $montos[4][2];
                $totales[5][0] += $montos[5][0];
                $totales[6][0] += $montos[6][0];
                $totales[7][0] += $montos[7][0];
                $totales[8][0] += $montos[8][0];
                $totales[9][0] += $montos[9][0];
                $totales[10][0] += $montos[10][0];
                $totales[12][0] += $montos[12][0];
                $totales[13][0] += $montos[13][0];
                
                $totales[20][1] += $montos[20][1];
                $totales[20][3] += $montos[20][3];
                
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":P" . ($contador));
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "MONTO TOTAL COBRADO: ")
                    ->setCellValue('C' . ($contador), $moneda . number_format($total, 2))
                    ->setCellValue('D' . ($contador), $moneda . number_format($totales[1][0], 2))
                    ->setCellValue('E' . ($contador), $moneda . number_format($totales[12][0], 2))
                    ->setCellValue('F' . ($contador), $moneda . number_format($totales[13][0], 2))
                    ->setCellValue('G' . ($contador), $moneda . number_format($totales[20][1], 2))
                    ->setCellValue('H' . ($contador), $moneda . number_format($totales[20][3], 2))                  
                    ->setCellValue('I' . ($contador), $moneda . number_format($totales[2][1], 2))
                    ->setCellValue('J' . ($contador), $moneda . number_format($totales[2][2], 2))
                    ->setCellValue('K' . ($contador), $moneda . number_format($totales[3][1], 2))
                    ->setCellValue('L' . ($contador), $moneda . number_format($totales[3][2], 2))
                    ->setCellValue('M' . ($contador), $moneda . number_format($totales[7][0], 2))
                    ->setCellValue('N' . ($contador), $moneda . number_format($totales[8][0], 2))
                    ->setCellValue('O' . ($contador), $moneda . number_format($totales[9][0], 2))
                    ->setCellValue('P' . ($contador), $moneda . number_format($totales[10][0], 2));
            $contador++;
            $contador++;
            $nombremoneda = "Dolares";
            $moneda = "US $. ";
        }

        $objPHPExcel->getActiveSheet()->setTitle('Ranking Cobranzas');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);
        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    public function clientesregistrados() {
        set_time_limit(2000);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'clientes_regitrados.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $fechaInicio = !empty($_REQUEST['txtFechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaInicio'])) : null;
        $fechaFinal = !empty($_REQUEST['txtFechaFin']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaFin'])) : null;
        $lstCategoriaPrincipal = $_REQUEST['lstCategoriaPrincipal'];
        $lstRegionCobranza = $_REQUEST['lstRegionCobranza'];
        $lstZona = $_REQUEST['lstZona'];
        $lstCondicion = $_REQUEST['lstCondicion'];
        $idVendedor = $_REQUEST['idVendedor'];
        $lstOrden = $_REQUEST['lstOrden'];

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );
        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );
        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );
        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );

        $fecha = "";
        if (!empty($fechaInicio)) {
            $fecha .= $fechaInicio;
        } else {
            $fecha .= "TODAS LOS CLIENTES";
        }
        $fecha .= " - ";
        if (!empty($fechaFinal)) {
            $fecha .= $fechaFinal;
        } else {
            $fecha .= date('Y/m/d');
        }
        $titulos = array('CLIENTE', 'RUC', 'TELF.', 'DIRECCION', 'EMAIL', 'VENDEDOR', "LINEA");
        $cont = 1;
        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':G' . $cont);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont) . ":G" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":G" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":G" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "RANKING DE COBRANZAS GENERAL");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);

        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":B" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "FILTRO: ")
                ->setCellValue('B' . ($cont), $fecha);

        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":B" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "FECHA IMPRESION: ")
                ->setCellValue('B' . ($cont), date('Y/m/d'));

        $cliente = $this->AutoLoadModel('cliente');
        $ordenventa = $this->AutoLoadModel('ordenventa');
        $datos = $cliente->listadoclientesregistrados($fechaInicio, $fechaFinal, $lstCategoriaPrincipal, $lstRegionCobranza, $lstZona, $lstCondicion, $lstOrden);
        $cantidadData = count($datos);
        $cont++;
        for ($i = 0; $i < $cantidadData; $i++) {
            if ($zona != $datos[$i]['idzona']) {
                if ($i != 0) {
                    $cont++;
                }
                $zona = $datos[$i]['idzona'];
                $cont++;
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells("A" . ($cont) . ":G" . ($cont));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($cont) . ":G" . ($cont));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($cont), "ZONA: " . $datos[$i]['nombrezona']);
                $cont++;
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($cont) . ":G" . ($cont));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":G" . ($cont))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":G" . ($cont))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($cont), $titulos[0])
                        ->setCellValue('B' . ($cont), $titulos[1])
                        ->setCellValue('C' . ($cont), $titulos[2])
                        ->setCellValue('D' . ($cont), $titulos[3])
                        ->setCellValue('E' . ($cont), $titulos[4])
                        ->setCellValue('F' . ($cont), $titulos[5])
                        ->setCellValue('G' . ($cont), $titulos[6]);
            }
            $cont++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($cont) . ":G" . ($cont));
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($cont), utf8_decode(html_entity_decode($datos[$i]['cliente'], ENT_QUOTES, 'UTF-8')))
                    ->setCellValue('B' . ($cont), $datos[$i]['ruc'])
                    ->setCellValue('C' . ($cont), $datos[$i]['telefono'] . (empty($datos[$i]['telefono']) || empty($datos[$i]['celular']) ? "" : " / ") . $datos[$i]['celular'])
                    ->setCellValue('D' . ($cont), utf8_decode(html_entity_decode($datos[$i]['direccion'] . ", " . $datos[$i]['dist'] . " - " . $datos[$i]['prov'] . " - " . $datos[$i]['depa'], ENT_QUOTES, 'UTF-8')))
                    ->setCellValue('E' . ($cont), $datos[$i]['email'])
                    ->setCellValue('F' . ($cont), $ordenventa->ultimoVendedor($datos[$i]['idcliente'], 1))
                    ->setCellValue('G' . ($cont), $ordenventa->lineadeventa($datos[$i]['idcliente'], 1));
        }

        $objPHPExcel->getActiveSheet()->setTitle('Clientes Registrados');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);
        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    public function comisiondeventasdetallado() {
        set_time_limit(2000);
        $lstAnio = $_REQUEST['lstAnio'];
        $txtidvendedor = $_REQUEST['txtidvendedor'];
        $lstMes = $_REQUEST['lstMes'];
        $porcentajeComision = $_REQUEST['txtcomision'];
        $meses['01'] = "Enero";
        $meses['02'] = "Febrero";
        $meses['03'] = "Marzo";
        $meses['04'] = "Abril";
        $meses['05'] = "Mayo";
        $meses['06'] = "Junio";
        $meses['07'] = "Julio";
        $meses['08'] = "Agosto";
        $meses['09'] = "Septiembre";
        $meses['10'] = "Octubre";
        $meses['11'] = "Noviembre";
        $meses['12'] = "Diciembre";
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'comisionventas_' . $meses[$lstMes] . '.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ), 'font' => array(
                'size' => 15,
                'name' => 'Times New Roman'
            )
                )
        );
        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                'left' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ), 'font' => array(
                'name' => 'Times New Roman'
            )
                )
        );
        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
            ), 'font' => array(
                'name' => 'Times New Roman'
            )
                )
        );
        $sharedStyleAmarillo = new PHPExcel_Style();
        $sharedStyleAmarillo->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFFFFF00')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ), 'font' => array(
                'name' => 'Times New Roman'
            )
                )
        );
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                'left' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ), 'font' => array(
                'name' => 'Times New Roman'
            )
                )
        );

        $sharedStyleVerde = new PHPExcel_Style();
        $sharedStyleVerde->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF00CC66')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                'left' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ), 'font' => array(
                'name' => 'Times New Roman'
            )
                )
        );
        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                'left' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                'vertical' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER
            ), 'font' => array(
                'name' => 'Times New Roman'
            )
                )
        );
        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $cont = 1;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':K' . $cont);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle4, "A" . ($cont) . ":K" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":K" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "REPORTE DE VENTAS");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);

        $cont++;
        $cont++;

        $actor = $this->AutoLoadModel('actor');
        $tipocambio = $this->AutoLoadModel('tipocambio');
        $dataActor = $actor->buscarxid($txtidvendedor);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('D' . $cont . ':F' . $cont);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont) . ":A" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "C" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "B" . ($cont) . ":B" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "D" . ($cont) . ":F" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":H" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":H" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "Vendedor: ")
                ->setCellValue('B' . ($cont), (html_entity_decode($dataActor[0]['nombres'], ENT_QUOTES, 'UTF-8')) . ' ' . (html_entity_decode($dataActor[0]['apellidopaterno'], ENT_QUOTES, 'UTF-8')) . ' ' . (html_entity_decode($dataActor[0]['apellidomaterno'], ENT_QUOTES, 'UTF-8')))
                ->setCellValue('C' . ($cont), "Mes/Año: ")
                ->setCellValue('D' . ($cont), $meses[$lstMes] . "/" . $lstAnio);
        $cont++;
        $cont++;

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont) . ":K" . ($cont + 1));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':A' . ($cont + 1));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $cont . ':B' . ($cont + 1));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('K' . $cont . ':K' . ($cont + 1));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $cont . ':D' . $cont);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $cont . ':F' . $cont);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $cont . ':H' . $cont);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('I' . $cont . ':J' . $cont);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":K" . ($cont + 1))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":K" . ($cont + 1))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "Fecha")
                ->setCellValue('B' . ($cont), "Razon Social")
                ->setCellValue('C' . ($cont), "Ventas")
                ->setCellValue('E' . ($cont), "Devolucion")
                ->setCellValue('G' . ($cont), "Total Venta")
                ->setCellValue('I' . ($cont), "Comision " . $porcentajeComision . "%")
                ->setCellValue('K' . ($cont), "A Pagar")
                ->setCellValue('C' . ($cont + 1), "Dolares")
                ->setCellValue('D' . ($cont + 1), "Soles")
                ->setCellValue('E' . ($cont + 1), "Dolares")
                ->setCellValue('F' . ($cont + 1), "Soles")
                ->setCellValue('G' . ($cont + 1), "Dolares")
                ->setCellValue('H' . ($cont + 1), "Soles")
                ->setCellValue('I' . ($cont + 1), "Dolares")
                ->setCellValue('J' . ($cont + 1), "Soles");
        $ordenventa = $this->AutoLoadModel('ordenventa');

        $cont++;
        $cont++;
        $fechainicio = $lstAnio . '-' . $lstMes;
        $aux = date('Y-m-d', strtotime("{$fechainicio} + 1 month"));
        $fechafinal = date('Y-m-d', strtotime("{$aux} - 1 day"));
        $fechainicio .= "-01";
        $registros = $ordenventa->listaOVAprobados($fechainicio, $fechafinal, $txtidvendedor);
        $valortc = $tipocambio->ultimotipodecambiodelmes($fechainicio, $fechafinal);
        $tam = count($registros);
        $totalSoles = 0;
        $totalDolares = 0;
        $totalComisionSoles = 0;
        $totalComisionDolares = 0;

        $TOTAL_aprobadosoles = 0;
        $TOTAL_aprobadodolares = 0;
        $TOTAL_devolucionsoles = 0;
        $TOTAL_devoluciondolares = 0;
        $TOTAL_comisionsoles = 0;
        $TOTAL_comisiondolares = 0;

        for ($i = 0; $i < $tam; $i++) {
            $TempComisionSoles = 0;
            $TempComision = ($registros[$i]['importeaprobado'] - $registros[$i]['importedevolucion']) * ($porcentajeComision / 100);
            $aprobadosoles = '-';
            $aprobadodolares = '-';
            $devolucionsoles = '-';
            $devoluciondolares = '-';
            $tempsoles = '-';
            $tempdolares = '-';
            $comisionsoles = '-';
            $comisiondolares = '-';
            if ($registros[$i]['IdMoneda'] == 1) {
                $totalSoles += ($registros[$i]['importeaprobado'] - $registros[$i]['importedevolucion']);
                $totalComisionSoles += $TempComision;
                $TempComisionSoles = $TempComision;

                $aprobadosoles = "S/ " . number_format($registros[$i]['importeaprobado'], 2);
                $TOTAL_aprobadosoles += $registros[$i]['importeaprobado'];
                $devolucionsoles = "S/ " . number_format($registros[$i]['importedevolucion'], 2);
                $TOTAL_devolucionsoles += $registros[$i]['importedevolucion'];
                $tempsoles = "S/ " . number_format($registros[$i]['importeaprobado'] - $registros[$i]['importedevolucion'], 2);

                $comisionsoles = "S/ " . number_format(($registros[$i]['importeaprobado'] - $registros[$i]['importedevolucion']) * ($porcentajeComision / 100), 2);
                $TOTAL_comisionsoles += ($registros[$i]['importeaprobado'] - $registros[$i]['importedevolucion']) * ($porcentajeComision / 100);
            } else {
                $totalDolares += ($registros[$i]['importeaprobado'] - $registros[$i]['importedevolucion']);
                $totalComisionDolares += $TempComision;
                $TempComisionSoles = $TempComision * $valortc;
                $aprobadodolares = "$" . number_format($registros[$i]['importeaprobado'], 2);
                $TOTAL_aprobadodolares += $registros[$i]['importeaprobado'];
                $devoluciondolares = "$" . number_format($registros[$i]['importedevolucion'], 2);
                $TOTAL_devoluciondolares += $registros[$i]['importedevolucion'];
                $tempdolares = "$" . number_format($registros[$i]['importeaprobado'] - $registros[$i]['importedevolucion'], 2);
                $comisiondolares = "$" . number_format(($registros[$i]['importeaprobado'] - $registros[$i]['importedevolucion']) * ($porcentajeComision / 100), 2);
                $TOTAL_comisiondolares += ($registros[$i]['importeaprobado'] - $registros[$i]['importedevolucion']) * ($porcentajeComision / 100);
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "C" . ($cont) . ":K" . ($cont));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($cont) . ":B" . ($cont));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "F" . ($cont) . ":F" . ($cont));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":K" . ($cont))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($cont), $registros[$i]['fechadespacho'])
                    ->setCellValue('B' . ($cont), (html_entity_decode($registros[$i]['razonsocial'], ENT_QUOTES, 'UTF-8')))
                    ->setCellValue('C' . ($cont), $aprobadodolares)
                    ->setCellValue('D' . ($cont), $aprobadosoles)
                    ->setCellValue('E' . ($cont), $devoluciondolares)
                    ->setCellValue('F' . ($cont), $devolucionsoles)
                    ->setCellValue('G' . ($cont), $tempdolares)
                    ->setCellValue('H' . ($cont), $tempsoles)
                    ->setCellValue('I' . ($cont), $comisiondolares)
                    ->setCellValue('J' . ($cont), $comisionsoles)
                    ->setCellValue('K' . ($cont), 'S/ ' . number_format($TempComisionSoles, 2));
            $cont++;
        }
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "C" . ($cont) . ":K" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("C" . ($cont) . ":K" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->getActiveSheet()->getStyle("C" . ($cont) . ":K" . ($cont))->getFont()->setBold(true);

        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('C' . ($cont), '$' . number_format($TOTAL_aprobadodolares, 2))
                ->setCellValue('D' . ($cont), 'S/ ' . number_format($TOTAL_aprobadosoles, 2))
                ->setCellValue('E' . ($cont), '$' . number_format($TOTAL_devoluciondolares, 2))
                ->setCellValue('F' . ($cont), 'S/ ' . number_format($TOTAL_devolucionsoles, 2))
                ->setCellValue('G' . ($cont), '$' . number_format($totalDolares, 2))
                ->setCellValue('H' . ($cont), 'S/ ' . number_format($totalSoles, 2))
                ->setCellValue('I' . ($cont), '$' . number_format($TOTAL_comisiondolares, 2))
                ->setCellValue('J' . ($cont), 'S/ ' . number_format($TOTAL_comisionsoles, 2))
                ->setCellValue('K' . ($cont), "S/ " . number_format(($totalComisionDolares * $valortc) + $totalComisionSoles, 2));

        $cont++;
        $cont++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "G" . ($cont) . ":I" . ($cont + 5));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyleVerde, "G" . ($cont + 7) . ":I" . ($cont + 7));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $cont . ':I' . ($cont));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . ($cont + 1) . ':I' . ($cont + 1));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . ($cont + 2) . ':I' . ($cont + 2));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . ($cont + 3) . ':I' . ($cont + 3));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . ($cont + 4) . ':I' . ($cont + 4));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . ($cont + 5) . ':I' . ($cont + 5));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . ($cont + 7) . ':I' . ($cont + 7));
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('G' . ($cont), "IMPORTE VENTA SOLES: ")
                ->setCellValue('G' . ($cont + 1), "IMPORTE VENTA DOLARES: ")
                ->setCellValue('G' . ($cont + 2), "IMPORTE COMISION SOLES: ")
                ->setCellValue('G' . ($cont + 3), "IMPORTE COMISION DOLARES: ")
                ->setCellValue('G' . ($cont + 4), "TIPO CAMBIO SUNAT: ")
                ->setCellValue('G' . ($cont + 5), "COMISION DOLARES EN SOLES: ")
                ->setCellValue('G' . ($cont + 7), "COMISION TOTAL EN SOLES: ");

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "J" . ($cont) . ":K" . ($cont + 5));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyleAmarillo, "J" . ($cont + 7) . ":K" . ($cont + 7));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . $cont . ':K' . ($cont));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . ($cont + 1) . ':K' . ($cont + 1));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . ($cont + 2) . ':K' . ($cont + 2));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . ($cont + 3) . ':K' . ($cont + 3));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . ($cont + 4) . ':K' . ($cont + 4));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . ($cont + 5) . ':K' . ($cont + 5));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . ($cont + 7) . ':K' . ($cont + 7));
        $objPHPExcel->getActiveSheet()->getStyle("G" . ($cont) . ":K" . ($cont + 5))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("G" . ($cont) . ":K" . ($cont + 5))->getFill()->setRotation(1);
        $objPHPExcel->getActiveSheet()->getStyle("G" . ($cont + 7) . ":K" . ($cont + 7))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("G" . ($cont + 7) . ":K" . ($cont + 7))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('J' . ($cont), "S/ " . number_format($totalSoles, 2))
                ->setCellValue('J' . ($cont + 1), "$" . number_format($totalDolares, 2))
                ->setCellValue('J' . ($cont + 2), "S/ " . number_format($totalComisionSoles, 2))
                ->setCellValue('J' . ($cont + 3), "$" . number_format($totalComisionDolares, 2))
                ->setCellValue('J' . ($cont + 4), "S/ " . $valortc)
                ->setCellValue('J' . ($cont + 5), "S/ " . number_format($totalComisionDolares * $valortc, 2))
                ->setCellValue('J' . ($cont + 7), "S/ " . number_format(($totalComisionDolares * $valortc) + $totalComisionSoles, 2));

        $objPHPExcel->getActiveSheet()->setTitle('Ventas ' . $meses[$lstMes] . ' ' . $lstAnio);
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);
        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    public function comisiondeventas() {
        set_time_limit(2000);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'resumen_comisionventas.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $lstAnio = $_REQUEST['lstAnio'];
        $txtidvendedor = $_REQUEST['txtidvendedor'];
        $chkmes = $_REQUEST['chkmes'];
        $meses['01'] = "Enero";
        $meses['02'] = "Febrero";
        $meses['03'] = "Marzo";
        $meses['04'] = "Abril";
        $meses['05'] = "Mayo";
        $meses['06'] = "Junio";
        $meses['07'] = "Julio";
        $meses['08'] = "Agosto";
        $meses['09'] = "Septiembre";
        $meses['10'] = "Octubre";
        $meses['11'] = "Noviembre";
        $meses['12'] = "Diciembre";
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );
        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );
        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
            )
                )
        );
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );
        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );
        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('N')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('O')->setAutoSize(true);
        $cont = 1;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':O' . $cont);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont) . ":O" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":O" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":O" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "RESUMEN DE COMISION DE VENTAS");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);

        $cont++;
        $actor = $this->AutoLoadModel('actor');
        $dataActor = $actor->buscarxid($txtidvendedor);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':O' . $cont);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($cont) . ":O" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":O" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":O" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), (html_entity_decode($dataActor[0]['nombres'], ENT_QUOTES, 'UTF-8')) . ' ' . (html_entity_decode($dataActor[0]['apellidopaterno'], ENT_QUOTES, 'UTF-8')) . ' ' . (html_entity_decode($dataActor[0]['apellidomaterno'], ENT_QUOTES, 'UTF-8')));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);
        $tamanio = count($chkmes);
        $ordenventa = $this->AutoLoadModel('ordenventa');
        $tipocambio = $this->AutoLoadModel('tipocambio');
        $devolucion = $this->AutoLoadModel('devolucion');
        $cont++;

        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':A' . ($cont + 1));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $cont . ':H' . $cont);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('I' . $cont . ':M' . $cont);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('N' . $cont . ':O' . $cont);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont) . ":O" . ($cont + 1));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":O" . ($cont + 1))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":O" . ($cont + 1))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "AÑO " . $lstAnio)
                ->setCellValue('B' . ($cont), "COMISION DOLARES")
                ->setCellValue('I' . ($cont), "COMISION SOLES")
                ->setCellValue('N' . ($cont), "TOTAL A PAGAR");
        $cont++;

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "B" . ($cont) . ":O" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":O" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":O" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('B' . ($cont), "IMPORTE BRUTO ($.)")
                ->setCellValue('C' . ($cont), "IMPORTE DEVUELTO ($.)")
                ->setCellValue('D' . ($cont), "IMPORTE NETO ($.)")
                ->setCellValue('E' . ($cont), "% COMISION")
                ->setCellValue('F' . ($cont), "COMISION A PAGAR ($.)")
                ->setCellValue('G' . ($cont), "T/C SBS")
                ->setCellValue('H' . ($cont), "CONVERSION A SOLES (A)")
                ->setCellValue('I' . ($cont), "IMPORTE BRUTO (S/.)")
                ->setCellValue('J' . ($cont), "IMPORTE DEVUELTO ($.)")
                ->setCellValue('K' . ($cont), "IMPORTE NETO ($.)")
                ->setCellValue('L' . ($cont), "% COMISION")
                ->setCellValue('M' . ($cont), "COMISION A PAGAR (S/.)(B)")
                ->setCellValue('N' . ($cont), "SOLES")
                ->setCellValue('O' . ($cont), "DOLARES");
//        $porcentajeComision = $this->configIniTodo('Comision');
        $porcentajeComision['porcentaje'] = $_REQUEST['txtcomision'];
        $impTotalDolares = 0;
        $impDevueltoDolares = 0;
        $impComisionDolares = 0;
        $impConverSoles = 0;
        $impTotalSoles = 0;
        $impDevueltoSoles = 0;
        $impComisionSoles = 0;

        for ($i = 0; $i < $tamanio; $i++) {
            $cont++;
            $fechainicio = $lstAnio . '-' . $chkmes[$i];
            $aux = date('Y-m-d', strtotime("{$fechainicio} + 1 month"));
            $fechafinal = date('Y-m-d', strtotime("{$aux} - 1 day"));
            $fechainicio .= "-01";
            $acumuladorRegistro[1] = 0;
            $acumuladorRegistro[2] = 0;
            $acumuladorDevolucion[1] = 0;
            $acumuladorDevolucion[2] = 0;
            $registros = $ordenventa->totalAprobado($fechainicio, $fechafinal, $txtidvendedor);
            $dataDevolucion = $devolucion->totalDevolucionXVendedor($fechainicio, $fechafinal, $txtidvendedor);
            for ($j = 0; $j < 2; $j++) {
                $acumuladorRegistro[$registros[$j]['idmoneda']] = $registros[$j]['totalaprobado'];
                $acumuladorDevolucion[$dataDevolucion[$j]['idmoneda']] = $dataDevolucion[$j]['importetotal'];
            }
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':A' . $cont);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($cont) . ":A" . ($cont));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($cont) . ":O" . ($cont));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":A" . ($cont))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("F" . ($cont) . ":F" . ($cont))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("H" . ($cont) . ":H" . ($cont))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("M" . ($cont) . ":O" . ($cont))->getFont()->setBold(true);
            $comisionDol = ($acumuladorRegistro[2] - $acumuladorDevolucion[2]) * ($porcentajeComision['porcentaje'] / 100);
            $comisionSol = ($acumuladorRegistro[1] - $acumuladorDevolucion[1]) * ($porcentajeComision['porcentaje'] / 100);
            $valortc = $tipocambio->ultimotipodecambiodelmes($fechainicio, $fechafinal);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($cont), $meses[$chkmes[$i]])
                    ->setCellValue('B' . ($cont), "US $. " . number_format($acumuladorRegistro[2], 2))
                    ->setCellValue('C' . ($cont), "US $. " . number_format($acumuladorDevolucion[2], 2))
                    ->setCellValue('D' . ($cont), "US $. " . number_format($acumuladorRegistro[2] - $acumuladorDevolucion[2], 2))
                    ->setCellValue('E' . ($cont), number_format($porcentajeComision['porcentaje'], 2) . "%")
                    ->setCellValue('F' . ($cont), "US $. " . number_format($comisionDol, 2))
                    ->setCellValue('G' . ($cont), "S/ " . number_format($valortc, 2))
                    ->setCellValue('H' . ($cont), "S/ " . number_format($comisionDol * $valortc, 2))
                    ->setCellValue('I' . ($cont), "S/ " . number_format($acumuladorRegistro[1], 2))
                    ->setCellValue('J' . ($cont), "S/ " . number_format($acumuladorDevolucion[1], 2))
                    ->setCellValue('K' . ($cont), "S/ " . number_format($acumuladorRegistro[1] - $acumuladorDevolucion[1], 2))
                    ->setCellValue('L' . ($cont), number_format($porcentajeComision['porcentaje'], 2) . "%")
                    ->setCellValue('M' . ($cont), "S/ " . number_format($comisionSol, 2))
                    ->setCellValue('N' . ($cont), "S/ " . number_format($comisionSol, 2))
                    ->setCellValue('O' . ($cont), "US $. " . number_format($comisionDol, 2));

            $impTotalDolares += $acumuladorRegistro[2];
            $impDevueltoDolares += $acumuladorDevolucion[2];
            $impComisionDolares += $comisionDol;
            $impConverSoles += $comisionDol * $valortc;
            $impTotalSoles += $acumuladorRegistro[1];
            $impDevueltoSoles += $acumuladorDevolucion[1];
            $impComisionSoles += $comisionSol;
        }
        $cont++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "B" . ($cont) . ":O" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("B" . ($cont) . ":O" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('B' . ($cont), "US $. " . number_format($impTotalDolares, 2))
                ->setCellValue('C' . ($cont), "US $. " . number_format($impDevueltoDolares, 2))
                ->setCellValue('D' . ($cont), "US $. " . number_format($impTotalDolares - $impDevueltoDolares, 2))
                ->setCellValue('F' . ($cont), "US $. " . number_format($impComisionDolares, 2))
                ->setCellValue('H' . ($cont), "S/ " . number_format($impConverSoles, 2))
                ->setCellValue('I' . ($cont), "S/ " . number_format($impTotalSoles, 2))
                ->setCellValue('J' . ($cont), "S/ " . number_format($impDevueltoSoles, 2))
                ->setCellValue('K' . ($cont), "S/ " . number_format($impTotalSoles - $impDevueltoSoles, 2))
                ->setCellValue('M' . ($cont), "S/ " . number_format($impComisionSoles, 2))
                ->setCellValue('N' . ($cont), "S/ " . number_format($impComisionSoles, 2))
                ->setCellValue('O' . ($cont), "US $. " . number_format($impComisionDolares, 2));

        $objPHPExcel->getActiveSheet()->setTitle('Comision Ventas');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);
        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    public function creaplanillaExcel3() {
        $numeroLetra = $_REQUEST['txtBusqueda'];
        $numeroLetra = str_ireplace(" ", "", $numeroLetra);


        $arrayletras = explode("\n", $numeroLetra);
        $arrayletras = str_ireplace("\r", "", $arrayletras);
        $arrayletras = str_ireplace("\t", "", $arrayletras);
        //echo json_encode($arrayletras);
        $indice = 1;
//start Obtenemos los datos de la letra
        $reporte = $this->AutoLoadModel('reporte');
        for ($a = 0; $a < count($arrayletras); $a++) {
            $cond_nombredoc = 0;
            $letrasxfirmar3 = $reporte->letrasxfirmar3($arrayletras[$a]);
            for ($b = 0; $b < count($letrasxfirmar3); $b++) {
                if ($letrasxfirmar3[$b]["nombredoc"] == "4") { //guia remision
                    $cond_nombredoc = 4;
                }
                if ($letrasxfirmar3[$b]["nombredoc"] == "2") { //boleta
                    $cond_nombredoc = 2;
                }
                if ($letrasxfirmar3[$b]["nombredoc"] == "1") { //factura
                    $cond_nombredoc = 1;
                }
            }

            for ($c = 0; $c < count($letrasxfirmar3); $c++) {
                if ($letrasxfirmar3[$c]["nombredoc"] == $cond_nombredoc) { //guia remision
                    $arregloletras[$indice] = array("fechagiro" => $letrasxfirmar3[$c]["fechagiro"], "nombredoc" => $letrasxfirmar3[$c]["nombredoc"],
                        "serie" => $letrasxfirmar3[$c]["serie"],
                        "numdoc" => $letrasxfirmar3[$c]["numdoc"],
                        "fechadoc" => $letrasxfirmar3[$c]["fechadoc"],
                        "idordenventa" => $letrasxfirmar3[$c]["idordenventa"],
                        "codigov" => $letrasxfirmar3[$c]["codigov"],
                        "razonsocial" => $letrasxfirmar3[$c]["razonsocial"],
                        "tipodoccli" => $letrasxfirmar3[$c]["tipodoccli"],
                        "ruc" => $letrasxfirmar3[$c]["ruc"],
                        "nombrecli" => $letrasxfirmar3[$c]["nombrecli"],
                        "apellido1" => $letrasxfirmar3[$c]["apellido1"],
                        "apellido2" => $letrasxfirmar3[$c]["apellido2"],
                        "dni" => $letrasxfirmar3[$c]["dni"],
                        "numeroletra" => $letrasxfirmar3[$c]["numeroletra"],
                        "fvencimiento" => $letrasxfirmar3[$c]["fvencimiento"],
                        "iddetalleordencobro" => $letrasxfirmar3[$c]["iddetalleordencobro"],
                        "importedoc" => $letrasxfirmar3[$c]["importedoc"],
                        "recepcionLetras" => $letrasxfirmar3[$c]["recepcionLetras"],
                        "simbolo" => $letrasxfirmar3[$c]["simbolo"],
                        "idmoneda" => $letrasxfirmar3[$c]["idmoneda"],
                        "iddepartamento" => $letrasxfirmar3[$c]["iddepartamento"],
                        "electronico" => $letrasxfirmar3[$c]["electronico"]
                    );
                    $indice = $indice + 1;
                }
            }
        }
        //end Obtenemos los datos de la letra
//
//echo json_encode($arregloletras);



        set_time_limit(1800);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'seguimientoplanilla3.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->configIniTodo('TipoIngreso');
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $titulos = array('Nro', 'Padre', 'Monto', 'Saldo', 'Condicion', 'Nro Letra', 'Fecha Giro', 'F. Vencimiento', 'F. Pago');

        $sharedStyle6 = new PHPExcel_Style();
        $sharedStyle6->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'EEFFEE00')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            )
                )
        );

        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAECECC')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            )
                )
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            )
                )
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            )
                )
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);

        $contador = 1;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "SEGUIMIENTO DE PLANILLA 3");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':D' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "C" . ($contador) . ":D" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);

        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "FECHA DE EXPORTACION :")
                ->setCellValue('C' . ($contador), date("F j, Y, g:i a"));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;

        function add_ceros($numero, $ceros) {
            $order_diez = explode(".", $numero);
            $dif_diez = $ceros - strlen($order_diez[0]);
            for ($m = 0; $m < $dif_diez; $m++) {
                @$insertar_ceros .= 0;
            }
            return $insertar_ceros .= $numero;
        }

        for ($oxo = 1; $oxo <= 3; $oxo++) {
            if ($oxo == 1) {
                $nombreComprobante = "FACTURA";
            }
            if ($oxo == 2) {
                $nombreComprobante = "BOLETA";
            }
            if ($oxo == 3) {
                $nombreComprobante = "GUIA DE REMISION";
            }

            //START BLOQUE comprobante
            $contador++;
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':J' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle6, "A" . ($contador) . ":J" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "LETRAS QUE TIENEN " . $nombreComprobante);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($contador) . ":J" . ($contador + 1));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "RUC / DNI")
                    ->setCellValue('B' . ($contador), "CLIENTE")
                    ->setCellValue('C' . ($contador), "COMPROBANTE")
                    ->setCellValue('D' . ($contador), "FECHA EMISION COMPROBANTE")
                    ->setCellValue('E' . ($contador), "ORDEN DE VENTA")
                    ->setCellValue('F' . ($contador), "NRO LETRA")
                    ->setCellValue('G' . ($contador), "FECHA DE GIRO")
                    ->setCellValue('H' . ($contador), "FECHA DE VENCIMIENTO")
                    ->setCellValue('I' . ($contador), "IMPORTE DOLARES $")
                    ->setCellValue('J' . ($contador), "IMPORTE SOLES   S/.");
            $contador++;

            for ($i = 1; $i <= count($arregloletras); $i++) {
                //start imprime factura
                if ($oxo == 1 and $arregloletras[$i]['nombredoc'] == 1) {
                    if ($arregloletras[$i]['idmoneda'] == 1) {
                        $importesoles = $arregloletras[$i]['importedoc'];
                        $importedolares = "0.00";
                    }
                    if ($arregloletras[$i]['idmoneda'] == 2) {
                        $importesoles = 0.00;
                        $importedolares = $arregloletras[$i]['importedoc'];
                    }
                    if ($arregloletras[$i]['razonsocial'] == "") {
                        $nombrecliente = $arregloletras[$i]['nombrecli'] . ' ' . $arregloletras[$i]['apellido1'] . ' ' . $arregloletras[$i]['apellido2'];
                    } else {
                        $nombrecliente = $arregloletras[$i]['razonsocial'];
                    }
                    if ($arregloletras[$i]['nombredoc'] == "1" or $arregloletras[$i]['nombredoc'] == "2") {
                        if ($arregloletras[$i]['electronico'] == "1") {
                            $serieTemp = add_ceros($arregloletras[$i]['serie'], 3);
                            $correlativoComprobante = add_ceros($arregloletras[$i]['numdoc'], 8);

                            if ($arregloletras[$i]['nombredoc'] == "1") {
                                $serieComprobante = "F" . $serieTemp;
                            }
                            if ($arregloletras[$i]['nombredoc'] == "2") {
                                $serieComprobante = "B" . $serieTemp;
                            }
                        } else {
                            $serieComprobante = $arregloletras[$i]['serie'];
                            $correlativoComprobante = $arregloletras[$i]['numdoc'];
                        }
                    }

                    if ($arregloletras[$i]['nombredoc'] == "4") {
                        $serieComprobante = add_ceros($arregloletras[$i]['serie'], 3);
                        $correlativoComprobante = add_ceros($arregloletras[$i]['numdoc'], 6);
                    }


                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":J" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), $arregloletras[$i]['ruc'])
                            ->setCellValue('B' . ($contador), $nombrecliente)
                            ->setCellValue('C' . ($contador), $serieComprobante . ' - ' . $correlativoComprobante)
                            ->setCellValue('D' . ($contador), $arregloletras[$i]['fechadoc'])
                            ->setCellValue('E' . ($contador), $arregloletras[$i]['codigov'])
                            ->setCellValue('F' . ($contador), $arregloletras[$i]['numeroletra'])
                            ->setCellValue('G' . ($contador), $arregloletras[$i]['fechagiro'])
                            ->setCellValue('H' . ($contador), $arregloletras[$i]['fvencimiento'])
                            ->setCellValue('I' . ($contador), $importedolares)
                            ->setCellValue('J' . ($contador), $importesoles);
                    $contador++;
                }
                //end imprime factura
                //start imprime boleta
                if ($oxo == 2 and $arregloletras[$i]['nombredoc'] == 2) {
                    if ($arregloletras[$i]['idmoneda'] == 1) {
                        $importesoles = $arregloletras[$i]['importedoc'];
                        $importedolares = "0.00";
                    }
                    if ($arregloletras[$i]['idmoneda'] == 2) {
                        $importesoles = 0.00;
                        $importedolares = $arregloletras[$i]['importedoc'];
                    }
                    if ($arregloletras[$i]['razonsocial'] == "") {
                        $nombrecliente = $arregloletras[$i]['nombrecli'] . ' ' . $arregloletras[$i]['apellido1'] . ' ' . $arregloletras[$i]['apellido2'];
                    } else {
                        $nombrecliente = $arregloletras[$i]['razonsocial'];
                    }
                    if ($arregloletras[$i]['nombredoc'] == "1" or $arregloletras[$i]['nombredoc'] == "2") {
                        if ($arregloletras[$i]['electronico'] == "1") {
                            $serieTemp = add_ceros($arregloletras[$i]['serie'], 3);
                            $correlativoComprobante = add_ceros($arregloletras[$i]['numdoc'], 8);

                            if ($arregloletras[$i]['nombredoc'] == "1") {
                                $serieComprobante = "F" . $serieTemp;
                            }
                            if ($arregloletras[$i]['nombredoc'] == "2") {
                                $serieComprobante = "B" . $serieTemp;
                            }
                        } else {
                            $serieComprobante = $arregloletras[$i]['serie'];
                            $correlativoComprobante = $arregloletras[$i]['numdoc'];
                        }
                    }

                    if ($arregloletras[$i]['nombredoc'] == "4") {
                        $serieComprobante = add_ceros($arregloletras[$i]['serie'], 3);
                        $correlativoComprobante = add_ceros($arregloletras[$i]['numdoc'], 6);
                    }


                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":J" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), $arregloletras[$i]['dni'])
                            ->setCellValue('B' . ($contador), $nombrecliente)
                            ->setCellValue('C' . ($contador), $serieComprobante . ' - ' . $correlativoComprobante)
                            ->setCellValue('D' . ($contador), $arregloletras[$i]['fechadoc'])
                            ->setCellValue('E' . ($contador), $arregloletras[$i]['codigov'])
                            ->setCellValue('F' . ($contador), $arregloletras[$i]['numeroletra'])
                            ->setCellValue('G' . ($contador), $arregloletras[$i]['fechagiro'])
                            ->setCellValue('H' . ($contador), $arregloletras[$i]['fvencimiento'])
                            ->setCellValue('I' . ($contador), $importedolares)
                            ->setCellValue('J' . ($contador), $importesoles);
                    $contador++;
                }
                //end imprime boleta
                //start imprime guia remision
                if ($oxo == 3 and $arregloletras[$i]['nombredoc'] == 4) {
                    if ($arregloletras[$i]['idmoneda'] == 1) {
                        $importesoles = $arregloletras[$i]['importedoc'];
                        $importedolares = "0.00";
                    }
                    if ($arregloletras[$i]['idmoneda'] == 2) {
                        $importesoles = 0.00;
                        $importedolares = $arregloletras[$i]['importedoc'];
                    }
                    if ($arregloletras[$i]['razonsocial'] == "") {
                        $nombrecliente = $arregloletras[$i]['nombrecli'] . ' ' . $arregloletras[$i]['apellido1'] . ' ' . $arregloletras[$i]['apellido2'];
                    } else {
                        $nombrecliente = $arregloletras[$i]['razonsocial'];
                    }
                    if ($arregloletras[$i]['nombredoc'] == "1" or $arregloletras[$i]['nombredoc'] == "2") {
                        if ($arregloletras[$i]['electronico'] == "1") {
                            $serieTemp = add_ceros($arregloletras[$i]['serie'], 3);
                            $correlativoComprobante = add_ceros($arregloletras[$i]['numdoc'], 8);

                            if ($arregloletras[$i]['nombredoc'] == "1") {
                                $serieComprobante = "F" . $serieTemp;
                            }
                            if ($arregloletras[$i]['nombredoc'] == "2") {
                                $serieComprobante = "B" . $serieTemp;
                            }
                        } else {
                            $serieComprobante = $arregloletras[$i]['serie'];
                            $correlativoComprobante = $arregloletras[$i]['numdoc'];
                        }
                    }

                    if ($arregloletras[$i]['nombredoc'] == "4") {
                        $serieComprobante = add_ceros($arregloletras[$i]['serie'], 3);
                        $correlativoComprobante = add_ceros($arregloletras[$i]['numdoc'], 6);
                    }


                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":J" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), $arregloletras[$i]['ruc'] . ' - ' . $arregloletras[$i]['dni'])
                            ->setCellValue('B' . ($contador), $nombrecliente)
                            ->setCellValue('C' . ($contador), $serieComprobante . ' - ' . $correlativoComprobante)
                            ->setCellValue('D' . ($contador), $arregloletras[$i]['fechadoc'])
                            ->setCellValue('E' . ($contador), $arregloletras[$i]['codigov'])
                            ->setCellValue('F' . ($contador), $arregloletras[$i]['numeroletra'])
                            ->setCellValue('G' . ($contador), $arregloletras[$i]['fechagiro'])
                            ->setCellValue('H' . ($contador), $arregloletras[$i]['fvencimiento'])
                            ->setCellValue('I' . ($contador), $importedolares)
                            ->setCellValue('J' . ($contador), $importesoles);
                    $contador++;
                }
                //end imprime guia remision
            }
            //END BLOQUE comprobante
            $contador++;
            $contador++;
        }

        $objPHPExcel->getActiveSheet()->setTitle('seguimiento de planilla 3');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);
        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    public function clientesdestacados() {
        set_time_limit(1000);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'resumen_comisionventas.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $lstCategoriaPrincipal = $_REQUEST["lstCategoriaPrincipal"];
        $lstCategoria = $_REQUEST["lstCategoria"];
        $lstZona = $_REQUEST["lstZona"];
        $moneda = $_REQUEST["cmbMoneda"];
        $monto = (!empty($_REQUEST["cmbMonto"]) ? $_REQUEST["cmbMonto"] : (!empty($_REQUEST["txtmonto"]) ? $_REQUEST["txtmonto"] : 5000));

        $simbolo = ($moneda == 1 ? 'S/ ' : 'US $. ');
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );
        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );
        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );
        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );
        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $cont = 1;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':H' . $cont);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont) . ":H" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":H" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":H" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "CLIENTES DESTACADOS");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);

        $cont++;
        $cont++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($cont) . ":H" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":H" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":H" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "NRO")
                ->setCellValue('B' . ($cont), "CLIENTE")
                ->setCellValue('C' . ($cont), "RUC")
                ->setCellValue('D' . ($cont), "DIRECCION")
                ->setCellValue('E' . ($cont), "ZONA")
                ->setCellValue('F' . ($cont), "TOTAL COMPRA")
                ->setCellValue('G' . ($cont), "TOTAL DE GUIAS")
                ->setCellValue('H' . ($cont), "PROMEDIO DE COMPRA");
        $cliente = $this->AutoLoadModel('cliente');
        $destacados = $cliente->listadoClientesDestacados($lstCategoriaPrincipal, $lstCategoria, $lstZona, $moneda, $monto);
        $tam = count($destacados);
        $nro = 1;
        $cont++;
        for ($i = 0; $i < $tam; $i++) {
            $totales = $cliente->numerodeOrdenVentaXCliente($destacados[$i]['idcliente'], $moneda);
            if ($destacados[$i]['totalov'] == $totales) {
                $verificacion = $cliente->clienteMalo($destacados[$i]['idcliente'], $moneda);
                if (empty($verificacion)) {
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($cont) . ":H" . ($cont));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":H" . ($cont))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($cont), $nro)
                            ->setCellValue('B' . ($cont), $destacados[$i]['razonsocial'])
                            ->setCellValue('C' . ($cont), $destacados[$i]['ruc'])
                            ->setCellValue('D' . ($cont), $destacados[$i]['direccioncompleta'])
                            ->setCellValue('E' . ($cont), $destacados[$i]['nombrezona'])
                            ->setCellValue('F' . ($cont), $simbolo . number_format($destacados[$i]['totalpagado'], 2))
                            ->setCellValue('G' . ($cont), $destacados[$i]['totalov'])
                            ->setCellValue('H' . ($cont), $simbolo . number_format($destacados[$i]['totalpagado'] / $destacados[$i]['totalov'], 2));
                    $nro++;
                    $cont++;
                    echo $destacados[$i]['idcliente'] . " - " . $destacados[$i]['ruc'] . " - " . $destacados[$i]['totalpagado'] . " - " . $destacados[$i]['totalov'] . " : " . $totales . "<br>";
                }
            }
        }
        $objPHPExcel->getActiveSheet()->setTitle('Clientes Destacados');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);
        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    public function bitacoradeactividades() {
        set_time_limit(1000);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'bitacora_actividades.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $txtFecha = !empty($_REQUEST['txtFechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaInicio'])) : null;
        $situacionDRT = $_REQUEST["situacionDRT"];
        $idRecepcion = $_REQUEST["idRecepcion"];
        $txtTecnico = $_REQUEST["txtTecnico"];
        $txtProducto = $_REQUEST["txtProducto"];
        $SituacionCI = $_REQUEST["SituacionCI"];

        $titulos = array('PRODUCTO', 'DESCRIPCION', 'CANTIDAD', 'SITUACION', 'INFORME', 'F. INICIO', 'F. FIN', 'NRO. ATENCION', 'REFERENCIA', 'IMPORTE S/', 'IMPORTE US $.');

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );
        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );
        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );
        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );
        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $cont = 1;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':K' . $cont);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont) . ":K" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":K" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":K" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "BITACORA DE ACTIVIDADES");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);
        $cont++;

        $archivoConfig = parse_ini_file("config.ini", true);
        $SituacionReparacion = $archivoConfig['SituacionReparacion'];

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("C" . ($cont) . ":D" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "C" . ($cont) . ":D" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "F" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "E" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "G" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":G" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":G" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "FECHA: ")
                ->setCellValue('B' . ($cont), $txtFecha)
                ->setCellValue('C' . ($cont), "SITUACION: ")
                ->setCellValue('E' . ($cont), $situacionDRT)
                ->setCellValue('F' . ($cont), "SITUACION ACTIVIDAD: ")
                ->setCellValue('G' . ($cont), $SituacionReparacion[$SituacionCI]);

        $cont++;
        $controlinternost = $this->AutoLoadModel('controlinternost');
        $dataCIST = $controlinternost->bitacoradeActividades($txtFecha, $situacionDRT, $idRecepcion, $txtTecnico, $txtProducto, $SituacionCI);
        $tam = count($dataCIST);
        $idtecnico = -1;

        for ($i = 0; $i < $tam; $i++) {
            if ($idtecnico != $dataCIST[$i]['idtecnico']) {
                $cont++;
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells("B" . ($cont) . ":K" . ($cont));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "B" . ($cont) . ":K" . ($cont));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":B" . ($cont))->getFont()->setBold(true);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($cont), "TECNICO: ")
                        ->setCellValue('B' . ($cont), (html_entity_decode($dataCIST[$i]['tecnico'], ENT_QUOTES, 'UTF-8')));
                $cont++;
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($cont) . ":K" . ($cont));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":K" . ($cont))->getFont()->setBold(true);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($cont), $titulos[0])
                        ->setCellValue('B' . ($cont), $titulos[1])
                        ->setCellValue('C' . ($cont), $titulos[2])
                        ->setCellValue('D' . ($cont), $titulos[3])
                        ->setCellValue('E' . ($cont), $titulos[4])
                        ->setCellValue('F' . ($cont), $titulos[5])
                        ->setCellValue('G' . ($cont), $titulos[6])
                        ->setCellValue('H' . ($cont), $titulos[7])
                        ->setCellValue('I' . ($cont), $titulos[8])
                        ->setCellValue('J' . ($cont), $titulos[9])
                        ->setCellValue('K' . ($cont), $titulos[10]);
                $cont++;
                $idtecnico = $dataCIST[$i]['idtecnico'];
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($cont) . ":K" . ($cont));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":K" . ($cont))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($cont), $dataCIST[$i]['codigopa'])
                    ->setCellValue('B' . ($cont), $dataCIST[$i]['nompro'])
                    ->setCellValue('C' . ($cont), $dataCIST[$i]['cantidad'])
                    ->setCellValue('D' . ($cont), $SituacionReparacion[$dataCIST[$i]['situacion']])
                    ->setCellValue('E' . ($cont), $dataCIST[$i]['informe'])
                    ->setCellValue('F' . ($cont), $dataCIST[$i]['finicio'] . " " . str_pad($dataCIST[$i]['horainicio'], 2, "0", STR_PAD_LEFT) . ":" . str_pad($dataCIST[$i]['minutoinicio'], 2, "0", STR_PAD_LEFT))
                    ->setCellValue('G' . ($cont), $dataCIST[$i]['ffin'] . " " . str_pad($dataCIST[$i]['horafin'], 2, "0", STR_PAD_LEFT) . ":" . str_pad($dataCIST[$i]['minutofin'], 2, "0", STR_PAD_LEFT))
                    ->setCellValue('H' . ($cont), $dataCIST[$i]['iddetallerecepciontecnico'])
                    ->setCellValue('I' . ($cont), $dataCIST[$i]['codigost'])
                    ->setCellValue('J' . ($cont), "S/ " . number_format($dataCIST[$i]['importegasto'], 2))
                    ->setCellValue('K' . ($cont), "US $. " . number_format($dataCIST[$i]['importegastodolares'], 2));
            $cont++;
        }

        $objPHPExcel->getActiveSheet()->setTitle('Bitacora de Actividades');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);
        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    public function reporteDevolucionesConta() {
        set_time_limit(500);
        $MotivoDevolucion = $this->configIniTodo('MotivoDevolucion');
        $fechaini = $_REQUEST['txtFechaInicio'];
        $fechafin = $_REQUEST['txtFechaFinal'] . ' 23:59:59';
        $idproducto = $_REQUEST['idProducto'];
        if ($idproducto == 0) {
            $idproducto = '';
        }
        $idcliente = $_REQUEST['idCliente'];
        $idvendedor = $_REQUEST['idVendedor'];
        $orden = $_REQUEST['cmbOrden'];

        if ($_REQUEST['txtFechaInicio'] == "") {
            $fechaini = '2000/01/01';
        } else {
            $fechaini = $_REQUEST['txtFechaInicio'];
        }
        if ($_REQUEST['txtFechaFinal'] == "") {
            $fechafin = date("Y-m-d") . ' 23:59:59';
        } else {
            $fechafin = $_REQUEST['txtFechaFinal'] . ' 23:59:59';
        }

        $producto = new Producto();
        $cliente = new Cliente();
        $actor = new Actor();
        if ($idproducto != '') {
            $dataProducto = $producto->buscaProducto($idproducto);
            foreach ($dataProducto as $value) {
                $nombrepoducto = $value['nompro'];
            }
            $busquedaFiltro = "SOLO DEVOLUCIONES DEL PRODUCTO : " . $nombrepoducto;
        }
        if ($idcliente != '') {
            $dataCliente = $cliente->buscaCliente($idcliente);
            foreach ($dataCliente as $value) {
                $nombrecliente = $value['razonsocial'];
            }
            $busquedaFiltro = "SOLO DEVOLUCIONES DEL CLIENTE : " . $nombrecliente;
        }
        if ($idvendedor != '') {
            $dataActor = $actor->buscarxid($idvendedor);
            foreach ($dataActor as $value) {
                $nombrevendedor = $value['nombrecompleto'];
            }
            $busquedaFiltro = "SOLO DEVOLUCIONES DEL VENDEDOR : " . $nombrevendedor;
        }

        $anoReporte = substr($fechaini, 0, 4);
        $mesReporte = substr($fechaini, 5, 2);
        if ($mesReporte == '01') {
            $nombreMes = "ENERO";
        }
        if ($mesReporte == '02') {
            $nombreMes = "FEBRERO";
        }
        if ($mesReporte == '03') {
            $nombreMes = "MARZO";
        }
        if ($mesReporte == '04') {
            $nombreMes = "ABRIL";
        }
        if ($mesReporte == '05') {
            $nombreMes = "MAYO";
        }
        if ($mesReporte == '06') {
            $nombreMes = "JUNIO";
        }
        if ($mesReporte == '07') {
            $nombreMes = "JULIO";
        }
        if ($mesReporte == '08') {
            $nombreMes = "AGOSTO";
        }
        if ($mesReporte == '09') {
            $nombreMes = "SETIEMBRE";
        }
        if ($mesReporte == '10') {
            $nombreMes = "OCTUBRE";
        }
        if ($mesReporte == '11') {
            $nombreMes = "NOVIEMBRE";
        }
        if ($mesReporte == '12') {
            $nombreMes = "DICIEMBRE";
        }


        $reporte = new Reporte();
        $data = $reporte->listaDevolucionesConta($fechaini, $fechafin, $idproducto, $idcliente, $idvendedor, $orden);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reporteDevolucioneConta.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $titulos = array('N', 'FECHA APROBADO', 'CODIGOPA', 'PRODUCTO', 'UNIDAD', 'PREC. UNIT', 'IMPORTE', 'IGV', 'TOTAL', 'Nª DEVOLUCION', 'ORDEN-VENTA', 'TIPO COMPROBANTE', 'Nª COMPROBANTE', 'Nª NOTA CREDITO', 'MOTIVO', 'OBSERVACIONES', 'SERIE PRODUCTO');


        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('rgb' => 'FFFFFFFF')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER
            )
                )
        );
        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('N')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('O')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('P')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('Q')->setAutoSize(true);
        $contador = 0;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':Q' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":Q" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "REPORTE DE DEVOLUCIONES");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':Q' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":Q" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFill()->setRotation(1);

        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "DEL DIA " . $fechaini . " AL DIA " . substr($fechafin, 0, 10) . " DEL MES DE " . $nombreMes . " DEL " . $anoReporte . $codigoocX);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':Q' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":Q" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFill()->setRotation(1);

        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $busquedaFiltro);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $titulos[0])
                ->setCellValue('B' . ($contador), $titulos[1])
                ->setCellValue('C' . ($contador), $titulos[2])
                ->setCellValue('D' . ($contador), $titulos[3])
                ->setCellValue('E' . ($contador), $titulos[4])
                ->setCellValue('F' . ($contador), $titulos[5])
                ->setCellValue('G' . ($contador), $titulos[6])
                ->setCellValue('H' . ($contador), $titulos[7])
                ->setCellValue('I' . ($contador), $titulos[8])
                ->setCellValue('J' . ($contador), $titulos[9])
                ->setCellValue('K' . ($contador), $titulos[10])
                ->setCellValue('L' . ($contador), $titulos[11])
                ->setCellValue('M' . ($contador), $titulos[12])
                ->setCellValue('N' . ($contador), $titulos[13])
                ->setCellValue('O' . ($contador), $titulos[14])
                ->setCellValue('P' . ($contador), $titulos[15])
                ->setCellValue('Q' . ($contador), $titulos[16]);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":Q" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFill()->setRotation(1);
        $contador ++;
        $nro = 0;
        $sumImporte = 0;
        $sumIgv = 0;
        $sumTotal = 0;
        $idordenventadiferente = -1;
        $session_idrol = $_SESSION['idrol'];
        $rolcontabilidad = '17';
        for ($i = 0; $i < count($data); $i++) {
            if ($session_idrol == $rolcontabilidad) {
                $nada = "";
            } else {
                // start salto por cada diferente orden venta
                if ($data[$i]["idordenventa"] != $idordenventadiferente) {
                    if ($i >= 1) {
                        $contador++;
                        $contador++;
                    }
                }
                $idordenventadiferente = $data[$i]["idordenventa"];
                // end salto por cada diferente orden venta
            }
            $importe_soles_temp = 0.00;
            $igv_soles_temp = 0.00;
            $importe_dolares_temp = 0.00;
            $igv_dolares_temp = 0.00;
            $importe_temp = 0.00;
            $igv_temp = 0.00;
            $comprobante = '';
            $comprobanteNotaCredito = '';
            $tipocomprobante = '';
            $electronico = '';
            $documento = new Documento();
            $data1 = $documento->verificasidevoluciontienefactura($data[$i]["idordenventa"]);
            $data2 = $documento->verificasidevoluciontienenotacredito($data[$i]["idordenventa"], $data[$i]["iddevolucion"]);
            $data3 = $documento->verificasidevoluciontieneboleta($data[$i]["idordenventa"], $data[$i]["iddevolucion"]);

            if (count($data1) >= 1) { //FACTURA
                if ($data1[0]["electronico"] == 1) {
                    $electronico = '';
                    $serieFactura = $documento->add_ceros($data1[0]['serie'], 3);
                    $serieFactura = "F" . $serieFactura;
                    $correlativoFactura = $documento->add_ceros($data1[0]['numdoc'], 8);
                }

                if ($data1[0]["electronico"] == 0) {
                    $electronico = 'FISICA';
                    $serieFactura = $data1[0]['serie'];
                    $correlativoFactura = $data1[0]['numdoc'];
                }
                $comprobante = $serieFactura . ' - ' . $correlativoFactura;
                $tipocomprobante = "FACTURA " . $electronico;
            }
            if (count($data3) >= 1) { //BOLETA
                if ($data3[0]["electronico"] == 1) {
                    $electronico = '';
                    $serieBoleta = $documento->add_ceros($data3[0]['serie'], 3);
                    $serieBoleta = 'B' . $serieBoleta;
                    $correlativoBoleta = $documento->add_ceros($data3[0]['numdoc'], 8);
                }
                if ($data3[0]["electronico"] == 0) {
                    $electronico = 'FISICA';
                    $serieBoleta = $data3[0]['serie'];
                    $correlativoBoleta = $data3[0]['numdoc'];
                }
                $comprobante = $serieBoleta . ' - ' . $correlativoBoleta;
                $tipocomprobante = "BOLETA " . $electronico;
            }
            if (count($data2) == 1) { //NOTA CREDITO
                if ($data2[0]["electronico"] == 1) {
                    $electronico = '';
                    $serieNotaCredito = $documento->add_ceros($data2[0]['serie'], 3);
                    $serieNotaCredito = 'F' . $serieNotaCredito;
                    $correlativoNotaCredito = $documento->add_ceros($data2[0]['numdoc'], 8);
                }
                if ($data2[0]["electronico"] == 0) {
                    $serieNotaCredito = $data2[0]['serie'];
                    $correlativoNotaCredito = $data2[0]['numdoc'];
                }
                $comprobanteNotaCredito = $serieNotaCredito . ' - ' . $correlativoNotaCredito;
            }
            if (count($data1) == 0 and count($data3) == 0) {
                $tipocomprobante = "GUIA MADRE";
            }
            $nro = $nro + 1;
            if ($data[$i]["simbolo"] == "S/") {
                $importe_soles_temp = $data[$i]["total"] / 1.18;
                $igv_soles_temp = $data[$i]["total"] - $importe_soles_temp;
                $importe_temp = $importe_soles_temp;
                $igv_temp = $igv_soles_temp;
            }
            if ($data[$i]["simbolo"] == "US $") {
                $importe_dolares_temp = $data[$i]["total"] / 1.18;
                $igv_dolares_temp = $data[$i]["total"] - $importe_dolares_temp;
                $importe_temp = $importe_dolares_temp;
                $igv_temp = $igv_dolares_temp;
            }
            $lblmotivodevolucion = $MotivoDevolucion[$data[$i]["idmotivodevolucion"]];
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $nro);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), substr($data[$i]["fechaaprobada"], 0, 10));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), html_entity_decode(substr($data[$i]["codigopa"], 0, 73), ENT_QUOTES, 'UTF-8'));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), html_entity_decode(substr($data[$i]["nompro"], 0, 73), ENT_QUOTES, 'UTF-8'));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $data[$i]["cantidad"]);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), $data[$i]["simbolo"] . ' ' . number_format($data[$i]["precio"], 2));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), $data[$i]["simbolo"] . ' ' . number_format($importe_temp, 2));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), $data[$i]["simbolo"] . ' ' . number_format($igv_temp, 2));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), $data[$i]["simbolo"] . ' ' . number_format($data[$i]["total"], 2));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), $data[$i]["iddevolucion"]);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), $data[$i]["codigov"]);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), $tipocomprobante);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), $comprobante);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('N' . ($contador), $comprobanteNotaCredito);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), $lblmotivodevolucion);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('P' . ($contador), html_entity_decode(substr($data[$i]["observaciones"], 0, 73), ENT_QUOTES, 'UTF-8'));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('Q' . ($contador), $data[$i]["serie"]);

            if ($data[$i]["simbolo"] == "S/") {
                $sumImporteSoles = $importe_soles_temp + $sumImporteSoles;
                $sumIgvSoles = $igv_soles_temp + $sumIgvSoles;
                $sumTotalSoles = $data[$i]["total"] + $sumTotalSoles;
            }
            if ($data[$i]["simbolo"] == "US $") {
                $sumImporteDolares = $importe_dolares_temp + $sumImporteDolares;
                $sumIgvDolares = $igv_dolares_temp + $sumIgvDolares;
                $sumTotalDolares = $data[$i]["total"] + $sumTotalDolares;
            }

            $contador ++;
            $lblmotivodevolucion = '';
        }
        $contador++;
        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":Q" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':E' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . $contador . ':Q' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), 'TOTAL SOLES');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), 'S/ ' . number_format($sumImporteSoles, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), 'S/ ' . number_format($sumIgvSoles, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), 'S/ ' . number_format($sumTotalSoles, 2));

        $contador++;
        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":Q" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":Q" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':E' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . $contador . ':Q' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), 'TOTAL DOLARES');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), 'US $ ' . number_format($sumImporteDolares, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), 'US $ ' . number_format($sumIgvDolares, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), 'US $ ' . number_format($sumTotalDolares, 2));

        $contador++;
        $objPHPExcel->getActiveSheet()->setTitle('PRODUCTOS DEVUELTOS POR SEMANA');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    
    function cargaIngresos() {
        $idcliente = $_REQUEST['idCliente'];
        $idcobrador = $_REQUEST['idCobrador'];
        $idordenventa = $_REQUEST['idOrdenVenta'];
        $idtipocobro = $_REQUEST['idTipoCobro'];
        $fechaInicio = $_REQUEST['fechaInicio'];
        $cmbtipo = $_REQUEST['cmbTipo'];
        if ($idtipocobro != 1 && $idtipocobro != 3) {
            $cmbtipo = '';
        }
        if (!empty($fechaInicio)) {
            $fechaInicio = date('Y-m-d', strtotime($fechaInicio));
        }
        $fechaFinal = $_REQUEST['fechaFinal'];
        if (!empty($fechaFinal)) {
            $fechaFinal = date('Y-m-d', strtotime($fechaFinal));
        }
        $monto = $_REQUEST['monto'];
        $nrorecibo = $_REQUEST['nroRecibo'];
        $simbolo = $_REQUEST['simbolo'];

        if (!empty($monto)) {
            $monto = ' and montoingresado' . $simbolo . $monto;
        }

        $buquedafiltro1 = "DEL DIA " . $fechaInicio . " AL DIA " . substr($fechaFinal, 0, 10);


        $cliente = new Cliente();
        $actor = new Actor();
        $OrdenVenta = new OrdenVenta();
        if ($idcliente != '') {
            $dataCliente = $cliente->buscaCliente($idcliente);
            foreach ($dataCliente as $value) {
                $nombrecliente = $value['razonsocial'];
            }
            $buquedafiltro2 = "SOLO INGRESOS DEL CLIENTE : " . $nombrecliente;
        }
        if ($idcobrador != '') {
            $dataActor = $actor->buscarxid($idcobrador);
            foreach ($dataActor as $value) {
                $nombrecobrador = $value['nombrecompleto'];
                if ($nombrecobrador == "") {
                    $get_nombres = $value['nombres'];
                    $get_apellidopaterno = $value['apellidopaterno'];
                    $get_apellidomaterno = $value['apellidomaterno'];
                    $nombrecobrador = $get_nombres . ' ' . $get_apellidopaterno . ' ' . $get_apellidomaterno;
                }
            }
            $buquedafiltro2 = "SOLO INGRESOS DEL COBRADOR : " . $nombrecobrador;
        }

        if ($idordenventa != '') {
            $get_codigov = $OrdenVenta->BuscarCampoOVxId($idordenventa, 'codigov');
            $buquedafiltro2 = "SOLO INGRESOS DE LA ORDEN VENTA : " . $get_codigov;
        }

        $ingresos = $this->AutoLoadModel('reporte');
        $ordenventa = $this->AutoLoadModel('ordenventa');
        $tipoIngreso = $this->tipoIngreso();
        $dataIngresos = $ingresos->reportingresos($idordenventa, $idcliente, $idcobrador, $nrorecibo, $fechaInicio, $fechaFinal, $monto, $idtipocobro, $cmbtipo);

        $cantidad = count($dataIngresos);
        $columna = "";
        $total = 0;
        $saldo = 0;
        $totalAnulado = 0;
        $totalLiberado = 0;

        //start**********************************
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reporteIngresos.xls';
        $filename = $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $titulos = array('N', 'FECHA PAGO', 'TIP.INGRE', 'CLIENTE', 'ORDEN', 'VENDEDOR', 'COBRADOR', 'N RECIBO', 'N OPERACION', 'M.INGRESADO', 'M.ASIGNADO', 'SALDO.F', 'M.ANULADO', 'M.LIBERADO', 'OBSERVACIONES');

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('rgb' => 'FFFFFFFF')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('N')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('O')->setAutoSize(true);

        $contador = 0;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':O' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":O" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "REPORTE DE INGRESOS");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':O' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":O" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);

        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $buquedafiltro1);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':O' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":O" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);


        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), html_entity_decode(substr($buquedafiltro2, 0, 73), ENT_QUOTES, 'UTF-8'));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $titulos[0])
                ->setCellValue('B' . ($contador), $titulos[1])
                ->setCellValue('C' . ($contador), $titulos[2])
                ->setCellValue('D' . ($contador), $titulos[3])
                ->setCellValue('E' . ($contador), $titulos[4])
                ->setCellValue('F' . ($contador), $titulos[5])
                ->setCellValue('G' . ($contador), $titulos[6])
                ->setCellValue('H' . ($contador), $titulos[7])
                ->setCellValue('I' . ($contador), $titulos[8])
                ->setCellValue('J' . ($contador), $titulos[9])
                ->setCellValue('K' . ($contador), $titulos[10])
                ->setCellValue('L' . ($contador), $titulos[11])
                ->setCellValue('M' . ($contador), $titulos[12])
                ->setCellValue('N' . ($contador), $titulos[13])
                ->setCellValue('O' . ($contador), $titulos[14]);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":O" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $contador ++;
        //end**********************************
        for ($i = 0; $i < $cantidad; $i++) {
            $dataOrden = $ordenventa->buscarOrdenVentaxIdVendedor($dataIngresos[$i]['idOrdenVenta']);
            $simboloMoneda = $dataOrden[0]['Simbolo'];
            $acumulaxIdMoneda[$simboloMoneda]['totalAnulado'] += $dataIngresos[$i]['montoanulado'];
            $acumulaxIdMoneda[$simboloMoneda]['totalLiberado'] += $dataIngresos[$i]['montoliberado'];
            $acumulaxIdMoneda[$simboloMoneda]['total'] += $dataIngresos[$i]['montoasignado'] + $dataIngresos[$i]['saldo'];
            $acumulaxIdMoneda[$simboloMoneda]['saldo'] += $dataIngresos[$i]['saldo'];

            //start***********************************
            $nro = $nro + 1;
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $nro);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), ($dataIngresos[$i]['fcobro']));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), ($tipoIngreso[$dataIngresos[$i]['tipocobro']])  . ' ' . $dataIngresos[$i]['tipo']);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), html_entity_decode(substr($dataIngresos[$i]["razonsocial"], 0, 73), ENT_QUOTES, 'UTF-8'));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), ($dataOrden[0]['codigov']));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), ($dataOrden[0]['nombrevendedor']));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), ($dataIngresos[$i]['nombres'] . ' ' . $dataIngresos[$i]['apellidopaterno'] . ' ' . $dataIngresos[$i]['apellidomaterno']));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), ($dataIngresos[$i]['nrorecibo']));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), ($dataIngresos[$i]['nrooperacion']));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), $simboloMoneda . " " . number_format($dataIngresos[$i]['montoingresado'], 2));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), $simboloMoneda . " " . number_format($dataIngresos[$i]['montoasignado'], 2));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), $simboloMoneda . " " . number_format($dataIngresos[$i]['saldo'], 2));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), $simboloMoneda . " " . number_format($dataIngresos[$i]['montoanulado'], 2));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('N' . ($contador), $simboloMoneda . " " . number_format($dataIngresos[$i]['montoliberado'], 2));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), $dataIngresos[$i]['observaciones']);
            $contador ++;
            //end **********************************
        }
        $contador++;
        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "I" . ($contador) . ":L" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':H' . $contador);

        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), 'TOTAL INGRESOS SOLES');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), 'S/ ' . number_format($acumulaxIdMoneda['S/']['total'], 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), 'TOTAL SALDO SOLES');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), 'S/ ' . number_format($acumulaxIdMoneda['S/']['saldo'], 2));

        $contador++;
        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "I" . ($contador) . ":L" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':H' . $contador);

        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), 'TOTAL INGRESOS DOLARES');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), 'US $ ' . number_format($acumulaxIdMoneda['US $']['total'], 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), 'TOTAL SALDO DOLARES');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), 'US $ ' . number_format($acumulaxIdMoneda['US $']['saldo'], 2));

        $contador++;
        $objPHPExcel->getActiveSheet()->setTitle('REPORTE DE INGRESOS');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);

//          $columna.="<tr><td style='background:white;' colspan='13'>&nbsp</td></tr>";
//          $columna.="<tr><td colspan='7'>&nbsp</td><th >Total Ingresos  S/.</th><td>".number_format($acumulaxIdMoneda['S/']['total'],2)."</td><th>Total Saldo S/. </th><td>".number_format($acumulaxIdMoneda['S/']['saldo'],2)."</td><td></td><td></td><td></td></tr>";
//          $columna.="<tr><td colspan='7'>&nbsp</td><th >Total Ingresos US $</th><td>".number_format($acumulaxIdMoneda['US $']['total'],2)."</td><th>Total Saldo US $</th><td>".number_format($acumulaxIdMoneda['US $']['saldo'],2)."</td><td></td><td></td><td></td></tr>";
    }
    

    public function ventasfacturadonofacturado1() {
        set_time_limit(1000);
        $url_fechaini = $_REQUEST['txtFechaInicio'];
        $url_fechafin = $_REQUEST['txtFechaFinal'];
        $url_idmoneda = $_REQUEST['cmbMoneda'];
        $url_situacion=$_REQUEST['cmbSituacion'];
        $url_opcion = $_REQUEST['cmbFiltro']; // 0 = todo, 1 = facturado, 2 = no facturado
        $esAnulado = $_REQUEST['cmbEstado'];
        $filtro = "";
        if ($url_idmoneda == 1) {
            $filtro = "VENTAS SOLO EN SOLES";
        }
        if ($url_idmoneda == 2) {
            $filtro = "VENTAS SOLO EN DOLARES";
        }
        $reporte = $this->AutoLoadModel('reporte');
        $listar_ventasfacturadonofacturado1 = $reporte->ventasfacturadonofacturado1($url_fechaini, $url_fechafin, $url_idmoneda, $url_situacion);
        //********************************* Proceso de trasmutacion de ovs generadas de otros dias pero facturadas segun la fecha enviada
        $get_segregado_idordenventas1 = '';
        for ($i = 0; $i < count($listar_ventasfacturadonofacturado1); $i++) {
            $idordenventa = $listar_ventasfacturadonofacturado1[$i]['idordenventa'];
            $get_segregado_idordenventas1 .= $idordenventa . ',';
        }
        $get_segregado_idordenventas1 = substr($get_segregado_idordenventas1, 0, -1);
        $listar_ovs_de_comprobantesFaltantes = array();
        if ($url_opcion != 2) {
            $listar_ovs_de_comprobantesFaltantes = $reporte->listar_ovs_de_comprobantesFaltantes($url_fechaini, $url_fechafin, $url_idmoneda, $get_segregado_idordenventas1, $url_situacion);
        }
        $idordenventa = -1;
        $get_segregado_idordenventasFaltantes = '';
        for ($i = 0; $i < count($listar_ovs_de_comprobantesFaltantes); $i++) {
            if ($idordenventa != $listar_ovs_de_comprobantesFaltantes[$i]['idordenventa']) {
                $idordenventa = $listar_ovs_de_comprobantesFaltantes[$i]['idordenventa'];
                $get_segregado_idordenventasFaltantes .= $idordenventa . ',';
            }
        }
        $get_segregado_idordenventasFaltantes = substr($get_segregado_idordenventasFaltantes, 0, -1);
        if ($get_segregado_idordenventas1 != "" and $get_segregado_idordenventasFaltantes == "") {
            $get_segregado_total = $get_segregado_idordenventas1;
        }
        if ($get_segregado_idordenventas1 == "" and $get_segregado_idordenventasFaltantes != "") {
            $get_segregado_total = $get_segregado_idordenventasFaltantes;
        }
        if ($get_segregado_idordenventas1 != "" and $get_segregado_idordenventasFaltantes != "") {
            $get_segregado_total = $get_segregado_idordenventas1 . ',' . $get_segregado_idordenventasFaltantes;
        }
        $data = $reporte->ventasfacturadonofacturado2($get_segregado_total);
        //*********************************

        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reporteVentasFacturadoNoFacturado.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $titulos = array('N', 'FECHA.OV', 'FECHA.DES', 'ORD VENTA', 'RUC/DNI', 'CLIENTE', 'FACTURA', 'BOLETA', 'GUIA REMI', 'BI FACTURA', 'IGV FACT', 'BI BOLETA', 'IMPORT GUIA', 'TOTAL', 'Monto Perce', '%', 'Est Guia', 'Est comprobante');
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('rgb' => 'FFFFFFFF')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER
            )
                )
        );


        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('N')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('O')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('P')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('Q')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('R')->setAutoSize(true);


        $contador = 0;


        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':R' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":R" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":R" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":R" . ($contador))->getFill()->setRotation(1);
        if ($url_opcion == 0) {
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "REPORTE DE VENTAS DE LO FACTURADO Y NO FACTURADO DEL " . $url_fechaini . " AL " . $url_fechafin);
        } else if ($url_opcion == 1) {
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "REPORTE DE VENTAS DE LO FACTURADO DEL " . $url_fechaini . " AL " . $url_fechafin);
        } else if ($url_opcion == 2) {
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "REPORTE DE VENTAS DE LO NO FACTURADO DEL " . $url_fechaini . " AL " . $url_fechafin);
        }

        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':R' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":R" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":R" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":R" . ($contador))->getFill()->setRotation(1);

        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $filtro);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;



        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $titulos[0])
                ->setCellValue('B' . ($contador), $titulos[1])
                ->setCellValue('C' . ($contador), $titulos[2])
                ->setCellValue('D' . ($contador), $titulos[3])
                ->setCellValue('E' . ($contador), $titulos[4])
                ->setCellValue('F' . ($contador), $titulos[5])
                ->setCellValue('G' . ($contador), $titulos[6])
                ->setCellValue('H' . ($contador), $titulos[7])
                ->setCellValue('I' . ($contador), $titulos[8])
                ->setCellValue('J' . ($contador), $titulos[9])
                ->setCellValue('K' . ($contador), $titulos[10])
                ->setCellValue('L' . ($contador), $titulos[11])
                ->setCellValue('M' . ($contador), $titulos[12])
                ->setCellValue('N' . ($contador), $titulos[13])
                ->setCellValue('O' . ($contador), $titulos[14])
                ->setCellValue('P' . ($contador), $titulos[15])
                ->setCellValue('Q' . ($contador), $titulos[16])
                ->setCellValue('R' . ($contador), $titulos[17]);


        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":R" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":R" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":R" . ($contador))->getFill()->setRotation(1);
        $contador ++;


        $nro_aumentador = 0;
        $sum_importeGuia_soles = 0.00;
        $sum_biBoleta_soles = 0.00;
        $sum_totalcomprobante_soles = 0.00;
        $sum_subtotalFactura_soles = 0.00;
        $sum_igvFactura_soles = 0.00;
        $sum_percepcion_soles = 0.00;
        $sum_importeGuia_dolares = 0.00;
        $sum_biBoleta_dolares = 0.00;
        $sum_totalcomprobante_dolares = 0.00;
        $sum_subtotalFactura_dolares = 0.00;
        $sum_igvFactura_dolares = 0.00;
        $sum_percepcion_dolares = 0.00;
        $idordenventaTemp = -1;
        for ($i = 0; $i < count($data); $i++) {
            $serieGRemision = '';
            $numGRemision = '';
            $serieFactura = "";
            $correlativoFactura = "";
            $comprobanteFactura = "";

            $importeGuia_soles = 0.00;
            $subtotalFactura_soles = 0.00;
            $igvFactura_soles = 0.00;
            $totalcomprobante_soles = 0.00;
            $percepcion_soles = 0.00;
            $biBoleta_soles = 0.00;
            $porcentaje_percepcion_soles = '';

            $importeGuia_dolares = 0.00;
            $subtotalFactura_dolares = 0.00;
            $igvFactura_dolares = 0.00;
            $totalcomprobante_dolares = 0.00;
            $percepcion_dolares = 0.00;
            $biBoleta_dolares = 0.00;
            $porcentaje_percepcion_dolares = '';

            $que_comprobante_se_sumara = "";
            $serieBoleta = "";
            $correlativoBoleta = "";
            $comprobanteBoleta = '';
            $tipocomprobante = '';
            $electronico = '';
            $moneda = '';
            $estado_ov = '';
            $estadoComprobante = '';
            $documento = new Documento();
            $listar_comprobantes = $documento->listar_comprobantes($data[$i]['idordenventa'], $esAnulado);


            $tiene_comprobantes = count($listar_comprobantes);
            $listar_guia_remision = $documento->listar_guia_remision($data[$i]['idordenventa']);
            $tiene_guia_remision = count($listar_guia_remision);


            if ($data[$i]['estado_ov'] == '1') {
                $estado_ov = 'Activo';
            }
            if ($data[$i]['estado_ov'] == '0') {
                $estado_ov = 'Anulado';
            }

            //*************SE HACE DOS IMPRESIONES porque cuando comprobantes es igual a CERO  solo se imprime una fila
            //*************PERO CUANDO TIENE COMPROBANTES NO SABEMOS CUANTOS COMPROBANTES TENDRA UNA MISMA GUIA
            //*************POR ENDE UNA GUIA PUEDE TENER VARIAS FACTURAS (VARIAS IMPRESIONES EN UNA MISMA GUIA)
            if ($tiene_comprobantes == 0 && ($url_opcion == 2 || $url_opcion == 0)) {
                if ($tiene_comprobantes == 0 and $tiene_guia_remision >= 1) {
                    $serieGRemision = $listar_guia_remision[0]['serie'];
                    $numGRemision = $listar_guia_remision[0]['numdoc'];
                    //start solo suma guia que esta activa y lo hace una sola vez por orden
                    if ($idordenventaTemp != $data[$i]['idordenventa'] and $data[$i]['estado_ov'] == '1') {
                        if ($data[$i]['idmoneda'] == '1') {
                            $importeGuia_soles = $data[$i]['importeov'];
                            $sum_importeGuia_soles = $sum_importeGuia_soles + $importeGuia_soles;
                        }
                        if ($data[$i]['idmoneda'] == '2') {
                            $importeGuia_dolares = $data[$i]['importeov'];
                            $sum_importeGuia_dolares = $sum_importeGuia_dolares + $importeGuia_dolares;
                        }
                    }
                    //end solo suma guia que esta activa y lo hace una sola vez por orden
                }

                //START  CUANDO SOLO TIENE ORDEN DE VENTA Y NO TIENE GUIA DE REMISION, NI FACTURA, NI BOLETA
                if ($tiene_comprobantes == 0 and $tiene_guia_remision == 0 and $data[$i]['estado_ov'] == '1') {
                    //start suma el vaor de la ov a la constantes del total de guias de remision y lo hace una sola vez por orden
                    if ($idordenventaTemp != $data[$i]['idordenventa'] and $data[$i]['estado_ov'] == '1') {
                        if ($data[$i]['idmoneda'] == '1') {
                            $importeGuia_soles = $data[$i]['importeov'];
                            $sum_importeGuia_soles = $sum_importeGuia_soles + $importeGuia_soles;
                        }
                        if ($data[$i]['idmoneda'] == '2') {
                            $importeGuia_dolares = $data[$i]['importeov'];
                            $sum_importeGuia_dolares = $sum_importeGuia_dolares + $importeGuia_dolares;
                        }
                    }
                    //end suma el vaor de la ov a la constantes del total de guias de remision y lo hace una sola vez por orden
                }
                //END  CUANDO SOLO TIENE ORDEN DE VENTA Y NO TIENE GUIA DE REMISION, NI FACTURA, NI BOLETA
                //          ***************************************************************************************************
                // START  ORDENADO DE VARIABLES PARA IMPRIMIR FILA
                if ($data[$i]['ruc'] == '') {
                    $ruc_dni = $data[$i]['dni'];
                } else {
                    $ruc_dni = $data[$i]['ruc'];
                }

                if ($data[$i]['idmoneda'] == '1') {
                    $moneda = 'S/';
                }
                if ($data[$i]['idmoneda'] == '2') {
                    $moneda = 'US $';
                }

                if ($subtotalFactura_soles > 0) {
                    $percepcion_soles = $moneda . ' ' . number_format($percepcion_soles, 2);
                    $porcentaje_percepcion_soles = $data[$i]['percepcion'] * 100;
                    $porcentaje_percepcion_soles = $porcentaje_percepcion_soles . '%';
                } else {
                    $percepcion_soles = '';
                    $porcentaje_percepcion_soles = '';
                }

                if ($subtotalFactura_dolares > 0) {
                    $percepcion_dolares = $moneda . ' ' . number_format($percepcion_dolares, 2);
                    $porcentaje_percepcion_dolares = $data[$i]['percepcion'] * 100;
                    $porcentaje_percepcion_dolares = $porcentaje_percepcion_dolares . '%';
                } else {
                    $percepcion_dolares = '';
                    $porcentaje_percepcion_dolares = '';
                }

                $nro_aumentador = $nro_aumentador + 1;

                if ($data[$i]['idmoneda'] == '1') {
                    //***********************
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $nro_aumentador);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), $data[$i]['fordenventa']);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), $data[$i]['fechadespacho']);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), $data[$i]['codigov']);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $ruc_dni);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), $data[$i]['razonsocial']);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), $comprobanteFactura);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), $comprobanteBoleta);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), $serieGRemision . '-' . $numGRemision);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), $moneda . ' ' . number_format($subtotalFactura_soles, 2));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), $moneda . ' ' . number_format($igvFactura_soles, 2));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), $moneda . ' ' . number_format($biBoleta_soles, 2));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), $moneda . ' ' . number_format($importeGuia_soles, 2));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('N' . ($contador), $moneda . ' ' . number_format($totalcomprobante_soles, 2));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), $percepcion_soles);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('P' . ($contador), $porcentaje_percepcion_soles);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('Q' . ($contador), $estado_ov);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('R' . ($contador), $estadoComprobante);
                    $contador ++;
                    //***********************
                }
                if ($data[$i]['idmoneda'] == '2') {
                    //***********************
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $nro_aumentador);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), $data[$i]['fordenventa']);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), $data[$i]['fechadespacho']);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), $data[$i]['codigov']);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $ruc_dni);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), $data[$i]['razonsocial']);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), $comprobanteFactura);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), $comprobanteBoleta);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), $serieGRemision . '-' . $numGRemision);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), $moneda . ' ' . number_format($subtotalFactura_dolares, 2));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), $moneda . ' ' . number_format($igvFactura_dolares, 2));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), $moneda . ' ' . number_format($biBoleta_dolares, 2));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), $moneda . ' ' . number_format($importeGuia_dolares, 2));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('N' . ($contador), $moneda . ' ' . number_format($totalcomprobante_dolares, 2));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), $percepcion_dolares);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('P' . ($contador), $porcentaje_percepcion_dolares);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('Q' . ($contador), $estado_ov);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('R' . ($contador), $estadoComprobante);
                    $contador ++;
                    //***********************
                }

                // END  ORDENADO DE VARIABLES PARA IMPRIMIR FILA
                //              ****************************************************************************************************
            }



            if ($tiene_comprobantes >= 1 && ($url_opcion == 1 || $url_opcion == 0)) { // recrrera comprobantes asi esten anulados o activos pero solo sumara los activos
                //start limpia variables por vuelta
                $serieGRemision = '';
                $numGRemision = '';
                $importeGuia_soles = 0.00;
                $importeGuia_dolares = 0.00;
                //end limpia variables por vuelta


                $serieGRemision = $listar_guia_remision[0]['serie'];
                $numGRemision = $listar_guia_remision[0]['numdoc'];
                //start solo suma guia que esta activa y lo hace una sola vez por orden
                if ($idordenventaTemp != $data[$i]['idordenventa'] and $data[$i]['estado_ov'] == '1') {
                    if ($data[$i]['idmoneda'] == '1') {
                        $importeGuia_soles = $data[$i]['importeov'];
                        $sum_importeGuia_soles = $sum_importeGuia_soles + $importeGuia_soles;
                    }
                    if ($data[$i]['idmoneda'] == '2') {
                        $importeGuia_dolares = $data[$i]['importeov'];
                        $sum_importeGuia_dolares = $sum_importeGuia_dolares + $importeGuia_dolares;
                    }
                }
                //end solo suma guia que esta activa y lo hace una sola vez por orden

                for ($j = 0; $j < count($listar_comprobantes); $j++) {
                    //start limpia variables por vuelta
                    $serieFactura = "";
                    $correlativoFactura = "";
                    $comprobanteFactura = "";

                    $subtotalFactura_soles = 0.00;
                    $igvFactura_soles = 0.00;
                    $totalcomprobante_soles = 0.00;
                    $percepcion_soles = 0.00;
                    $biBoleta_soles = 0.00;
                    $porcentaje_percepcion_soles = '';

                    $subtotalFactura_dolares = 0.00;
                    $igvFactura_dolares = 0.00;
                    $totalcomprobante_dolares = 0.00;
                    $percepcion_dolares = 0.00;
                    $biBoleta_dolares = 0.00;
                    $porcentaje_percepcion_dolares = '';

                    $que_comprobante_se_sumara = "";
                    $serieBoleta = "";
                    $correlativoBoleta = "";
                    $comprobanteBoleta = '';
                    $tipocomprobante = '';
                    $electronico = '';
                    $moneda = '';
                    $estado_ov = '';
                    $estadoComprobante = '';
                    //end limpia variables por vuelta
                    if ($data[$i]['estado_ov'] == '1') {
                        $estado_ov = 'Activo';
                    }
                    if ($data[$i]['estado_ov'] == '0') {
                        $estado_ov = 'Anulado';
                    }

                    if ($listar_comprobantes[$j]['nombredoc'] == 1) { // si tiene facturas
                        // START OBTENIENDO CORRELATIVO FACTURA
                        if ($listar_comprobantes[$j]["electronico"] == 1) {
                            $electronico = '';
                            $serieFactura = $documento->add_ceros($listar_comprobantes[$j]['serie'], 3);
                            $serieFactura = "F" . $serieFactura;
                            $correlativoFactura = $documento->add_ceros($listar_comprobantes[$j]['numdoc'], 8);
                        }

                        if ($listar_comprobantes[$j]["electronico"] == 0) {
                            $electronico = 'FISICA';
                            $serieFactura = $listar_comprobantes[$j]['serie'];
                            $correlativoFactura = $listar_comprobantes[$j]['numdoc'];
                        }
                        $comprobanteFactura = $serieFactura . ' - ' . $correlativoFactura;
                        $tipocomprobante = "FACTURA " . $electronico;
                        // END OBTENIENDO CORRELATIVO FACTURA

                        if ($data[$i]['idmoneda'] == '1') {
                            $subtotalFactura_soles = $listar_comprobantes[$j]['montofacturado'] - $listar_comprobantes[$j]['montoigv'];
                            $igvFactura_soles = $listar_comprobantes[$j]['montoigv'];
                            $totalcomprobante_soles = $listar_comprobantes[$j]['montofacturado'];
                            $percepcion_soles = $listar_comprobantes[$j]['montofacturado'] * $data[$i]['percepcion'];
                            $percepcion_soles = number_format($percepcion_soles, 2);
                        }
                        if ($data[$i]['idmoneda'] == '2') {
                            $subtotalFactura_dolares = $listar_comprobantes[$j]['montofacturado'] - $listar_comprobantes[$j]['montoigv'];
                            $igvFactura_dolares = $listar_comprobantes[$j]['montoigv'];
                            $totalcomprobante_dolares = $listar_comprobantes[$j]['montofacturado'];
                            $percepcion_dolares = $listar_comprobantes[$j]['montofacturado'] * $data[$i]['percepcion'];
                            $percepcion_dolares = number_format($percepcion_dolares, 2);
                        }
                        if ($listar_comprobantes[$j]['esAnulado'] == 0) {
                            $estadoComprobante = 'Activo';
                        }
                        if ($listar_comprobantes[$j]['esAnulado'] == 1) {
                            $estadoComprobante = 'Anulado';
                        }
                        $que_comprobante_se_sumara = 'FACTURA';
                    }

                    if ($listar_comprobantes[$j]['nombredoc'] == 2) { // si tiene boleta
                        // START OBTENIENDO CORRELATIVO BOLETA
                        if ($listar_comprobantes[$j]["electronico"] == 1) {
                            $electronico = '';
                            $serieBoleta = $documento->add_ceros($listar_comprobantes[$j]['serie'], 3);
                            $serieBoleta = 'B' . $serieBoleta;
                            $correlativoBoleta = $documento->add_ceros($listar_comprobantes[$j]['numdoc'], 8);
                        }
                        if ($listar_comprobantes[$j]["electronico"] == 0) {
                            $electronico = 'FISICA';
                            $serieBoleta = $listar_comprobantes[$j]['serie'];
                            $correlativoBoleta = $listar_comprobantes[$j]['numdoc'];
                        }
                        $comprobanteBoleta = $serieBoleta . ' - ' . $correlativoBoleta;
                        $tipocomprobante = "BOLETA " . $electronico;
                        // END OBTENIENDO CORRELATIVO BOLETA

                        if ($data[$i]['idmoneda'] == '1') {
                            $biBoleta_soles = $listar_comprobantes[$j]['montofacturado'];
                            $totalcomprobante_soles = $listar_comprobantes[$j]['montofacturado'];
                        }
                        if ($data[$i]['idmoneda'] == '2') {
                            $biBoleta_dolares = $listar_comprobantes[$j]['montofacturado'];
                            $totalcomprobante_dolares = $listar_comprobantes[$j]['montofacturado'];
                        }

                        if ($listar_comprobantes[$j]['esAnulado'] == 0) {
                            $estadoComprobante = 'Activo';
                        }
                        if ($listar_comprobantes[$j]['esAnulado'] == 1) {
                            $estadoComprobante = 'Anulado';
                        }
                        $que_comprobante_se_sumara = 'BOLETA';
                    }
                    //start solo sumando el comprobante que esta activo
                    if ($que_comprobante_se_sumara == 'BOLETA' and $listar_comprobantes[$j]['esAnulado'] == 0) {
                        if ($data[$i]['idmoneda'] == '1') {
                            $sum_biBoleta_soles = $sum_biBoleta_soles + $biBoleta_soles;
                            $sum_totalcomprobante_soles = $sum_totalcomprobante_soles + $totalcomprobante_soles;
                        }
                        if ($data[$i]['idmoneda'] == '2') {
                            $sum_biBoleta_dolares = $sum_biBoleta_dolares + $biBoleta_dolares;
                            $sum_totalcomprobante_dolares = $sum_totalcomprobante_dolares + $totalcomprobante_dolares;
                        }
                    }
                    if ($que_comprobante_se_sumara == 'FACTURA' and $listar_comprobantes[$j]['esAnulado'] == 0) {
                        if ($data[$i]['idmoneda'] == '1') {
                            $sum_subtotalFactura_soles = $sum_subtotalFactura_soles + $subtotalFactura_soles;
                            $sum_igvFactura_soles = $sum_igvFactura_soles + $igvFactura_soles;
                            $sum_totalcomprobante_soles = $sum_totalcomprobante_soles + $totalcomprobante_soles;
                            $sum_percepcion_soles = $sum_percepcion_soles + $percepcion_soles;
                        }
                        if ($data[$i]['idmoneda'] == '2') {
                            $sum_subtotalFactura_dolares = $sum_subtotalFactura_dolares + $subtotalFactura_dolares;
                            $sum_igvFactura_dolares = $sum_igvFactura_dolares + $igvFactura_dolares;
                            $sum_totalcomprobante_dolares = $sum_totalcomprobante_dolares + $totalcomprobante_dolares;
                            $sum_percepcion_dolares = $sum_percepcion_dolares + $percepcion_dolares;
                        }
                    }
                    //
                    $idordenventaTemp = $data[$i]['idordenventa'];

                    //            ***************************************************************************************************
                    // START  ORDENADO DE VARIABLES PARA IMPRIMIR FILA
                    if ($data[$i]['ruc'] == '') {
                        $ruc_dni = $data[$i]['dni'];
                    } else {
                        $ruc_dni = $data[$i]['ruc'];
                    }

                    if ($data[$i]['idmoneda'] == '1') {
                        $moneda = 'S/';
                    }
                    if ($data[$i]['idmoneda'] == '2') {
                        $moneda = 'US $';
                    }

                    if ($subtotalFactura_soles > 0) {
                        $percepcion_soles = $moneda . ' ' . $percepcion_soles;
                        $porcentaje_percepcion_soles = $data[$i]['percepcion'] * 100;
                        $porcentaje_percepcion_soles = $porcentaje_percepcion_soles . '%';
                    } else {
                        $percepcion_soles = '';
                        $porcentaje_percepcion_soles = '';
                    }

                    if ($subtotalFactura_dolares > 0) {
                        $percepcion_dolares = $moneda . ' ' . $percepcion_dolares;
                        $porcentaje_percepcion_dolares = $data[$i]['percepcion'] * 100;
                        $porcentaje_percepcion_dolares = $porcentaje_percepcion_dolares . '%';
                    } else {
                        $percepcion_dolares = '';
                        $porcentaje_percepcion_dolares = '';
                    }

                    $nro_aumentador = $nro_aumentador + 1;

                    if ($data[$i]['idmoneda'] == '1') {
                        //***********************
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $nro_aumentador);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), $data[$i]['fordenventa']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), $data[$i]['fechadespacho']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), $data[$i]['codigov']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $ruc_dni);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), $data[$i]['razonsocial']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), $comprobanteFactura);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), $comprobanteBoleta);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), $serieGRemision . '-' . $numGRemision);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), $moneda . ' ' . number_format($subtotalFactura_soles, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), $moneda . ' ' . number_format($igvFactura_soles, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), $moneda . ' ' . number_format($biBoleta_soles, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), $moneda . ' ' . number_format($importeGuia_soles, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('N' . ($contador), $moneda . ' ' . number_format($totalcomprobante_soles, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), $percepcion_soles);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('P' . ($contador), $porcentaje_percepcion_soles);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('Q' . ($contador), $estado_ov);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('R' . ($contador), $estadoComprobante);
                        $contador ++;
                        //***********************
                    }
                    if ($data[$i]['idmoneda'] == '2') {
                        //***********************
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $nro_aumentador);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), $data[$i]['fordenventa']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), $data[$i]['fechadespacho']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), $data[$i]['codigov']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $ruc_dni);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), $data[$i]['razonsocial']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), $comprobanteFactura);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), $comprobanteBoleta);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), $serieGRemision . '-' . $numGRemision);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), $moneda . ' ' . number_format($subtotalFactura_dolares, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), $moneda . ' ' . number_format($igvFactura_dolares, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), $moneda . ' ' . number_format($biBoleta_dolares, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), $moneda . ' ' . number_format($importeGuia_dolares, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('N' . ($contador), $moneda . ' ' . number_format($totalcomprobante_dolares, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), $percepcion_dolares);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('P' . ($contador), $porcentaje_percepcion_dolares);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('Q' . ($contador), $estado_ov);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('R' . ($contador), $estadoComprobante);
                        $contador ++;
                        //***********************
                    }
                    // END  ORDENADO DE VARIABLES PARA IMPRIMIR FILA
                    //            ****************************************************************************************************
                }
            }
        }

        $totalNoFacturadoSoles = $sum_importeGuia_soles - $sum_totalcomprobante_soles;
        $totalNoFacturadoDolares = $sum_importeGuia_dolares - $sum_totalcomprobante_dolares;


        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":R" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":R" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":R" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':H' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('P' . $contador . ':R' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), 'TOTAL SOLES');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), 'S/ ' . number_format($sum_subtotalFactura_soles, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), 'S/ ' . number_format($sum_igvFactura_soles, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), 'S/ ' . number_format($sum_biBoleta_soles, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), 'S/ ' . number_format($sum_importeGuia_soles, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('N' . ($contador), 'S/ ' . number_format($sum_totalcomprobante_soles, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), 'S/ ' . number_format($sum_percepcion_soles, 2));
        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":R" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":R" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":R" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':H' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('P' . $contador . ':R' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), 'TOTAL DOLARES');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), 'US $ ' . number_format($sum_subtotalFactura_dolares, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), 'US $ ' . number_format($sum_igvFactura_dolares, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), 'US $ ' . number_format($sum_biBoleta_dolares, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), 'US $ ' . number_format($sum_importeGuia_dolares, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('N' . ($contador), 'US $ ' . number_format($sum_totalcomprobante_dolares, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), 'US $ ' . number_format($sum_percepcion_dolares, 2));
        $contador++;
        $contador++;
        $contador++;
        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "I" . ($contador) . ":O" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . $contador . ':L' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('M' . $contador . ':O' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), '');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), 'TOTAL EN VENTAS FACTURADO');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), 'TOTAL EN VENTAS NO FACTURADO');
        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "I" . ($contador) . ":O" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . $contador . ':L' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('M' . $contador . ':O' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), 'TOTAL SOLES');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), 'S/ ' . number_format($sum_totalcomprobante_soles, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), 'S/ ' . number_format($totalNoFacturadoSoles, 2));
        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "I" . ($contador) . ":O" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . $contador . ':L' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('M' . $contador . ':O' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), 'TOTAL DOLARES');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), 'US $ ' . number_format($sum_totalcomprobante_dolares, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), 'US $ ' . number_format($totalNoFacturadoDolares, 2));

        $objPHPExcel->getActiveSheet()->setTitle('VENTAS FACTURADO Y NO FACTURADO');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    function reportegeneralcobranzas() {
        set_time_limit(1500);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'cuadregeneral_inventario.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $reporte = $this->AutoLoadModel('reporte');
        $tipo = $this->AutoLoadModel('tipocobranza');
        $ordenGasto = $this->AutoLoadModel('ordengasto');
        $tipoCobroIni = $this->configIniTodo('TipoCobro');
        $movimiento = $this->AutoLoadModel('movimiento');
        $detalleordencobro = $this->AutoLoadModel('detalleordencobro');
        $detalleordencobroingreso = $this->AutoLoadModel('detalleordencobroingreso');

        $idzona = $_REQUEST['GC-idzona'];
        $idcategoriaprincipal = $_REQUEST['GC-idcategoriaprincipal'];
        $idcategoria = $_REQUEST['GC-idcategoria'];
        $idvendedor = $_REQUEST['GC-idvendedor'];
        $idtipocobranza = $_REQUEST['GC-idtipocobranza'];
        $idtipocobro = $_REQUEST['GC-idtipocobro'];
        $fechaInicio = $_REQUEST['GC-fechaInicio'];
        $fechaFinal = $_REQUEST['GC-fechaFinal'];
        $pendiente = $_REQUEST['GC-pendiente'];
        $cancelado = $_REQUEST['GC-cancelado'];
        $octava = $_REQUEST['GC-octava'];
        $novena = $_REQUEST['GC-novena'];
        $idcobrador = $_REQUEST['GC-idcobrador'];
        $IdCliente = $_REQUEST['GC-IdCliente'];
        $IdOrdenVenta = $_REQUEST['GC-IdOrdenVenta'];
        $vendedor = $_REQUEST['GC-vendedor'];
        $tipocobro = $_REQUEST['GC-tipocobro'];
        $recepcionLetras = $_REQUEST['GC-recepcionLetras'];
        $ubicacion = $_REQUEST['GC-ubicacion'];

        $nombreCobrador = "-";
        if (!empty($idcobrador)) {
            $actor = $this->AutoLoadModel('actor');
            $dataCobrador = $actor->buscarxid($idcobrador);
            $nombreCobrador = $dataCobrador[0]['nombres'] . " " . $dataCobrador[0]['apellidopaterno'] . " " . $dataCobrador[0]['apellidomaterno'];
        }
        $nombrecliente = "-";
        if (!empty($IdCliente)) {
            $clientemodel = $this->AutoLoadModel('cliente');
            $dataCliente = $clientemodel->listadoxFiltro("idcliente='$IdCliente'");
            $nombrecliente = $dataCliente[0]['razonsocial'];
        }

        $octavaNovena = " ";
        if (!empty($octava) && !empty($novena)) {
            $octavaNovena .= " and (wc_detalleordencobro.`fvencimiento`=DATE_SUB(CURDATE(), INTERVAL 8 DAY) or wc_detalleordencobro.`fvencimiento`=DATE_SUB(CURDATE(), INTERVAL 9 DAY)) and wc_detalleordencobro.`situacion`='' ";
        } elseif (!empty($novena)) {
            $octavaNovena .= " and wc_detalleordencobro.`fvencimiento`=DATE_SUB(CURDATE(), INTERVAL 9 DAY) and wc_detalleordencobro.`situacion`='' ";
        } elseif (!empty($octava)) {
            $octavaNovena .= " and wc_detalleordencobro.`fvencimiento`=DATE_SUB(CURDATE(), INTERVAL 8 DAY) and wc_detalleordencobro.`situacion`='' ";
        }

        $situacion = "";
        if (!empty($pendiente) && !empty($cancelado)) {
            $situacion .= " and (wc_detalleordencobro.`situacion`='' or wc_detalleordencobro.`situacion`='cancelado') ";
        } elseif (!empty($cancelado)) {
            $situacion .= " and wc_detalleordencobro.`situacion`='cancelado' ";
        } elseif (!empty($pendiente)) {
            $situacion .= " and wc_detalleordencobro.`situacion`='' ";
        }
        if ($_REQUEST['fechaInicio'] != "") {
            $fechaInicio = date('Y-m-d', strtotime($_REQUEST['fechaInicio']));
        }

        if ($_REQUEST['fechaFinal'] != "") {
            $fechaFinal = date('Y-m-d', strtotime($_REQUEST['fechaFinal']));
        }
        if ($_REQUEST['fechaPagoInicio'] != "") {
            $fechaPagoInicio = date('Y-m-d', strtotime($_REQUEST['fechaPagoInicio']));
        } else {
            $fechaPagoInicio = $_REQUEST['fechaPagoInicio'];
        }
        if ($_REQUEST['fechaPagoFinal'] != "") {
            $fechaPagoFinal = date('Y-m-d', strtotime($_REQUEST['fechaPagoFinal']));
        } else {
            $fechaPagoFinal = $_REQUEST['fechaPagoFinal'];
        }
        $idcategorias = "";
        if (!empty($idcobrador)) {
            $cobrador = $this->AutoLoadModel('cobrador');
            $dataCobrador = $cobrador->buscaZonasxCobrador($idcobrador);
            $cantidadCobrador = count($dataCobrador);
            if ($cantidadCobrador != 0) {
                $idcategorias .= " and (";
                for ($i = 0; $i < $cantidadCobrador; $i++) {
                    if ($i == 0) {
                        $idcategorias .= " wc_categoria.`idcategoria`='" . $dataCobrador[$i]['idzona'] . "' ";
                    } else {
                        $idcategorias .= " or wc_categoria.`idcategoria`='" . $dataCobrador[$i]['idzona'] . "' ";
                    }
                }
                $idcategorias .= " ) ";
            } else {
                $idcategorias .= " and  wc_categoria.`idcategoria`='0' ";
            }
        } elseif (!empty($idcategoria)) {
            $idcategorias = " and wc_categoria.`idcategoria`='" . $idcategoria . "' ";
        }

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFB3D9FF')
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'left' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
        ));

        $sharedStyletitulo = new PHPExcel_Style();
        $sharedStyletitulo->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'left' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
        ));

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'left' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
        ));

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ), 'font' => array(
                'size' => 13
            )
        ));

        $sharedStyleNegro = new PHPExcel_Style();
        $sharedStyleNegro->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => '00000000')
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ), 'font' => array(
                'size' => 12,
                'color' => array('argb' => 'FFFFFFFF')
            )
        ));

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFE4F1FF')
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ), 'font' => array(
                'size' => 12
            )
        ));

        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFFFFFFF')
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'left' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
        ));

        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFFFFFFF')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'left' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
        ));

        $sharedStyle6 = new PHPExcel_Style();
        $sharedStyle6->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFFFFFFF')
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'left' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
        ));

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);

        $contador = 1;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':F' . $contador);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($contador) . ":F" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "RESUMEN GENERAL DE COBRANZAS");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;
        $contador++;

        $ubicacion = explode("//", $ubicacion);
        $tempUbicacion = "";
        if ($ubicacion[0] != "Zona Geografica") {
            $tempUbicacion = $ubicacion[0];
        }
        if ($ubicacion[1] != "Zona Cobranza-Categoria") {
            $tempUbicacion .= (!empty($tempUbicacion) ? ' - ' : '') . $ubicacion[1];
        }
        if ($ubicacion[2] != "Zona Cobranza-Detalle") {
            $tempUbicacion .= (!empty($tempUbicacion) ? ' - ' : '') . $ubicacion[2];
        }
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "D" . ($contador) . ":D" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "B" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "E" . ($contador) . ":F" . ($contador));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':C' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "Ubicacion: ");
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), (!empty($tempUbicacion) ? $tempUbicacion : 'Todos'));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), "Cobrador: ");
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $nombreCobrador);

        $contador++;
        $arrayidtipocobranza[0] = "-";
        $arrayidtipocobranza[14] = "Moroso";
        $arrayidtipocobranza[15] = "Cobranza Pesada";
        $arrayidtipocobranza[16] = "Problema Potencial";
        $arrayidtipocobranza[17] = "Incobrables";
        $arrayidtipocobranza[18] = "Por vencer";

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "D" . ($contador) . ":D" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "B" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "E" . ($contador) . ":F" . ($contador));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':C' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "Tipo Cobranza:  ");
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), $arrayidtipocobranza[$idtipocobranza]);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), "Vendedor: ");
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), (!empty($vendedor) ? $vendedor : '-'));

        $contador++;
        $tempCodigoOV = "-";
        if (!empty($IdOrdenVenta)) {
            $ordenventaModel = $this->AutoLoadModel('ordenventa');
            $tempCodigoOV = $ordenventaModel->sacarCodigo($IdOrdenVenta);
        }

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "D" . ($contador) . ":D" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "B" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "E" . ($contador) . ":F" . ($contador));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':C' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "Cliente:  ");
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), $nombrecliente);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), "Orden Venta: ");
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $tempCodigoOV);

        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "D" . ($contador) . ":D" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "B" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "E" . ($contador) . ":F" . ($contador));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':C' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "Fecha Vencimiento: ");
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), $fechaInicio . " - " . $fechaFinal);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), "Fecha Pago: ");
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $fechaPagoInicio . " - " . $fechaPagoFinal);

        $contador++;

        $filtroEstado = "";
        if (!empty($pendiente)) {
            $filtroEstado = "Pendiente";
        }
        if (!empty($cancelado)) {
            if (!empty($filtroEstado)) {
                $filtroEstado .= " - ";
            }
            $filtroEstado .= "Cancelado";
        }
        if (!empty($octava)) {
            if (!empty($filtroEstado)) {
                $filtroEstado .= " - ";
            }
            $filtroEstado .= "Octava";
        }
        if (!empty($novena)) {
            if (!empty($filtroEstado)) {
                $filtroEstado .= " - ";
            }
            $filtroEstado .= "Novena";
        }

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":A" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "B" . ($contador) . ":F" . ($contador));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':F' . $contador);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "Estado: ");
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), (!empty($filtroEstado) ? $filtroEstado : "-"));

        $arrayTipoCobro[1] = "Contado";
        $arrayTipoCobro[2] = "Credito";
        $arrayTipoCobro[3] = "Letras Banco";
        $arrayTipoCobro[4] = "Letras Cartera";
        $arrayTipoCobro[5] = "Letras Protestadas";

        $iniciogeneral = 0;
        $inicio = 1;
        $fin = 5;
        if (!empty($idtipocobro)) {
            $inicio = $idtipocobro;
            $fin = $idtipocobro;
        }
        while ($inicio <= $fin) {
            if ($inicio == 3) {//letras al banco
                $filtro = "wc_detalleordencobro.`formacobro`='3' and wc_ordencobro.`tipoletra`=1";
            } elseif ($inicio == 4) { //letras Cartera
                $filtro = "wc_detalleordencobro.`formacobro`='3' and  wc_ordencobro.`tipoletra`=2";
            } elseif ($inicio == 2) {//credito
                $filtro = "wc_detalleordencobro.`formacobro`='2' and wc_detalleordencobro.referencia=''";
            } elseif ($inicio == 1) {//al contado
                $filtro = "wc_detalleordencobro.`formacobro`='1' ";
            } elseif ($inicio == 5) {//letras protestadas
                $filtro = "wc_detalleordencobro.`formacobro`='2' and (substring( wc_detalleordencobro.referencia,9,1)='p' or substring( wc_detalleordencobro.referencia,11,1)='p')";
                $filtro .= "and wc_zona.`nombrezona` not like '%incobrab%'";
            }
            $datareporte = $reporte->reportetotalgeneralcobranzas($filtro, $idzona, $idcategoriaprincipal, $idcategorias, $idvendedor, $idtipocobranza, $fechaInicio, $fechaFinal, $octavaNovena, $situacion, $fechaPagoInicio, $fechaPagoFinal, $IdCliente, $IdOrdenVenta);
            $cantidadreporte = count($datareporte);

            if ($cantidadreporte > 0) {
                $contador++;
                $contador++;
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":A" . ($contador));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':F' . $contador);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), strtoupper($arrayTipoCobro[$inicio]));

                $tempIdpadrec = -1;
                $iniciogeneral ++;

                $ultimaLetra = "D";
                for ($i = 0; $i < $cantidadreporte; $i++) {
                    if ($inicio == 5) {
                        $ultimaLetra = "F";
                    }
                    if ($datareporte[$i]['idpadrec'] != $tempIdpadrec) {
                        $tempIdpadrec = $datareporte[$i]['idpadrec'];

                        $contador++;
                        $contador++;
                        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
                        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "C" . ($contador) . ":" . $ultimaLetra . ($contador));
                        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":" . $ultimaLetra . ($contador))->getFont()->setBold(true);
                        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":" . $ultimaLetra . ($contador))->getFill()->setRotation(1);
                        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
                        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':' . $ultimaLetra . $contador);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "ZONA GEOGRAFICA:");
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), $datareporte[$i]['nombrec']);

                        $contador++;
                        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":" . $ultimaLetra . ($contador));
                        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":" . $ultimaLetra . ($contador))->getFont()->setBold(true);
                        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":" . $ultimaLetra . ($contador))->getFill()->setRotation(1);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "MONEDA");
                        if ($inicio == 5) {
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), "IMPORTE COBRO");
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), "GASTO DE PROTESTO");
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), "IMPORTE TOTAL");
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), "IMPORTE PAGADO");
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), "DEUDA TOTAL");
                        } else {
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), "IMPORTE TOTAL");
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), "IMPORTE PAGADO");
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), "DEUDA TOTAL");
                        }
                    }
                    $contador++;

                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle4, "A" . ($contador) . ":A" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle6, "B" . ($contador) . ":" . $ultimaLetra . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":" . $ultimaLetra . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $datareporte[$i]['nommoneda']);
                    if ($inicio == 5) {
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), number_format($datareporte[$i]['importedoc'] - $datareporte[$i]['montoprotesto'], 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), number_format($datareporte[$i]['montoprotesto'], 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), number_format($datareporte[$i]['importedoc'], 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), number_format($datareporte[$i]['importedoc'] - $datareporte[$i]['saldodoc'], 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), number_format($datareporte[$i]['saldodoc'], 2));
                    } else {
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), number_format($datareporte[$i]['importedoc'], 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), number_format($datareporte[$i]['importedoc'] - $datareporte[$i]['saldodoc'], 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), number_format($datareporte[$i]['saldodoc'], 2));
                    }
                    $arrayGeneral[$iniciogeneral]['titulo'][$datareporte[$i]['simbolo']] = strtoupper($arrayTipoCobro[$inicio]);
                    $arrayGeneral[$iniciogeneral]['total'][$datareporte[$i]['simbolo']] += $datareporte[$i]['importedoc'];
                    $arrayGeneral[$iniciogeneral]['saldo'][$datareporte[$i]['simbolo']] += $datareporte[$i]['saldodoc'];
                }
                $iniciogeneral++;
            }
            $inicio++;
        }
        if ($iniciogeneral >= 1) {
            $contador++;
            $contador++;
            $contador++;

            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyleNegro, "A" . ($contador) . ":A" . ($contador));
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':F' . $contador);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "RESUMEN GENERAL");

            $contador++;
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyletitulo, "D" . ($contador) . ":F" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), "IMPORTE PAGADO");
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), "DEUDA TOTAL");
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), "IMPORTE TOTAL");

            $contador++;
            for ($j = 1; $j <= $iniciogeneral; $j++) {
                $indice = 0;
                $tempTitulo = "";
                if (!empty($arrayGeneral[$j]['total']['S/'])) {
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "C" . ($contador) . ":C" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle6, "D" . ($contador) . ":F" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), 'Soles: ');
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), 'S/ ' . number_format($arrayGeneral[$j]['total']['S/'], 2));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), 'S/ ' . number_format($arrayGeneral[$j]['saldo']['S/'], 2));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), 'S/ ' . number_format($arrayGeneral[$j]['total']['S/'] - $arrayGeneral[$j]['saldo']['S/'], 2));
                    $tempTitulo = $arrayGeneral[$j]['titulo']['S/'];
                    $contador++;
                    $indice++;
                }
                if (!empty($arrayGeneral[$j]['total']['US $'])) {
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "C" . ($contador) . ":C" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle6, "D" . ($contador) . ":F" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador) . ':B' . ($contador));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), 'Dolares Americanos: ');
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), 'US $ ' . number_format($arrayGeneral[$j]['total']['US $'], 2));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), 'US $ ' . number_format($arrayGeneral[$j]['saldo']['US $'], 2));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), 'US $ ' . number_format($arrayGeneral[$j]['total']['US $'] - $arrayGeneral[$j]['saldo']['US $'], 2));
                    $tempTitulo = $arrayGeneral[$j]['titulo']['US $'];
                    $contador++;
                    $indice++;
                }
                if ($indice > 0) {
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador - $indice) . ':B' . ($contador - 1));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyletitulo, "A" . ($contador - $indice) . ":B" . ($contador - 1));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador - $indice) . ":B" . ($contador - 1))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador - $indice) . ":B" . ($contador - 1))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador - $indice), $tempTitulo);
                }
            }
        }

        $objPHPExcel->getActiveSheet()->setTitle('Resumen General de Cobranzas');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    function reporteDevolucionesContaResumidito() {
        set_time_limit(1000);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'devoluciones_resumidito_contabilidad.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $ano = $_REQUEST['lstAnio'];
        $idproducto = '';
        $idcliente = '';
        $idvendedor = '';
        $orden = 3;
        $reporte = new Reporte();
        $arrayMeses = array('', 'ENERO', 'FEBRERO', 'MARZO', 'ABRIL', 'MAYO', 'JUNIO', 'JULIO', 'AGOSTO', 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE');
        $listaDevoluciones = array();
        $tempmes = 0;
        foreach ($_REQUEST['chkmes'] as $v) {
            $listaDevoluciones[$tempmes] = $reporte->listaDevolucionesConta($ano . '-' . $v . '-01', $ano . '-' . $v . '-31 23:59:59', $idproducto, $idcliente, $idvendedor, $orden);
            $listaDevoluciones[$tempmes]['mes'] = $v*1;
            $tempmes++;
        }
        $tam = count($listaDevoluciones);
        $arrayTotalDevolucionesMes = array();
        $arrayMotivosRegistradosMes = array();
        $arrayTotaMesFacturado = array();
        $arrayTotaMesBoleteado = array();
        $arrayTotaMesGuiaMadre = array();
        $documento = new Documento();
       
        $lstVendedores = array();
        $lstVendedoresIds = array();
        $distinctVendedores = array();
        $tempVendedor = array();

        for ($i = 0; $i < $tam; $i++) {
            for ($j = 0; $j < count($listaDevoluciones[$i]); $j++) {
                if (!isset($lstVendedores[$listaDevoluciones[$i][$j]["idvendedor"]][$i][$listaDevoluciones[$i][$j]["idmotivodevolucion"]][$listaDevoluciones[$i][$j]['codigov']])) {
                    $lstVendedores[$listaDevoluciones[$i][$j]["idvendedor"]][$i][$listaDevoluciones[$i][$j]["idmotivodevolucion"]][$listaDevoluciones[$i][$j]['codigov']] = 1;
                    if (!isset($lstVendedores[$listaDevoluciones[$i][$j]["idvendedor"]][$i][$listaDevoluciones[$i][$j]["idmotivodevolucion"]]['codigov'])) {
                        $lstVendedores[$listaDevoluciones[$i][$j]["idvendedor"]][$i][$listaDevoluciones[$i][$j]["idmotivodevolucion"]]['codigov'] = $listaDevoluciones[$i][$j]['codigov'];
                    } else {
                        $lstVendedores[$listaDevoluciones[$i][$j]["idvendedor"]][$i][$listaDevoluciones[$i][$j]["idmotivodevolucion"]]['codigov'] .= ', ' . $listaDevoluciones[$i][$j]['codigov'];
                    }
                }
                if ($lstVendedores[$listaDevoluciones[$i][$j]["idvendedor"]][$i][$listaDevoluciones[$i][$j]["idmotivodevolucion"]][$listaDevoluciones[$i][$j]["simbolo"]]) {
                    $lstVendedores[$listaDevoluciones[$i][$j]["idvendedor"]][$i][$listaDevoluciones[$i][$j]["idmotivodevolucion"]]['S/ '] = 0;
                }
                
                if (!isset($lstVendedores[$listaDevoluciones[$i][$j]["idvendedor"]][$i][$listaDevoluciones[$i][$j]["idmotivodevolucion"]][$listaDevoluciones[$i][$j]['simbolo']])) {
                    $lstVendedores[$listaDevoluciones[$i][$j]["idvendedor"]][$i][$listaDevoluciones[$i][$j]["idmotivodevolucion"]][$listaDevoluciones[$i][$j]['simbolo']] = 0;
                    $lstVendedores[$listaDevoluciones[$i][$j]["idvendedor"]][$i][$listaDevoluciones[$i][$j]["idmotivodevolucion"]][$listaDevoluciones[$i][$j]['simbolo']] = 0;
                }
                
                if (!isset($lstVendedoresIds[$i][$listaDevoluciones[$i][$j]["idvendedor"]])) {
                    $lstVendedoresIds[$i][$listaDevoluciones[$i][$j]["idvendedor"]] = $listaDevoluciones[$i][$j]['nombrevendedor'];
                    if (!isset($tempVendedor[$i])) {
                        $tempVendedor[$i] = 0;
                    }
                    $distinctVendedores[$i][$tempVendedor[$i]] = $listaDevoluciones[$i][$j]["idvendedor"];       
                    
                    $tempVendedor[$i]++;
                }
                
                if (!isset($lstVendedores[$listaDevoluciones[$i][$j]["idvendedor"]][$i][$listaDevoluciones[$i][$j]["idmotivodevolucion"]][$listaDevoluciones[$i][$j]["simbolo"]])) {
                    $lstVendedores[$listaDevoluciones[$i][$j]["idvendedor"]][$i][$listaDevoluciones[$i][$j]["idmotivodevolucion"]][$listaDevoluciones[$i][$j]["simbolo"]] = 0;
                }
                $lstVendedores[$listaDevoluciones[$i][$j]["idvendedor"]][$i][$listaDevoluciones[$i][$j]["idmotivodevolucion"]][$listaDevoluciones[$i][$j]["simbolo"]] += $listaDevoluciones[$i][$j]["total"];
               
                $dataFactura = $documento->verificasidevoluciontienefactura($listaDevoluciones[$i][$j]["idordenventa"]);
                $dataBoleta = $documento->verificasidevoluciontieneboleta($listaDevoluciones[$i][$j]["idordenventa"], $listaDevoluciones[$i][$j]['iddevolucion']);
//                echo 'idordenventa: ' . $listaDevoluciones[$i][$j]["idordenventa"] . ' - iddevolucion: ' . $listaDevoluciones[$i][$j]['iddevolucion'] . ' :: ';
                if (count($dataFactura) >= 1) { //FACTURA
                    if (!isset($arrayTotaMesFacturado[$i][$dataFactura[0]["electronico"]][$listaDevoluciones[$i][$j]["simbolo"]])) {
                        $arrayTotaMesFacturado[$i][$dataFactura[0]["electronico"]][$listaDevoluciones[$i][$j]["simbolo"]] = 0;
                    }
                    $arrayTotaMesFacturado[$i][$dataFactura[0]["electronico"]][$listaDevoluciones[$i][$j]["simbolo"]] += $listaDevoluciones[$i][$j]["total"];
                }
                if (count($dataBoleta) >= 1) { //BOLETA
                    if (!isset($arrayTotaMesBoleteado[$i][$dataBoleta[0]["electronico"]][$listaDevoluciones[$i][$j]["simbolo"]])) {
                        $arrayTotaMesBoleteado[$i][$dataBoleta[0]["electronico"]][$listaDevoluciones[$i][$j]["simbolo"]] = 0;
                    }
                    $arrayTotaMesBoleteado[$i][$dataBoleta[0]["electronico"]][$listaDevoluciones[$i][$j]["simbolo"]] += $listaDevoluciones[$i][$j]["total"];
                    
                }
                if (count($dataFactura) == 0 && count($dataBoleta) == 0) { //GUIA MADRE
                    if (!isset($arrayTotaMesGuiaMadre[$i][$listaDevoluciones[$i][$j]["simbolo"]])) {
                        $arrayTotaMesGuiaMadre[$i][$listaDevoluciones[$i][$j]["simbolo"]] = 0;
                    }
                    $arrayTotaMesGuiaMadre[$i][$listaDevoluciones[$i][$j]["simbolo"]] += $listaDevoluciones[$i][$j]["total"];
                }
                
                if (!isset($arrayMotivosRegistradosMes[$listaDevoluciones[$i][$j]["idmotivodevolucion"]])) {
                    $arrayMotivosRegistradosMes[$listaDevoluciones[$i][$j]["idmotivodevolucion"]] = $listaDevoluciones[$i][$j]["idmotivodevolucion"];
                }
                //echo '[' . $j . '] ' . $listaDevoluciones[$i][$j]["simbolo"] . ': ' . $listaDevoluciones[$i][$j]["total"] . ' - ';
                //echo '[' . $listaDevoluciones[$i][$j]["idmotivodevolucion"] . '][' . $listaDevoluciones[$i][$j]["simbolo"] . ']: ' . $listaDevoluciones[$i][$j]["total"] . ' == ';
                if (!isset($arrayTotalDevolucionesMes[$i][$listaDevoluciones[$i][$j]["idmotivodevolucion"]][$listaDevoluciones[$i][$j]["simbolo"]])) {
                    $arrayTotalDevolucionesMes[$i][$listaDevoluciones[$i][$j]["idmotivodevolucion"]][$listaDevoluciones[$i][$j]["simbolo"]] = 0;
                }
                $arrayTotalDevolucionesMes[$i][$listaDevoluciones[$i][$j]["idmotivodevolucion"]][$listaDevoluciones[$i][$j]["simbolo"]] += $listaDevoluciones[$i][$j]["total"];
            }
//            echo '<hr>';
        }
        
        $archivoConfig = parse_ini_file("config.ini", true);
        $arrayMotivoDevolucion = $archivoConfig['MotivoDevolucion'];
        $tamMotivo = count($arrayMotivoDevolucion); 
        
        
        print_r($arrayTotalDevolucionesMes[0][0]);
        echo '<hr>';
        for ($i = 0; $i <= $tamMotivo; $i++) {
            if (isset($arrayMotivosRegistradosMes[$i])) {
                echo $arrayMotivosRegistradosMes[$i] . ': ' . $arrayMotivoDevolucion[$arrayMotivosRegistradosMes[$i]] . '<br>';
            }
        }
        
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );
        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );
        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
            ))
        );
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );
        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );
                
        $ultimaceldaA = $tempmes*2 + 2; 
        $ultimaceldaB = ((count($arrayMotivosRegistradosMes) - 1) * 5) + 3;
           
        $celdas  = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"; // 26 letras
        $punterocelda = 0; // de donde empieza
        $ultimacelda = 4; // hasta donde llega
        if ($ultimacelda < $ultimaceldaA) {
            $ultimacelda = $ultimaceldaA;
        }
        if ($ultimacelda < $ultimaceldaB) {
            $ultimacelda = $ultimaceldaB;
        }
        $prefijocelda = '';
        $punterosgte = 0;
        $textultimacelda = '';
        $arrayTodasLasCeldas = array();
        for ($conc = 0; $conc < $ultimacelda; $conc++) {
            if ($conc%26 == 0 && $conc > 0) {
                $punterocelda = 0;
                $prefijocelda = $celdas[$punterosgte];
                $punterosgte++;
            }
            $objPHPExcel->getActiveSheet()->getColumnDimension($prefijocelda . $celdas[$punterocelda])->setAutoSize(true);
            $arrayTodasLasCeldas[$conc] = $prefijocelda . $celdas[$punterocelda];
            echo $prefijocelda . $celdas[$punterocelda] . ' ';
            $textultimacelda = $prefijocelda . $celdas[$punterocelda];
            $punterocelda++;
        }
                
        $cont = 1;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':' . ($textultimacelda) . $cont);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont) . ":" . ($textultimacelda)  . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":" . ($textultimacelda) . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":" . ($textultimacelda) . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "REPORTE DE DEVOLUCIONES RESUMIDITO");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);

        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':' . ($textultimacelda) . $cont);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($cont) . ":" . ($textultimacelda) . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":" . ($textultimacelda) . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":" . ($textultimacelda) . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), 'DEVOLUCIONES DEL ' . $ano);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);
        
        $cont++;
        $cont++;
        if ($tempmes > 0) {
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':B' . ($cont + 1));
            $combi = 2;
            $auxmes = 0;
            while ($combi <= ($ultimaceldaA-2)) {
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells($arrayTodasLasCeldas[$combi] . $cont . ':' . $arrayTodasLasCeldas[$combi+1] . $cont);
                $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($arrayTodasLasCeldas[$combi] . $cont, $arrayMeses[$listaDevoluciones[$auxmes]['mes']])
                            ->setCellValue($arrayTodasLasCeldas[$combi] . ($cont + 1), 'SOLES')
                            ->setCellValue($arrayTodasLasCeldas[$combi+1] . ($cont + 1), 'DOLARES');
                $auxmes++;
                $combi = $combi+2;
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont + 1));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($cont+1) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont + 1));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont + 1))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont + 1))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($cont), "AÑO " . $ano);
            
            $cont++;
            $cont++;
            $tamMotivo = count($arrayMotivoDevolucion); 
            $arrayTotalPorMeses = array();
            for ($i = 0; $i <= $tamMotivo; $i++) {
                if (isset($arrayMotivosRegistradosMes[$i])) {
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':B' . $cont);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($cont) . ":B" . ($cont));
                    $objPHPExcel->setActiveSheetIndex(0)
                                ->setCellValue('A' . ($cont), (!empty($arrayMotivoDevolucion[$arrayMotivosRegistradosMes[$i]]) ? $arrayMotivoDevolucion[$arrayMotivosRegistradosMes[$i]] : 'Sin motivo'));
                    $combi = 2;
                    $auxmes = 0;
                    while ($combi <= ($ultimaceldaA-2)) {
                        $temporalMesSoles = (isset($arrayTotalDevolucionesMes[$auxmes][$arrayMotivosRegistradosMes[$i]]['S/']) ? $arrayTotalDevolucionesMes[$auxmes][$arrayMotivosRegistradosMes[$i]]['S/'] : 0.00);
                        $temporalMesDolares = (isset($arrayTotalDevolucionesMes[$auxmes][$arrayMotivosRegistradosMes[$i]]['US $']) ? $arrayTotalDevolucionesMes[$auxmes][$arrayMotivosRegistradosMes[$i]]['US $'] : 0.00);
                        if (!isset($arrayTotalPorMeses[$auxmes]['S/']) || !isset($arrayTotalPorMeses[$auxmes]['US $'])) {
                            $arrayTotalPorMeses[$auxmes]['S/'] = 0;
                            $arrayTotalPorMeses[$auxmes]['US $'] = 0;
                        }
                        $arrayTotalPorMeses[$auxmes]['S/'] += $temporalMesSoles;
                        $arrayTotalPorMeses[$auxmes]['US $'] += $temporalMesDolares;
                        $objPHPExcel->setActiveSheetIndex(0)
                                    ->setCellValue($arrayTodasLasCeldas[$combi] . ($cont), 'S/ ' . number_format($temporalMesSoles, 2))
                                    ->setCellValue($arrayTodasLasCeldas[$combi+1] . ($cont), 'US $ ' . number_format($temporalMesDolares, 2));
                        $auxmes++;
                        $combi = $combi+2;
                    }
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "C" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont));
                    $cont++;
                }
            }
            $auxmes = 0;
            $combi = 2;
            while ($combi <= ($ultimaceldaA-2)) {
                $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($arrayTodasLasCeldas[$combi] . ($cont), 'S/ ' . number_format($arrayTotalPorMeses[$auxmes]['S/'], 2))
                            ->setCellValue($arrayTodasLasCeldas[$combi+1] . ($cont), 'US $ ' . number_format($arrayTotalPorMeses[$auxmes]['US $'], 2));
                $auxmes++;
                $combi = $combi+2;
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont));
            $objPHPExcel->getActiveSheet()->getStyle("C" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont))->getFont()->setBold(true);
            
            $cont++;
            $cont++;
            $cont++;
            
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':B' . ($cont + 1));
            $combi = 2;
            $auxmes = 0;
            while ($combi <= ($ultimaceldaA-2)) {
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells($arrayTodasLasCeldas[$combi] . $cont . ':' . $arrayTodasLasCeldas[$combi+1] . $cont);
                $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($arrayTodasLasCeldas[$combi] . $cont, $arrayMeses[$listaDevoluciones[$auxmes]['mes']])
                            ->setCellValue($arrayTodasLasCeldas[$combi] . ($cont + 1), 'SOLES')
                            ->setCellValue($arrayTodasLasCeldas[$combi+1] . ($cont + 1), 'DOLARES');
                $auxmes++;
                $combi = $combi+2;
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont + 1));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($cont+1) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont + 1));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont + 1))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont + 1))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($cont), "AÑO " . $ano);
            $cont++;
            $cont++;

            $arrayTotalDocumentoPorMeses = array();
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':B' . $cont);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($cont) . ":B" . ($cont));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "C" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont));
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($cont), 'BOLETA FISICO');
            $combi = 2;
            $auxmes = 0;
            while ($combi <= ($ultimaceldaA-2)) {
                $temporalMesBoletaFisicaSoles = (isset($arrayTotaMesBoleteado[$auxmes][0]['S/']) ? $arrayTotaMesBoleteado[$auxmes][0]['S/'] : 0.00);
                $temporalMesBoletaFisicaDolares = (isset($arrayTotaMesBoleteado[$auxmes][0]['US $']) ? $arrayTotaMesBoleteado[$auxmes][0]['US $'] : 0.00);
                if (!isset($arrayTotalDocumentoPorMeses[$auxmes]['S/']) || !isset($arrayTotalDocumentoPorMeses[$auxmes]['US $'])) {
                    $arrayTotalDocumentoPorMeses[$auxmes]['S/'] = 0;
                    $arrayTotalDocumentoPorMeses[$auxmes]['US $'] = 0;
                }
                $arrayTotalDocumentoPorMeses[$auxmes]['S/'] += $temporalMesBoletaFisicaSoles;
                $arrayTotalDocumentoPorMeses[$auxmes]['US $'] += $temporalMesBoletaFisicaDolares;
                $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($arrayTodasLasCeldas[$combi] . ($cont), 'S/ ' . number_format($temporalMesBoletaFisicaSoles, 2))
                            ->setCellValue($arrayTodasLasCeldas[$combi+1] . ($cont), 'US $ ' . number_format($temporalMesBoletaFisicaDolares, 2));
                $auxmes++;
                $combi = $combi+2;
            }
            
            $cont++;
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':B' . $cont);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($cont) . ":B" . ($cont));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "C" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont));
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($cont), 'BOLETA ELECTRONICA');
            $combi = 2;
            $auxmes = 0;
            while ($combi <= ($ultimaceldaA-2)) {
                $temporalMesBoletaElectronicaSoles = (isset($arrayTotaMesBoleteado[$auxmes][1]['S/']) ? $arrayTotaMesBoleteado[$auxmes][1]['S/'] : 0.00);
                $temporalMesBoletaElectronicaDolares = (isset($arrayTotaMesBoleteado[$auxmes][1]['US $']) ? $arrayTotaMesBoleteado[$auxmes][1]['US $'] : 0.00);
                if (!isset($arrayTotalDocumentoPorMeses[$auxmes]['S/']) || !isset($arrayTotalDocumentoPorMeses[$auxmes]['US $'])) {
                    $arrayTotalDocumentoPorMeses[$auxmes]['S/'] = 0;
                    $arrayTotalDocumentoPorMeses[$auxmes]['US $'] = 0;
                }
                $arrayTotalDocumentoPorMeses[$auxmes]['S/'] += $temporalMesBoletaElectronicaSoles;
                $arrayTotalDocumentoPorMeses[$auxmes]['US $'] += $temporalMesBoletaElectronicaDolares;
                $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($arrayTodasLasCeldas[$combi] . ($cont), 'S/ ' . number_format($temporalMesBoletaElectronicaSoles, 2))
                            ->setCellValue($arrayTodasLasCeldas[$combi+1] . ($cont), 'US $ ' . number_format($temporalMesBoletaElectronicaDolares, 2));
                $auxmes++;
                $combi = $combi+2;
            }
            
            $cont++;
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':B' . $cont);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($cont) . ":B" . ($cont));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "C" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont));
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($cont), 'FACTURA FISICA');
            $combi = 2;
            $auxmes = 0;
            while ($combi <= ($ultimaceldaA-2)) {
                $temporalMesFacturaFisicaSoles = (isset($arrayTotaMesFacturado[$auxmes][0]['S/']) ? $arrayTotaMesFacturado[$auxmes][0]['S/'] : 0.00);
                $temporalMesFacturaFisicaDolares = (isset($arrayTotaMesFacturado[$auxmes][0]['US $']) ? $arrayTotaMesFacturado[$auxmes][0]['US $'] : 0.00);
                if (!isset($arrayTotalDocumentoPorMeses[$auxmes]['S/']) || !isset($arrayTotalDocumentoPorMeses[$auxmes]['US $'])) {
                    $arrayTotalDocumentoPorMeses[$auxmes]['S/'] = 0;
                    $arrayTotalDocumentoPorMeses[$auxmes]['US $'] = 0;
                }
                $arrayTotalDocumentoPorMeses[$auxmes]['S/'] += $temporalMesFacturaFisicaSoles;
                $arrayTotalDocumentoPorMeses[$auxmes]['US $'] += $temporalMesFacturaFisicaDolares;
                $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($arrayTodasLasCeldas[$combi] . ($cont), 'S/ ' . number_format($temporalMesFacturaFisicaSoles, 2))
                            ->setCellValue($arrayTodasLasCeldas[$combi+1] . ($cont), 'US $ ' . number_format($temporalMesFacturaFisicaDolares, 2));
                $auxmes++;
                $combi = $combi+2;
            }
            
            $cont++;
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':B' . $cont);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($cont) . ":B" . ($cont));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "C" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont));
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($cont), 'FACTURA ELECTRONICA');
            $combi = 2;
            $auxmes = 0;
            while ($combi <= ($ultimaceldaA-2)) {
                $temporalMesFacturaElectronicaSoles = (isset($arrayTotaMesFacturado[$auxmes][1]['S/']) ? $arrayTotaMesFacturado[$auxmes][1]['S/'] : 0.00);
                $temporalMesFacturaElectronicaDolares = (isset($arrayTotaMesFacturado[$auxmes][1]['US $']) ? $arrayTotaMesFacturado[$auxmes][1]['US $'] : 0.00);
                if (!isset($arrayTotalDocumentoPorMeses[$auxmes]['S/']) || !isset($arrayTotalDocumentoPorMeses[$auxmes]['US $'])) {
                    $arrayTotalDocumentoPorMeses[$auxmes]['S/'] = 0;
                    $arrayTotalDocumentoPorMeses[$auxmes]['US $'] = 0;
                }
                $arrayTotalDocumentoPorMeses[$auxmes]['S/'] += $temporalMesFacturaElectronicaSoles;
                $arrayTotalDocumentoPorMeses[$auxmes]['US $'] += $temporalMesFacturaElectronicaDolares;
                $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($arrayTodasLasCeldas[$combi] . ($cont), 'S/ ' . number_format($temporalMesFacturaElectronicaSoles, 2))
                            ->setCellValue($arrayTodasLasCeldas[$combi+1] . ($cont), 'US $ ' . number_format($temporalMesFacturaElectronicaDolares, 2));
                $auxmes++;
                $combi = $combi+2;
            }
            
            $cont++;
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':B' . $cont);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($cont) . ":B" . ($cont));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "C" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont));
            $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($cont), 'GUIA MADRE');
            $combi = 2;
            $auxmes = 0;
            while ($combi <= ($ultimaceldaA-2)) {
                $temporalMesGuiaMadreSoles = (isset($arrayTotaMesGuiaMadre[$auxmes]['S/']) ? $arrayTotaMesGuiaMadre[$auxmes]['S/'] : 0.00);
                $temporalMesGuiaMadreDolares = (isset($arrayTotaMesGuiaMadre[$auxmes]['US $']) ? $arrayTotaMesGuiaMadre[$auxmes]['US $'] : 0.00);
                if (!isset($arrayTotalDocumentoPorMeses[$auxmes]['S/']) || !isset($arrayTotalDocumentoPorMeses[$auxmes]['US $'])) {
                    $arrayTotalDocumentoPorMeses[$auxmes]['S/'] = 0;
                    $arrayTotalDocumentoPorMeses[$auxmes]['US $'] = 0;
                }
                $arrayTotalDocumentoPorMeses[$auxmes]['S/'] += $temporalMesGuiaMadreSoles;
                $arrayTotalDocumentoPorMeses[$auxmes]['US $'] += $temporalMesGuiaMadreDolares;
                $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($arrayTodasLasCeldas[$combi] . ($cont), 'S/ ' . number_format($temporalMesGuiaMadreSoles, 2))
                            ->setCellValue($arrayTodasLasCeldas[$combi+1] . ($cont), 'US $ ' . number_format($temporalMesGuiaMadreDolares, 2));
                $auxmes++;
                $combi = $combi+2;
            }
            
            $cont++;
            $auxmes = 0;
            $combi = 2;
            while ($combi <= ($ultimaceldaA-2)) {
                $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue($arrayTodasLasCeldas[$combi] . ($cont), 'S/ ' . number_format($arrayTotalDocumentoPorMeses[$auxmes]['S/'], 2))
                            ->setCellValue($arrayTodasLasCeldas[$combi+1] . ($cont), 'US $ ' . number_format($arrayTotalDocumentoPorMeses[$auxmes]['US $'], 2));
                $auxmes++;
                $combi = $combi+2;
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont));
            $objPHPExcel->getActiveSheet()->getStyle("C" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont))->getFont()->setBold(true);
            
            $cont++;
            $cont++;
            $auxmes = 0;
     
            while ($auxmes < $tempmes) {
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $cont . ':A' . ($cont + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $cont . ':C' . ($cont + 1));
                $combi = 3;
                $im = 0;
                while ($combi <= ($ultimaceldaB-2)) {
                    if (isset($arrayMotivosRegistradosMes[$im])) {
                        $objPHPExcel->setActiveSheetIndex(0)->mergeCells($arrayTodasLasCeldas[$combi+3] . ($cont + 1) . ':' . $arrayTodasLasCeldas[$combi+4] . ($cont + 1));
                        $objPHPExcel->setActiveSheetIndex(0)->mergeCells($arrayTodasLasCeldas[$combi] . $cont . ':' . $arrayTodasLasCeldas[$combi+4] . $cont);
                        $objPHPExcel->setActiveSheetIndex(0)
                                    ->setCellValue($arrayTodasLasCeldas[$combi] . $cont, (!empty($arrayMotivoDevolucion[$arrayMotivosRegistradosMes[$im]]) ? $arrayMotivoDevolucion[$arrayMotivosRegistradosMes[$im]] : 'Sin motivo'))
                                    ->setCellValue($arrayTodasLasCeldas[$combi] . ($cont + 1), 'CANTIDAD')
                                    ->setCellValue($arrayTodasLasCeldas[$combi+1] . ($cont + 1), 'SOLES')
                                    ->setCellValue($arrayTodasLasCeldas[$combi+2] . ($cont + 1), 'DOLARES')
                                    ->setCellValue($arrayTodasLasCeldas[$combi+3] . ($cont + 1), 'ORDENES');
                        $combi = $combi+5;
                    }
                    $im++;
                }
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont + 1));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($cont+1) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont + 1));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont + 1))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont + 1))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($cont), $arrayMeses[$listaDevoluciones[$auxmes]['mes']])
                            ->setCellValue('B' . ($cont), "VENDEDOR");
                $cont++;
                $cont++;
                for ($r = 0; $r < $tempVendedor[$auxmes]-1; $r++) {
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells("B" . ($cont) . ":C" . ($cont));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($cont) . ":C" . ($cont));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "D" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . $cont);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":" . ($arrayTodasLasCeldas[$combi-1]) . ($cont))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                                ->setCellValue('A' . ($cont), ($r + 1))
                                ->setCellValue('B' . ($cont), $lstVendedoresIds[$auxmes][$distinctVendedores[$auxmes][$r]]);
                    
                    $combi = 3;
                    $im = 0;
                    while ($combi <= ($ultimaceldaB-2)) {
                        if (isset($arrayMotivosRegistradosMes[$im])) {
                            $tempOrdenes = '-';
                            $tempNumOV = '-';
                            if (!empty($lstVendedores[$distinctVendedores[$auxmes][$r]][$auxmes][$im]['codigov'])) {
                                $tempOrdenes = $lstVendedores[$distinctVendedores[$auxmes][$r]][$auxmes][$im]['codigov'];
                                $tempNumOV = count(explode(', ', $tempOrdenes));
                            }
                            $temporalVendedorMesMotivoSoles = (isset($lstVendedores[$distinctVendedores[$auxmes][$r]][$auxmes][$im]['S/']) ? $lstVendedores[$distinctVendedores[$auxmes][$r]][$auxmes][$im]['S/'] : 0.00);
                            $temporalVendedorMesMotivoDolares = (isset($lstVendedores[$distinctVendedores[$auxmes][$r]][$auxmes][$im]['US $']) ? $lstVendedores[$distinctVendedores[$auxmes][$r]][$auxmes][$im]['US $'] : 0.00);
                                                        
                            $objPHPExcel->setActiveSheetIndex(0)->mergeCells($arrayTodasLasCeldas[$combi+3] . ($cont) . ':' . $arrayTodasLasCeldas[$combi+4] . ($cont));
                            $objPHPExcel->setActiveSheetIndex(0)
                                        ->setCellValue($arrayTodasLasCeldas[$combi] . ($cont), $tempNumOV)
                                        ->setCellValue($arrayTodasLasCeldas[$combi+1] . ($cont), 'S/ ' . number_format($temporalVendedorMesMotivoSoles, 2))
                                        ->setCellValue($arrayTodasLasCeldas[$combi+2] . ($cont), 'US $ ' . number_format($temporalVendedorMesMotivoDolares, 2))
                                        ->setCellValue($arrayTodasLasCeldas[$combi+3] . ($cont), $tempOrdenes);
                            $combi = $combi+5;
                        }
                        $im++;
                    }
                    $cont++;
                }
                $cont++;
                $auxmes++;
            }
            
        }
        
        $objPHPExcel->getActiveSheet()->setTitle('Devoluciones Resumidito');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);
        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    function generarinventariovalorizado() {
        set_time_limit(1500);
        if (!empty($_REQUEST['txtidsaldoinicial'])) {
            $idsaldoinicial = explode(":", $_REQUEST['txtidsaldoinicial']);
            $idproducto = $_REQUEST['txtidproducto'];
            $idsaldoinicial = $idsaldoinicial[0];
            $txtmesfinal = $_REQUEST['txtmesfinal'];
            $saldoinicialmodel = new saldosIniciales();
            $dataSaldoInicial = $saldoinicialmodel->verSaldonicial($idsaldoinicial);
            if (count($dataSaldoInicial) == 1 && $dataSaldoInicial[0]['idproducto'] == $idproducto) {
                $baseURL = ROOT . 'descargas' . DS;
                $idActor = $_SESSION['idactor'];
                $fechaCreacion = date('Y-m-d_h.m.s');
                $basenombre = 'inventariopermanente_producto_' . $idproducto . '.xls';
                $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

                $this->AutoLoadLib('PHPExcel');
                $objPHPExcel = new PHPExcel();
                $sharedStyle6 = new PHPExcel_Style();
                $sharedStyle6->applyFromArray(array(
                    'fill' => array(
                        'type' => PHPExcel_Style_Fill::FILL_SOLID,
                        'color' => array('argb' => 'FFBBCCCC')
                    ), 'borders' => array(
                        'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                    ), 'alignment' => array(
                        'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                        'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                    )
                ));

                $sharedStyle5 = new PHPExcel_Style();
                $sharedStyle5->applyFromArray(array(
                    'fill' => array(
                        'type' => PHPExcel_Style_Fill::FILL_SOLID,
                        'color' => array('argb' => 'FFAECECC')
                    ), 'borders' => array(
                        'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                    )
                ));

                $sharedStyle4 = new PHPExcel_Style();
                $sharedStyle4->applyFromArray(array(
                    'fill' => array(
                        'type' => PHPExcel_Style_Fill::FILL_SOLID
                    ), 'borders' => array(
                        'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'left' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'right' => array('style' => PHPExcel_Style_Border::BORDER_THIN)
                    ), 'alignment' => array(
                        'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
                        'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                    )
                ));

                $sharedStyle3 = new PHPExcel_Style();
                $sharedStyle3->applyFromArray(array(
                    'fill' => array(
                        'type' => PHPExcel_Style_Fill::FILL_SOLID
                    ), 'borders' => array(
                        'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'left' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'right' => array('style' => PHPExcel_Style_Border::BORDER_THIN)
                    ), 'alignment' => array(
                        'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                        'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                    )
                ));

                $sharedStyle2 = new PHPExcel_Style();
                $sharedStyle2->applyFromArray(array(
                    'fill' => array(
                        'type' => PHPExcel_Style_Fill::FILL_SOLID,
                        'color' => array('argb' => 'FFEEEEEE')
                    ), 'borders' => array(
                        'top' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                        'bottom' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                        'left' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                        'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                    ), 'alignment' => array(
                        'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                        'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                    )
                ));

                $sharedStyle1 = new PHPExcel_Style();
                $sharedStyle1->applyFromArray(array(
                    'fill' => array(
                        'type' => PHPExcel_Style_Fill::FILL_SOLID
                    ), 'borders' => array(
                        'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'left' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'right' => array('style' => PHPExcel_Style_Border::BORDER_THIN)
                    ), 'alignment' => array(
                        'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_LEFT,
                        'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                    )
                ));

                $sharedStyle0 = new PHPExcel_Style();
                $sharedStyle0->applyFromArray(array(
                    'fill' => array(
                        'type' => PHPExcel_Style_Fill::FILL_SOLID
                    ), 'borders' => array(
                        'top' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                        'bottom' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                        'left' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                        'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                    ), 'alignment' => array(
                        'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                        'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                    )
                ));

                $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
                $contador = 1;

                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':N' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":N" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":N" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":N" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Formato 13.1.: Registro de Inventario Permanente Valorizado");
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
                $contador++;

                $mes = $this->meses();
                $tempFechaPeriodo = explode("-", $dataSaldoInicial[0]['fechasaldo']);
                $mesFinal = $tempFechaPeriodo[0] . "-" . str_pad($txtmesfinal, 2, "0", STR_PAD_LEFT) . "-" . date("d", (mktime(0, 0, 0, $txtmesfinal + 1, 1, $tempFechaPeriodo[0]) - 1));
                $tempFechaPeriodo = $mes[$tempFechaPeriodo[1] * 1] . " A " . $mes[$txtmesfinal] . " DEL " . $tempFechaPeriodo[0];

                $contador++;
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':D' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':K' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador + 1) . ':D' . ($contador + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . ($contador + 1) . ':K' . ($contador + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador + 2) . ':D' . ($contador + 2));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . ($contador + 2) . ':K' . ($contador + 2));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador + 3) . ':D' . ($contador + 3));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . ($contador + 3) . ':K' . ($contador + 3));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador + 4) . ':D' . ($contador + 4));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . ($contador + 4) . ':K' . ($contador + 4));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador + 5) . ':D' . ($contador + 5));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . ($contador + 5) . ':K' . ($contador + 5));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador + 6) . ':D' . ($contador + 6));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . ($contador + 6) . ':K' . ($contador + 6));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador + 7) . ':D' . ($contador + 7));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . ($contador + 7) . ':K' . ($contador + 7));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador + 8) . ':D' . ($contador + 8));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . ($contador + 8) . ':K' . ($contador + 8));

                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":K" . ($contador + 8));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":N" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "PERIODO:")
                        ->setCellValue('E' . ($contador), strtoupper($tempFechaPeriodo))
                        ->setCellValue('A' . ($contador + 1), "RAZON SOCIAL:")
                        ->setCellValue('E' . ($contador + 1), "CORPORACION POWER ACOUSTIK S.A.C.")
                        ->setCellValue('A' . ($contador + 2), "RUC:")
                        ->setCellValue('E' . ($contador + 2), "20509811858")
                        ->setCellValue('A' . ($contador + 3), "ESTABLECIMIENTO:")
                        ->setCellValue('E' . ($contador + 3), "Almacén General")
                        ->setCellValue('A' . ($contador + 4), "CODIGO DE LA EXISTENCIA:")
                        ->setCellValue('E' . ($contador + 4), $dataSaldoInicial[0]['codigopa'])
                        ->setCellValue('A' . ($contador + 5), "TIPO:")
                        ->setCellValue('E' . ($contador + 5), "Mercaderías")
                        ->setCellValue('A' . ($contador + 6), "DESCRIPCION:")
                        ->setCellValue('E' . ($contador + 6), $dataSaldoInicial[0]['nompro'])
                        ->setCellValue('A' . ($contador + 7), "UNIDAD DE MEDIDA:")
                        ->setCellValue('E' . ($contador + 7), "UNIDADES")
                        ->setCellValue('A' . ($contador + 8), "METODO DE EVALUACION:")
                        ->setCellValue('E' . ($contador + 8), "Promedio Móvil");

                $contador = $contador + 10;
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':A' . ($contador + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':B' . ($contador + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':C' . ($contador + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('D' . $contador . ':D' . ($contador + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':E' . ($contador + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':H' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('I' . $contador . ':K' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('L' . $contador . ':N' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":N" . ($contador + 1));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":N" . ($contador + 1))->getFill()->setRotation(1);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":N" . ($contador + 1))->getFont()->setBold(true);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "FECHA")
                        ->setCellValue('B' . ($contador), "TIPO DOC.")
                        ->setCellValue('C' . ($contador), "SERIE")
                        ->setCellValue('D' . ($contador), "NUMERO")
                        ->setCellValue('E' . ($contador), "TIPO \n MOV.")
                        ->setCellValue('F' . ($contador), "ENTRADAS")
                        ->setCellValue('I' . ($contador), "SALIDAS")
                        ->setCellValue('L' . ($contador), "SALDO FINAL")
                        ->setCellValue('F' . ($contador + 1), "Cant.")
                        ->setCellValue('G' . ($contador + 1), "Cost. Unit S/.")
                        ->setCellValue('H' . ($contador + 1), "Costo total S/.")
                        ->setCellValue('I' . ($contador + 1), "Cant.")
                        ->setCellValue('J' . ($contador + 1), "Cost. Unit S/.")
                        ->setCellValue('K' . ($contador + 1), "Costo total S/.")
                        ->setCellValue('L' . ($contador + 1), "Cant.")
                        ->setCellValue('M' . ($contador + 1), "Cost. Unit S/.")
                        ->setCellValue('N' . ($contador + 1), "Costo total S/.");

                $inventariomodel = new inventario();
                $dataInventario = $inventariomodel->listaKardexValorizado($idproducto, $dataSaldoInicial[0]['fechasaldo'], $mesFinal);

                $contador++;
                $contador++;
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":D" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "E" . ($contador) . ":E" . ($contador + 1));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle4, "F" . ($contador) . ":N" . ($contador + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':D' . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":N" . ($contador + 1))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), str_replace('-', '.', $dataSaldoInicial[0]['fechasaldo']))
                        ->setCellValue('B' . ($contador), "SALDO INICIAL")
                        ->setCellValue('E' . ($contador), "16")
                        ->setCellValue('F' . ($contador), $dataSaldoInicial[0]['cantidad1'])
                        ->setCellValue('G' . ($contador), number_format($dataSaldoInicial[0]['costounitario'], 2))
                        ->setCellValue('H' . ($contador), number_format(($dataSaldoInicial[0]['cantidad1'] * $dataSaldoInicial[0]['costounitario']), 2))
                        ->setCellValue('L' . ($contador), $dataSaldoInicial[0]['cantidad1'])
                        ->setCellValue('M' . ($contador), number_format($dataSaldoInicial[0]['costounitario'], 2))
                        ->setCellValue('N' . ($contador), number_format($dataSaldoInicial[0]['cantidad1'] * $dataSaldoInicial[0]['costounitario'], 2));
                $stockActual = $dataSaldoInicial[0]['cantidad1'];
                $precioglobal = number_format($dataSaldoInicial[0]['costounitario'], 2, '.', '');
                $cantidadEntradas = $dataSaldoInicial[0]['cantidad1'];
                $totalEntrada = number_format(($stockActual * $precioglobal), 2, '.', '');
                $costototalanterior = $totalEntrada;
                $cantidadSalida = 0;
                $totalSalida = 0;
                $tamanio = count($dataInventario);
                $arrayListTipocambio = array();
                $tipocambiomodel = new TipoCambio();
                for ($i = 0; $i < $tamanio; $i++) {
                    $contador++;
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($contador) . ":E" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle4, "F" . ($contador) . ":N" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":N" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), str_replace('-', '.', $dataInventario[$i]['fecha']))
                            ->setCellValue('B' . ($contador), " 0" . $dataInventario[$i]['operacion']);
                    if ($dataInventario[$i]['tipomovimiento'] * 1 == 2) {
                        $objPHPExcel->setActiveSheetIndex(0)
                                ->setCellValue('C' . ($contador), " " . $dataInventario[$i]['serie'])
                                ->setCellValue('D' . ($contador), " " . $dataInventario[$i]['numdoc']);
                    } else {
                        if ($dataInventario[$i]['electronico'] == 0) {
                            $ncomprobante = $dataInventario[$i]['numdoc'];
                            $tempComprobantes = $inventariomodel->arrayComprobantesCorrectos($ncomprobante);
                            $listaDetalleOrdenVenta = $inventariomodel->listaDetalleOrdenVenta($dataInventario[$i]["idordenventa"]);
                            $hasta = count($listaDetalleOrdenVenta);
                            for ($j = 0; $j < $hasta; $j++) {
                                if ($dataInventario[$i]["idproducto"] == $listaDetalleOrdenVenta[$j]['idproducto']) {
                                    if (isset($tempComprobantes[intval(($j) / 35)]["numdoc"])) {
                                        $numdoc = $tempComprobantes[intval(($j) / 35)]["numdoc"];
                                    } else {
                                        $numdoc = $tempComprobantes[intval(($j) / 35) - 1]["numdoc"];
                                    }
                                    $j = $hasta;
                                }
                            }
                            $objPHPExcel->setActiveSheetIndex(0)
                                    ->setCellValue('C' . ($contador), " " . str_pad($dataInventario[$i]['serie'], 3, "0", STR_PAD_LEFT))
                                    ->setCellValue('D' . ($contador), " " . $numdoc);
                        } else {
                            $listaComprobantesElectronicas = $inventariomodel->listaComprobantesElectronicas($dataInventario[$i]["idordenventa"]);
                            $listaDetalleOrdenVenta = $inventariomodel->listaDetalleOrdenVenta($dataInventario[$i]["idordenventa"]);
                            $hasta = count($listaDetalleOrdenVenta);
                            for ($j = 0; $j < $hasta; $j++) {
                                if ($dataInventario[$i]["idproducto"] == $listaDetalleOrdenVenta[$j]['idproducto']) {
                                    foreach ($listaComprobantesElectronicas as $valor) {
                                        if (($j + 1) >= $valor['desde'] and ( $j + 1) <= $valor['hasta']) {
                                            $numdoc = $valor['numdoc'];
                                        }
                                    }
                                    $j = $hasta;
                                }
                            }
                            $objPHPExcel->setActiveSheetIndex(0)
                                    ->setCellValue('C' . ($contador), " " . ($dataInventario[$i]['nombredoc'] == 2 ? 'B' : 'F') . str_pad($dataInventario[$i]['serie'], 3, "0", STR_PAD_LEFT))
                                    ->setCellValue('D' . ($contador), " " . str_pad($numdoc, 8, "0", STR_PAD_LEFT));
                        }
                    }
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('E' . ($contador), " " . $dataInventario[$i]['tipomovimiento']);
                    if ($dataInventario[$i]['tipomovimiento'] * 1 == 1) {
                        $stockActual -= $dataInventario[$i]['cantidad'];
                        $cantidadSalida += $dataInventario[$i]['cantidad'];
                        $totalSalida += number_format(($dataInventario[$i]['cantidad'] * $precioglobal), 2, '.', '');
                        $objPHPExcel->setActiveSheetIndex(0)
                                ->setCellValue('I' . ($contador), $dataInventario[$i]['cantidad'])
                                ->setCellValue('J' . ($contador), number_format($precioglobal, 2))
                                ->setCellValue('K' . ($contador), number_format(($dataInventario[$i]['cantidad'] * $precioglobal), 2));
                    } else {
                        $tipocambiodelmes = 1;
                        if ($dataInventario[$i]['idmoneda'] == 2) {
                            $tempFechaIni = explode("-", $dataInventario[$i]['fecha']);
                            if (!isset($arrayListTipocambio[$tempFechaIni[0] . "-" . $tempFechaIni[1]])) {
                                $tempFechaFin = $tempFechaIni[0] . "-" . $tempFechaIni[1] . "-" . date("d", (mktime(0, 0, 0, $tempFechaIni[1] + 1, 1, $tempFechaIni[0]) - 1));
                                $tempFechaIni = $tempFechaIni[0] . "-" . $tempFechaIni[1] . "-01";
                                $tipocambiodelmes = $tipocambiomodel->ultimotipodecambiodelmes($tempFechaIni, $tempFechaFin);
                                $arrayListTipocambio[$tempFechaIni[0] . "-" . $tempFechaIni[1]] = $tipocambiodelmes;
                            } else {
                                $tipocambiodelmes = $arrayListTipocambio[$tempFechaIni[0] . "-" . $tempFechaIni[1]];
                            }
                        }
                        $dataInventario[$i]['costounitario'] = number_format(($dataInventario[$i]['costounitario'] * $tipocambiodelmes), 2, '.', '');
                        $costototalactual = number_format(($dataInventario[$i]['costounitario'] * $dataInventario[$i]['cantidad']), 2, '.', '');
                        $stockActual += $dataInventario[$i]['cantidad'];
                        $cantidadEntradas += $dataInventario[$i]['cantidad'];
                        $costototalanterior += $costototalactual;
                        $precioglobal = $costototalanterior / $stockActual;
                        $objPHPExcel->setActiveSheetIndex(0)
                                ->setCellValue('F' . ($contador), $dataInventario[$i]['cantidad'])
                                ->setCellValue('G' . ($contador), number_format(($dataInventario[$i]['costounitario']), 2))
                                ->setCellValue('H' . ($contador), number_format($costototalactual, 2));
                        $totalEntrada += number_format($costototalactual, 2, '.', '');
                    }
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('L' . ($contador), $stockActual)
                            ->setCellValue('M' . ($contador), number_format($precioglobal, 2))
                            ->setCellValue('N' . ($contador), number_format(($stockActual * $precioglobal), 2));
                    $costototalanterior = number_format(($stockActual * $precioglobal), 2, '.', '');
                }
                $contador++;
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "E" . ($contador) . ":E" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle4, "F" . ($contador) . ":K" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('E' . ($contador), "TOTALES")
                        ->setCellValue('F' . ($contador), $cantidadEntradas)
                        ->setCellValue('H' . ($contador), number_format($totalEntrada, 2))
                        ->setCellValue('I' . ($contador), $cantidadSalida)
                        ->setCellValue('K' . ($contador), number_format($totalSalida, 2));

                $nuevafecha = strtotime('+1 day', strtotime($mesFinal));
                $nuevafecha = date('Y-m-d', $nuevafecha);
                $saldosIniciales = $this->AutoLoadModel('saldosIniciales');
                $evaluarDuplicidad = $saldosIniciales->evaluarDuplicididad($idproducto, $nuevafecha);
                if (count($evaluarDuplicidad) == 0) {
                    $grabosaldoinicial = $saldosIniciales->insertarSaldoInicial($idproducto, $stockActual, $precioglobal, '', 1, 2, $nuevafecha, $_SESSION['idactor'], date("Y-m-d H:i:s"));
                    $dataRespuesta['rspta'] = 1;
                }
                $objPHPExcel->getActiveSheet()->setTitle('Inv. Permanente Val.');
                $objPHPExcel->setActiveSheetIndex(0);
                $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
                $objWriter->save($filename);
                header('Content-Description: File Transfer');
                header('Content-type: application/force-download');
                header('Content-Disposition: attachment; filename=' . basename($filename));
                header('Content-Transfer-Encoding: binary');
                header("Content-type: application/octet-stream");
                header('Expires: 0');
                header('Cache-Control: must-revalidate');
                header('Pragma: public');
                header('Content-Length: ' . filesize($filename));
                ob_clean();
                flush();
                readfile($filename);
                unlink($filename);
            } else {
                $dataRespuesta['rspta'] = "Los Parametros Ingresados No Son Correctos.";
                echo json_encode($dataRespuesta);
            }
        } else {
            $dataRespuesta['rspta'] = "Saldo No Seleccionado.";
            echo json_encode($dataRespuesta);
        }
    }

    function simulacroinventariovalorizado() {
        set_time_limit(1500);
        if (!empty($_REQUEST['txtidsaldoinicial'])) {
            $idsaldoinicial = explode(":", $_REQUEST['txtidsaldoinicial']);
            $idproducto = $_REQUEST['txtidproducto'];
            $idsaldoinicial = $idsaldoinicial[0];
            $txtmesfinal = $_REQUEST['txtmesfinal'];
            $saldoinicialmodel = new saldosIniciales();
            echo $idsaldoinicial . '<hr>';
            $dataSaldoInicial = $saldoinicialmodel->verSaldonicialgeneral($idsaldoinicial);
            if (count($dataSaldoInicial) == 1 && $dataSaldoInicial[0]['idproducto'] == $idproducto) {
                $baseURL = ROOT . 'descargas' . DS;
                $idActor = $_SESSION['idactor'];
                $fechaCreacion = date('Y-m-d_h.m.s');
                $basenombre = 'simulacroinventariopermanente_producto_' . $idproducto . '.xls';
                $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

                $this->AutoLoadLib('PHPExcel');
                $objPHPExcel = new PHPExcel();
                $sharedStyle6 = new PHPExcel_Style();
                $sharedStyle6->applyFromArray(array(
                    'fill' => array(
                        'type' => PHPExcel_Style_Fill::FILL_SOLID,
                        'color' => array('argb' => 'FFBBCCCC')
                    ), 'borders' => array(
                        'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                    ), 'alignment' => array(
                        'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                        'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                    )
                ));

                $sharedStyle5 = new PHPExcel_Style();
                $sharedStyle5->applyFromArray(array(
                    'fill' => array(
                        'type' => PHPExcel_Style_Fill::FILL_SOLID,
                        'color' => array('argb' => 'FFAECECC')
                    ), 'borders' => array(
                        'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                    )
                ));

                $sharedStyle4 = new PHPExcel_Style();
                $sharedStyle4->applyFromArray(array(
                    'fill' => array(
                        'type' => PHPExcel_Style_Fill::FILL_SOLID
                    ), 'borders' => array(
                        'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'left' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'right' => array('style' => PHPExcel_Style_Border::BORDER_THIN)
                    ), 'alignment' => array(
                        'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
                        'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                    )
                ));

                $sharedStyle3 = new PHPExcel_Style();
                $sharedStyle3->applyFromArray(array(
                    'fill' => array(
                        'type' => PHPExcel_Style_Fill::FILL_SOLID
                    ), 'borders' => array(
                        'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'left' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'right' => array('style' => PHPExcel_Style_Border::BORDER_THIN)
                    ), 'alignment' => array(
                        'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                        'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                    )
                ));

                $sharedStyle2 = new PHPExcel_Style();
                $sharedStyle2->applyFromArray(array(
                    'fill' => array(
                        'type' => PHPExcel_Style_Fill::FILL_SOLID,
                        'color' => array('argb' => 'FFEEEEEE')
                    ), 'borders' => array(
                        'top' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                        'bottom' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                        'left' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                        'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                    ), 'alignment' => array(
                        'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                        'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                    )
                ));

                $sharedStyle1 = new PHPExcel_Style();
                $sharedStyle1->applyFromArray(array(
                    'fill' => array(
                        'type' => PHPExcel_Style_Fill::FILL_SOLID
                    ), 'borders' => array(
                        'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'left' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'right' => array('style' => PHPExcel_Style_Border::BORDER_THIN)
                    ), 'alignment' => array(
                        'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_LEFT,
                        'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                    )
                ));

                $sharedStyle0 = new PHPExcel_Style();
                $sharedStyle0->applyFromArray(array(
                    'fill' => array(
                        'type' => PHPExcel_Style_Fill::FILL_SOLID
                    ), 'borders' => array(
                        'top' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                        'bottom' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                        'left' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM),
                        'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                    ), 'alignment' => array(
                        'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                        'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                    )
                ));

                $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
                $contador = 1;

                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':N' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":N" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":N" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":N" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        //->setCellValue('A' . ($contador), "Formato 13.1.: Registro de Inventario Permanente Valorizado");
                        ->setCellValue('A' . ($contador), "SIMULACRO: Registro de Inventario Permanente Valorizado");
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
                $contador++;

                $mes = $this->meses();
                $tempFechaPeriodo = explode("-", $dataSaldoInicial[0]['fechasaldo']);
                $mesFinal = $tempFechaPeriodo[0] . "-" . str_pad($txtmesfinal, 2, "0", STR_PAD_LEFT) . "-" . date("d", (mktime(0, 0, 0, $txtmesfinal + 1, 1, $tempFechaPeriodo[0]) - 1));
                $tempFechaPeriodo = $mes[$tempFechaPeriodo[1] * 1] . " A " . $mes[$txtmesfinal] . " DEL " . $tempFechaPeriodo[0];

                $contador++;
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':D' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':K' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador + 1) . ':D' . ($contador + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . ($contador + 1) . ':K' . ($contador + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador + 2) . ':D' . ($contador + 2));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . ($contador + 2) . ':K' . ($contador + 2));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador + 3) . ':D' . ($contador + 3));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . ($contador + 3) . ':K' . ($contador + 3));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador + 4) . ':D' . ($contador + 4));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . ($contador + 4) . ':K' . ($contador + 4));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador + 5) . ':D' . ($contador + 5));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . ($contador + 5) . ':K' . ($contador + 5));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador + 6) . ':D' . ($contador + 6));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . ($contador + 6) . ':K' . ($contador + 6));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador + 7) . ':D' . ($contador + 7));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . ($contador + 7) . ':K' . ($contador + 7));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . ($contador + 8) . ':D' . ($contador + 8));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . ($contador + 8) . ':K' . ($contador + 8));

                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":K" . ($contador + 8));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":N" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "PERIODO:")
                        ->setCellValue('E' . ($contador), strtoupper($tempFechaPeriodo))
                        ->setCellValue('A' . ($contador + 1), "RAZON SOCIAL:")
                        ->setCellValue('E' . ($contador + 1), "CORPORACION POWER ACOUSTIK S.A.C.")
                        ->setCellValue('A' . ($contador + 2), "RUC:")
                        ->setCellValue('E' . ($contador + 2), "20509811858")
                        ->setCellValue('A' . ($contador + 3), "ESTABLECIMIENTO:")
                        ->setCellValue('E' . ($contador + 3), "Almacén General")
                        ->setCellValue('A' . ($contador + 4), "CODIGO DE LA EXISTENCIA:")
                        ->setCellValue('E' . ($contador + 4), $dataSaldoInicial[0]['codigopa'])
                        ->setCellValue('A' . ($contador + 5), "TIPO:")
                        ->setCellValue('E' . ($contador + 5), "Mercaderías")
                        ->setCellValue('A' . ($contador + 6), "DESCRIPCION:")
                        ->setCellValue('E' . ($contador + 6), $dataSaldoInicial[0]['nompro'])
                        ->setCellValue('A' . ($contador + 7), "UNIDAD DE MEDIDA:")
                        ->setCellValue('E' . ($contador + 7), "UNIDADES")
                        ->setCellValue('A' . ($contador + 8), "METODO DE EVALUACION:")
                        ->setCellValue('E' . ($contador + 8), "Promedio Móvil");

                $contador = $contador + 10;
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':A' . ($contador + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':B' . ($contador + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':C' . ($contador + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('D' . $contador . ':D' . ($contador + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':E' . ($contador + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':H' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('I' . $contador . ':K' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('L' . $contador . ':N' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":N" . ($contador + 1));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":N" . ($contador + 1))->getFill()->setRotation(1);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":N" . ($contador + 1))->getFont()->setBold(true);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "FECHA")
                        ->setCellValue('B' . ($contador), "TIPO DOC.")
                        ->setCellValue('C' . ($contador), "SERIE")
                        ->setCellValue('D' . ($contador), "NUMERO")
                        ->setCellValue('E' . ($contador), "TIPO \n MOV.")
                        ->setCellValue('F' . ($contador), "ENTRADAS")
                        ->setCellValue('I' . ($contador), "SALIDAS")
                        ->setCellValue('L' . ($contador), "SALDO FINAL")
                        ->setCellValue('F' . ($contador + 1), "Cant.")
                        ->setCellValue('G' . ($contador + 1), "Cost. Unit S/.")
                        ->setCellValue('H' . ($contador + 1), "Costo total S/.")
                        ->setCellValue('I' . ($contador + 1), "Cant.")
                        ->setCellValue('J' . ($contador + 1), "Cost. Unit S/.")
                        ->setCellValue('K' . ($contador + 1), "Costo total S/.")
                        ->setCellValue('L' . ($contador + 1), "Cant.")
                        ->setCellValue('M' . ($contador + 1), "Cost. Unit S/.")
                        ->setCellValue('N' . ($contador + 1), "Costo total S/.");

                $inventariomodel = new inventario();
                $dataInventario = $inventariomodel->listaKardexValorizado($idproducto, $dataSaldoInicial[0]['fechasaldo'], $mesFinal);

                $contador++;
                $contador++;
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":D" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "E" . ($contador) . ":E" . ($contador + 1));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle4, "F" . ($contador) . ":N" . ($contador + 1));
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':D' . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":N" . ($contador + 1))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), str_replace('-', '.', $dataSaldoInicial[0]['fechasaldo']))
                        ->setCellValue('B' . ($contador), "SALDO INICIAL")
                        ->setCellValue('E' . ($contador), "16")
                        ->setCellValue('F' . ($contador), $dataSaldoInicial[0]['cantidad1'])
                        ->setCellValue('G' . ($contador), number_format($dataSaldoInicial[0]['costounitario'], 2))
                        ->setCellValue('H' . ($contador), number_format(($dataSaldoInicial[0]['cantidad1'] * $dataSaldoInicial[0]['costounitario']), 2))
                        ->setCellValue('L' . ($contador), $dataSaldoInicial[0]['cantidad1'])
                        ->setCellValue('M' . ($contador), number_format($dataSaldoInicial[0]['costounitario'], 2))
                        ->setCellValue('N' . ($contador), number_format($dataSaldoInicial[0]['cantidad1'] * $dataSaldoInicial[0]['costounitario'], 2));
                $stockActual = $dataSaldoInicial[0]['cantidad1'];
                $precioglobal = number_format($dataSaldoInicial[0]['costounitario'], 2, '.', '');
                $cantidadEntradas = $dataSaldoInicial[0]['cantidad1'];
                $totalEntrada = number_format(($stockActual * $precioglobal), 2, '.', '');
                $costototalanterior = $totalEntrada;
                $cantidadSalida = 0;
                $totalSalida = 0;
                $tamanio = count($dataInventario);
                $arrayListTipocambio = array();
                $tipocambiomodel = new TipoCambio();
                for ($i = 0; $i < $tamanio; $i++) {
                    $contador++;
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($contador) . ":E" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle4, "F" . ($contador) . ":N" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":N" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), str_replace('-', '.', $dataInventario[$i]['fecha']))
                            ->setCellValue('B' . ($contador), " 0" . $dataInventario[$i]['operacion']);
                    if ($dataInventario[$i]['tipomovimiento'] * 1 == 2) {
                        $objPHPExcel->setActiveSheetIndex(0)
                                ->setCellValue('C' . ($contador), " " . $dataInventario[$i]['serie'])
                                ->setCellValue('D' . ($contador), " " . $dataInventario[$i]['numdoc']);
                    } else {
                        if ($dataInventario[$i]['electronico'] == 0) {
                            $ncomprobante = $dataInventario[$i]['numdoc'];
                            $tempComprobantes = $inventariomodel->arrayComprobantesCorrectos($ncomprobante);
                            $listaDetalleOrdenVenta = $inventariomodel->listaDetalleOrdenVenta($dataInventario[$i]["idordenventa"]);
                            $hasta = count($listaDetalleOrdenVenta);
                            for ($j = 0; $j < $hasta; $j++) {
                                if ($dataInventario[$i]["idproducto"] == $listaDetalleOrdenVenta[$j]['idproducto']) {
                                    if (isset($tempComprobantes[intval(($j) / 35)]["numdoc"])) {
                                        $numdoc = $tempComprobantes[intval(($j) / 35)]["numdoc"];
                                    } else {
                                        $numdoc = $tempComprobantes[intval(($j) / 35) - 1]["numdoc"];
                                    }
                                    $j = $hasta;
                                }
                            }
                            $objPHPExcel->setActiveSheetIndex(0)
                                    ->setCellValue('C' . ($contador), " " . str_pad($dataInventario[$i]['serie'], 3, "0", STR_PAD_LEFT))
                                    ->setCellValue('D' . ($contador), " " . $numdoc);
                        } else {
                            $listaComprobantesElectronicas = $inventariomodel->listaComprobantesElectronicas($dataInventario[$i]["idordenventa"]);
                            $listaDetalleOrdenVenta = $inventariomodel->listaDetalleOrdenVenta($dataInventario[$i]["idordenventa"]);
                            $hasta = count($listaDetalleOrdenVenta);
                            for ($j = 0; $j < $hasta; $j++) {
                                if ($dataInventario[$i]["idproducto"] == $listaDetalleOrdenVenta[$j]['idproducto']) {
                                    foreach ($listaComprobantesElectronicas as $valor) {
                                        if (($j + 1) >= $valor['desde'] and ( $j + 1) <= $valor['hasta']) {
                                            $numdoc = $valor['numdoc'];
                                        }
                                    }
                                    $j = $hasta;
                                }
                            }
                            $objPHPExcel->setActiveSheetIndex(0)
                                    ->setCellValue('C' . ($contador), " " . ($dataInventario[$i]['nombredoc'] == 2 ? 'B' : 'F') . str_pad($dataInventario[$i]['serie'], 3, "0", STR_PAD_LEFT))
                                    ->setCellValue('D' . ($contador), " " . str_pad($numdoc, 8, "0", STR_PAD_LEFT));
                        }
                    }
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('E' . ($contador), " " . $dataInventario[$i]['tipomovimiento']);
                    if ($dataInventario[$i]['tipomovimiento'] * 1 == 1) {
                        $stockActual -= $dataInventario[$i]['cantidad'];
                        $cantidadSalida += $dataInventario[$i]['cantidad'];
                        $totalSalida += number_format(($dataInventario[$i]['cantidad'] * $precioglobal), 2, '.', '');
                        $objPHPExcel->setActiveSheetIndex(0)
                                ->setCellValue('I' . ($contador), $dataInventario[$i]['cantidad'])
                                ->setCellValue('J' . ($contador), number_format($precioglobal, 2))
                                ->setCellValue('K' . ($contador), number_format(($dataInventario[$i]['cantidad'] * $precioglobal), 2));
                    } else {
                        $tipocambiodelmes = 1;
                        if ($dataInventario[$i]['idmoneda'] == 2) {
                            $tempFechaIni = explode("-", $dataInventario[$i]['fecha']);
                            if (!isset($arrayListTipocambio[$tempFechaIni[0] . "-" . $tempFechaIni[1]])) {
                                $tempFechaFin = $tempFechaIni[0] . "-" . $tempFechaIni[1] . "-" . date("d", (mktime(0, 0, 0, $tempFechaIni[1] + 1, 1, $tempFechaIni[0]) - 1));
                                $tempFechaIni = $tempFechaIni[0] . "-" . $tempFechaIni[1] . "-01";
                                $tipocambiodelmes = $tipocambiomodel->ultimotipodecambiodelmes($tempFechaIni, $tempFechaFin);
                                $arrayListTipocambio[$tempFechaIni[0] . "-" . $tempFechaIni[1]] = $tipocambiodelmes;
                            } else {
                                $tipocambiodelmes = $arrayListTipocambio[$tempFechaIni[0] . "-" . $tempFechaIni[1]];
                            }
                        }
                        $dataInventario[$i]['costounitario'] = number_format(($dataInventario[$i]['costounitario'] * $tipocambiodelmes), 2, '.', '');
                        $costototalactual = number_format(($dataInventario[$i]['costounitario'] * $dataInventario[$i]['cantidad']), 2, '.', '');
                        $stockActual += $dataInventario[$i]['cantidad'];
                        $cantidadEntradas += $dataInventario[$i]['cantidad'];
                        $costototalanterior += $costototalactual;
                        $precioglobal = $costototalanterior / $stockActual;
                        $objPHPExcel->setActiveSheetIndex(0)
                                ->setCellValue('F' . ($contador), $dataInventario[$i]['cantidad'])
                                ->setCellValue('G' . ($contador), number_format(($dataInventario[$i]['costounitario']), 2))
                                ->setCellValue('H' . ($contador), number_format($costototalactual, 2));
                        $totalEntrada += number_format($costototalactual, 2, '.', '');
                    }
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('L' . ($contador), $stockActual)
                            ->setCellValue('M' . ($contador), number_format($precioglobal, 2))
                            ->setCellValue('N' . ($contador), number_format(($stockActual * $precioglobal), 2));
                    $costototalanterior = number_format(($stockActual * $precioglobal), 2, '.', '');
                }
                $contador++;
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "E" . ($contador) . ":E" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle4, "F" . ($contador) . ":K" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->getActiveSheet()->getStyle("E" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('E' . ($contador), "TOTALES")
                        ->setCellValue('F' . ($contador), $cantidadEntradas)
                        ->setCellValue('H' . ($contador), number_format($totalEntrada, 2))
                        ->setCellValue('I' . ($contador), $cantidadSalida)
                        ->setCellValue('K' . ($contador), number_format($totalSalida, 2));

                $nuevafecha = strtotime('+1 day', strtotime($mesFinal));
                $nuevafecha = date('Y-m-d', $nuevafecha);
                $saldosIniciales = $this->AutoLoadModel('saldosIniciales');
                $evaluarDuplicidad = $saldosIniciales->evaluarDuplicididad($idproducto, $nuevafecha, 1);
                if (count($evaluarDuplicidad) == 0) {
                    $grabosaldoinicial = $saldosIniciales->insertarSaldoInicial($idproducto, $stockActual, $precioglobal, '', 1, 2, $nuevafecha, $_SESSION['idactor'], date("Y-m-d H:i:s"), 1);
                } else {
                    $grabosaldoinicial = $saldosIniciales->actualizarSaldoInicial($evaluarDuplicidad[0]['idsaldo'], $stockActual, $precioglobal, '', $_SESSION['idactor'], date("Y-m-d H:i:s"));
                }
                $dataRespuesta['rspta'] = 1;
                $objPHPExcel->getActiveSheet()->setTitle('Simulacro IPV');
                $objPHPExcel->setActiveSheetIndex(0);
                $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
                $objWriter->save($filename);
                header('Content-Description: File Transfer');
                header('Content-type: application/force-download');
                header('Content-Disposition: attachment; filename=' . basename($filename));
                header('Content-Transfer-Encoding: binary');
                header("Content-type: application/octet-stream");
                header('Expires: 0');
                header('Cache-Control: must-revalidate');
                header('Pragma: public');
                header('Content-Length: ' . filesize($filename));
                ob_clean();
                flush();
                readfile($filename);
                unlink($filename);
            } else {
                $dataRespuesta['rspta'] = "Los Parametros Ingresados No Son Correctos.";
                echo json_encode($dataRespuesta);
            }
        } else {
            $dataRespuesta['rspta'] = "Saldo No Seleccionado.";
            echo json_encode($dataRespuesta);
        }
    }

    public function rankingclientesseguncontabilidad() {
        set_time_limit(500);
        $url_fechaini = $_REQUEST['txtFechaInicio'];
        $url_fechafin = $_REQUEST['txtFechaFinal'];
        $url_idmoneda = $_REQUEST['cmbMoneda'];
        $url_mostrarclientes = $_REQUEST['cmbCantidadClientes'];
        $esAnulado = $_REQUEST['cmbEstado'];
        $filtro = "";
        if ($url_idmoneda == 1) {
            $filtro = "VENTAS SOLO EN SOLES";
        }
        if ($url_idmoneda == 2) {
            $filtro = "VENTAS SOLO EN DOLARES";
        }
        $reporte = $this->AutoLoadModel('reporte');
        $listar_ventasfacturadonofacturado1_ranking = $reporte->ventasfacturadonofacturado1_ranking($url_fechaini, $url_fechafin, $url_idmoneda, $url_mostrarclientes);
        //********************************* Proceso de trasmutacion de ovs generadas de otros dias pero facturadas segun la fecha enviada
        $get_segregado_idclientes = '';
        for ($i = 0; $i < count($listar_ventasfacturadonofacturado1_ranking); $i++) {
            $array_idclientes[] = array("idcliente" => $listar_ventasfacturadonofacturado1_ranking[$i]['idcliente']);
        }
        foreach ($array_idclientes as $val) {
            $data[] = $reporte->ventasfacturadonofacturado2_ranking($url_fechaini, $url_fechafin, $val['idcliente']);
        }


        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'rankingdeclientesdeacuerdoacontabilidad.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $titulos = array('N', 'FECHA.OV', 'ORD VENTA', 'CLIENTE', 'RUC/DNI', 'TOTAL COMPRAS', 'Est Guia', 'GUIA REMI', 'FACTURA', 'BI FACTURA', 'IGV FACT', 'Monto Perce', '%', 'BOLETA', 'BI BOLETA', 'Est comprobante');

        $sharedSUBTITULO = new PHPExcel_Style();
        $sharedSUBTITULO->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => '00000000')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
            ), 'font' => array(
                'color' => array('argb' => 'FFFFFFFF')
            )
                )
        );

        $sharedValorCentro = new PHPExcel_Style();
        $sharedValorCentro->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => '00000000')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ), 'font' => array(
                'color' => array('argb' => 'FFFFFFFF')
            )
                )
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('rgb' => 'FFFFFFFF')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER
            )
                )
        );


        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('N')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('O')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('P')->setAutoSize(true);

        $contador = 0;


        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':P' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":P" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "REPORTE DE RANKING DE CLIENTES DE ACUERDO A CONTABILIDAD DEL " . $url_fechaini . " AL " . $url_fechafin);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':P' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":P" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);

        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $filtro);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;



        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $titulos[0])
                ->setCellValue('B' . ($contador), $titulos[1])
                ->setCellValue('C' . ($contador), $titulos[2])
                ->setCellValue('D' . ($contador), $titulos[3])
                ->setCellValue('E' . ($contador), $titulos[4])
                ->setCellValue('F' . ($contador), $titulos[5])
                ->setCellValue('G' . ($contador), $titulos[6])
                ->setCellValue('H' . ($contador), $titulos[7])
                ->setCellValue('I' . ($contador), $titulos[8])
                ->setCellValue('J' . ($contador), $titulos[9])
                ->setCellValue('K' . ($contador), $titulos[10])
                ->setCellValue('L' . ($contador), $titulos[11])
                ->setCellValue('M' . ($contador), $titulos[12])
                ->setCellValue('N' . ($contador), $titulos[13])
                ->setCellValue('O' . ($contador), $titulos[14])
                ->setCellValue('P' . ($contador), $titulos[15]);


        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":P" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
        $contador ++;


        $nro_aumentador = 0;
        $sum_importeGuia_soles = 0.00;
        $sum_biBoleta_soles = 0.00;
        $sum_totalcomprobante_soles = 0.00;
        $sum_subtotalFactura_soles = 0.00;
        $sum_igvFactura_soles = 0.00;
        $sum_percepcion_soles = 0.00;
        $sum_importeGuia_dolares = 0.00;
        $sum_biBoleta_dolares = 0.00;
        $sum_totalcomprobante_dolares = 0.00;
        $sum_subtotalFactura_dolares = 0.00;
        $sum_igvFactura_dolares = 0.00;
        $sum_percepcion_dolares = 0.00;
        $idordenventaTemp = -1;
        $idclienteTemp = -1;
        $cont0 = -1;
        for ($p = 0; $p < count($data); $p++) {
            for ($i = 0; $i < count($data[$p]); $i++) {
                //start DESPLEGADO**********
                $cont = $cont + 1;
                if ($data[$p][$i]['idcliente'] != $idclienteTemp) {
                    $sum_importeGuia_soles_cliente = 0;
                    $sum_subtotalFactura_soles_cliente = 0;
                    $sum_igvFactura_soles_cliente = 0;
                    $sum_percepcion_soles_cliente = 0;
                    $sum_biBoleta_soles_cliente = 0;
                    $sum_importeGuia_dolares_cliente = 0;
                    $sum_subtotalFactura_dolares_cliente = 0;
                    $sum_igvFactura_dolares_cliente = 0;
                    $sum_percepcion_dolares_cliente = 0;
                    $sum_biBoleta_dolares_cliente = 0;
                    if ($cont > 1) {
                        $puntero_anterior = count($totalesporcliente) - 1;
                        $idcliente_anterior = $totalesporcliente[$puntero_anterior]['idcliente'];
                        foreach ($totalesporcliente as $v) {
                            if ($idcliente_anterior == $v['idcliente']) {
                                $sum_importeGuia_soles_cliente = $sum_importeGuia_soles_cliente + $v['sum_importeGuia_soles'];
                                $sum_subtotalFactura_soles_cliente = $sum_subtotalFactura_soles_cliente + $v['sum_subtotalFactura_soles'];
                                $sum_igvFactura_soles_cliente = $sum_igvFactura_soles_cliente + $v['sum_igvFactura_soles'];
                                $sum_percepcion_soles_cliente = $sum_percepcion_soles_cliente + $v['sum_percepcion_soles'];
                                $sum_biBoleta_soles_cliente = $sum_biBoleta_soles_cliente + $v['sum_biBoleta_soles'];
                                $sum_importeGuia_dolares_cliente = $sum_importeGuia_dolares_cliente + $v['sum_importeGuia_dolares'];
                                $sum_subtotalFactura_dolares_cliente = $sum_subtotalFactura_dolares_cliente + $v['sum_subtotalFactura_dolares'];
                                $sum_igvFactura_dolares_cliente = $sum_igvFactura_dolares_cliente + $v['sum_igvFactura_dolares'];
                                $sum_percepcion_dolares_cliente = $sum_percepcion_dolares_cliente + $v['sum_percepcion_dolares'];
                                $sum_biBoleta_dolares_cliente = $sum_biBoleta_dolares_cliente + $v['sum_biBoleta_dolares'];
                            }
                        }
                        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':E' . $contador);
                        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedSUBTITULO, "A" . ($contador) . ":E" . ($contador));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), 'MONTO SOLES S/:');
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), 'S/ ' . number_format($sum_importeGuia_soles_cliente, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), '');
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), '');
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), '');
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), 'S/ ' . number_format($sum_subtotalFactura_soles_cliente, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), 'S/ ' . number_format($sum_igvFactura_soles_cliente, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), 'S/ ' . number_format($sum_percepcion_soles_cliente, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), '');
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('N' . ($contador), '');
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), 'S/ ' . number_format($sum_biBoleta_soles_cliente, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('P' . ($contador), '');
                        $contador++;
                        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':E' . $contador);
                        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedSUBTITULO, "A" . ($contador) . ":E" . ($contador));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), 'MONTO DOLARES US $:');
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), 'US $ ' . number_format($sum_importeGuia_dolares_cliente, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), '');
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), '');
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), '');
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), 'US $ ' . number_format($sum_subtotalFactura_dolares_cliente, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), 'US $ ' . number_format($sum_igvFactura_dolares_cliente, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), 'US $ ' . number_format($sum_percepcion_dolares_cliente, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), '');
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('N' . ($contador), '');
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), 'US $ ' . number_format($sum_biBoleta_dolares_cliente, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('P' . ($contador), '');

                        $contador ++;
                        $contador ++;
                    }
                }

                //end DESPLEGADO**********

                $entro_a = 'false';
                $serieGRemision = '';
                $numGRemision = '';
                $serieFactura = "";
                $correlativoFactura = "";
                $comprobanteFactura = "";

                $importeGuia_soles = 0.00;
                $subtotalFactura_soles = 0.00;
                $igvFactura_soles = 0.00;
                $totalcomprobante_soles = 0.00;
                $percepcion_soles = 0.00;
                $biBoleta_soles = 0.00;
                $porcentaje_percepcion_soles = '';

                $importeGuia_dolares = 0.00;
                $subtotalFactura_dolares = 0.00;
                $igvFactura_dolares = 0.00;
                $totalcomprobante_dolares = 0.00;
                $percepcion_dolares = 0.00;
                $biBoleta_dolares = 0.00;
                $porcentaje_percepcion_dolares = '';

                $que_comprobante_se_sumara = "";
                $serieBoleta = "";
                $correlativoBoleta = "";
                $comprobanteBoleta = '';
                $tipocomprobante = '';
                $electronico = '';
                $moneda = '';
                $estado_ov = '';
                $estadoComprobante = '';
                $documento = new Documento();
                $listar_comprobantes = $documento->listar_comprobantes($data[$p][$i]['idordenventa'], $esAnulado);


                $tiene_comprobantes = count($listar_comprobantes);
                $listar_guia_remision = $documento->listar_guia_remision($data[$p][$i]['idordenventa']);
                $tiene_guia_remision = count($listar_guia_remision);


                if ($data[$p][$i]['estado_ov'] == '1') {
                    $estado_ov = 'Activo';
                }
                if ($data[$p][$i]['estado_ov'] == '0') {
                    $estado_ov = 'Anulado';
                }


                //*************SE HACE DOS IMPRESIONES porque cuando comprobantes es igual a CERO  solo se imprime una fila
                //*************PERO CUANDO TIENE COMPROBANTES NO SABEMOS CUANTOS COMPROBANTES TENDRA UNA MISMA GUIA
                //*************POR ENDE UNA GUIA PUEDE TENER VARIAS FACTURAS (VARIAS IMPRESIONES EN UNA MISMA GUIA)
                if ($tiene_comprobantes == 0) {
                    $cont0 = $cont0 + 1;
                    $totalesporcliente[$cont0] = array(
                        "idcliente" => $data[$p][$i]['idcliente'],
                        "sum_importeGuia_soles" => 0.00,
                        "sum_subtotalFactura_soles" => 0.00,
                        "sum_igvFactura_soles" => 0.00,
                        "sum_percepcion_soles" => 0.00,
                        "sum_biBoleta_soles" => 0.00,
                        "sum_importeGuia_dolares" => 0.00,
                        "sum_subtotalFactura_dolares" => 0.00,
                        "sum_igvFactura_dolares" => 0.00,
                        "sum_percepcion_dolares" => 0.00,
                        "sum_biBoleta_dolares" => 0.00
                    );
                    if ($tiene_comprobantes == 0 and $tiene_guia_remision >= 1) {
                        $serieGRemision = $listar_guia_remision[0]['serie'];
                        $numGRemision = $listar_guia_remision[0]['numdoc'];
                        //start solo suma guia que esta activa y lo hace una sola vez por orden
                        if ($idordenventaTemp != $data[$p][$i]['idordenventa'] and $data[$p][$i]['estado_ov'] == '1') {
                            if ($data[$p][$i]['idmoneda'] == '1') {
                                $importeGuia_soles = $data[$p][$i]['importeov'];
                                $sum_importeGuia_soles = $sum_importeGuia_soles + $importeGuia_soles;
                            }
                            if ($data[$p][$i]['idmoneda'] == '2') {
                                $importeGuia_dolares = $data[$p][$i]['importeov'];
                                $sum_importeGuia_dolares = $sum_importeGuia_dolares + $importeGuia_dolares;
                            }
                            foreach ($totalesporcliente as $v) {
                                if ($data[$p][$i]['idcliente'] == $v['idcliente']) {
                                    $totalesporcliente[$cont0] = array(
                                        "idcliente" => $v['idcliente'],
                                        "sum_importeGuia_soles" => $importeGuia_soles,
                                        "sum_subtotalFactura_soles" => $v['sum_subtotalFactura_soles'],
                                        "sum_igvFactura_soles" => $v['sum_igvFactura_soles'],
                                        "sum_percepcion_soles" => $v['sum_percepcion_soles'],
                                        "sum_biBoleta_soles" => $v['sum_biBoleta_soles'],
                                        "sum_importeGuia_dolares" => $importeGuia_dolares,
                                        "sum_subtotalFactura_dolares" => $v['sum_subtotalFactura_dolares'],
                                        "sum_igvFactura_dolares" => $v['sum_igvFactura_dolares'],
                                        "sum_percepcion_dolares" => $v['sum_percepcion_dolares'],
                                        "sum_biBoleta_dolares" => $v['sum_biBoleta_dolares']
                                    );
                                }
                            }
                        }
                        //end solo suma guia que esta activa y lo hace una sola vez por orden
                    }

                    //START  CUANDO SOLO TIENE ORDEN DE VENTA Y NO TIENE GUIA DE REMISION, NI FACTURA, NI BOLETA
                    if ($tiene_comprobantes == 0 and $tiene_guia_remision == 0 and $data[$p][$i]['estado_ov'] == '1') {
                        //start suma el vaor de la ov a la constantes del total de guias de remision y lo hace una sola vez por orden
                        if ($idordenventaTemp != $data[$p][$i]['idordenventa'] and $data[$p][$i]['estado_ov'] == '1') {
                            if ($data[$p][$i]['idmoneda'] == '1') {
                                $importeGuia_soles = $data[$p][$i]['importeov'];
                                $sum_importeGuia_soles = $sum_importeGuia_soles + $importeGuia_soles;
                            }
                            if ($data[$p][$i]['idmoneda'] == '2') {
                                $importeGuia_dolares = $data[$p][$i]['importeov'];
                                $sum_importeGuia_dolares = $sum_importeGuia_dolares + $importeGuia_dolares;
                            }
                            foreach ($totalesporcliente as $v) {
                                if ($data[$p][$i]['idcliente'] == $v['idcliente']) {
                                    $totalesporcliente[$cont0] = array(
                                        "idcliente" => $v['idcliente'],
                                        "sum_importeGuia_soles" => $importeGuia_soles,
                                        "sum_subtotalFactura_soles" => $v['sum_subtotalFactura_soles'],
                                        "sum_igvFactura_soles" => $v['sum_igvFactura_soles'],
                                        "sum_percepcion_soles" => $v['sum_percepcion_soles'],
                                        "sum_biBoleta_soles" => $v['sum_biBoleta_soles'],
                                        "sum_importeGuia_dolares" => $importeGuia_dolares,
                                        "sum_subtotalFactura_dolares" => $v['sum_subtotalFactura_dolares'],
                                        "sum_igvFactura_dolares" => $v['sum_igvFactura_dolares'],
                                        "sum_percepcion_dolares" => $v['sum_percepcion_dolares'],
                                        "sum_biBoleta_dolares" => $v['sum_biBoleta_dolares']
                                    );
                                }
                            }
                        }
                        //end suma el vaor de la ov a la constantes del total de guias de remision y lo hace una sola vez por orden
                    }
                    //END  CUANDO SOLO TIENE ORDEN DE VENTA Y NO TIENE GUIA DE REMISION, NI FACTURA, NI BOLETA
                    //          ***************************************************************************************************
                    // START  ORDENADO DE VARIABLES PARA IMPRIMIR FILA
                    if ($data[$p][$i]['ruc'] == '') {
                        $ruc_dni = $data[$p][$i]['dni'];
                    } else {
                        $ruc_dni = $data[$p][$i]['ruc'];
                    }

                    if ($data[$p][$i]['idmoneda'] == '1') {
                        $moneda = 'S/';
                    }
                    if ($data[$p][$i]['idmoneda'] == '2') {
                        $moneda = 'US $';
                    }

                    if ($subtotalFactura_soles > 0) {
                        $percepcion_soles = $moneda . ' ' . number_format($percepcion_soles, 2);
                        $porcentaje_percepcion_soles = $data[$p][$i]['percepcion'] * 100;
                        $porcentaje_percepcion_soles = $porcentaje_percepcion_soles . '%';
                    } else {
                        $percepcion_soles = $moneda . ' ' . '0.00';
                        $porcentaje_percepcion_soles = '';
                    }

                    if ($subtotalFactura_dolares > 0) {
                        $percepcion_dolares = $moneda . ' ' . number_format($percepcion_dolares, 2);
                        $porcentaje_percepcion_dolares = $data[$p][$i]['percepcion'] * 100;
                        $porcentaje_percepcion_dolares = $porcentaje_percepcion_dolares . '%';
                    } else {
                        $percepcion_dolares = $moneda . ' ' . '0.00';
                        $porcentaje_percepcion_dolares = '';
                    }

                    $nro_aumentador = $nro_aumentador + 1;

                    if ($data[$p][$i]['idmoneda'] == '1') {
                        //***********************
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $nro_aumentador);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), $data[$p][$i]['fordenventa']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), $data[$p][$i]['codigov']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), $data[$p][$i]['razonsocial']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $ruc_dni);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), $moneda . ' ' . number_format($importeGuia_soles, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), $estado_ov);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), $serieGRemision . '-' . $numGRemision);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), $comprobanteFactura);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), $moneda . ' ' . number_format($subtotalFactura_soles, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), $moneda . ' ' . number_format($igvFactura_soles, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), $percepcion_soles);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), $porcentaje_percepcion_soles);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('N' . ($contador), $comprobanteBoleta);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), $moneda . ' ' . number_format($biBoleta_soles, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('P' . ($contador), $estadoComprobante);
                        $contador ++;
                        //***********************
                    }
                    if ($data[$p][$i]['idmoneda'] == '2') {
                        //***********************
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $nro_aumentador);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), $data[$p][$i]['fordenventa']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), $data[$p][$i]['codigov']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), $data[$p][$i]['razonsocial']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $ruc_dni);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), $moneda . ' ' . number_format($importeGuia_dolares, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), $estado_ov);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), $serieGRemision . '-' . $numGRemision);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), $comprobanteFactura);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), $moneda . ' ' . number_format($subtotalFactura_dolares, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), $moneda . ' ' . number_format($igvFactura_dolares, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), $percepcion_dolares);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), $porcentaje_percepcion_dolares);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('N' . ($contador), $comprobanteBoleta);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), $moneda . ' ' . number_format($biBoleta_dolares, 2));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('P' . ($contador), $estadoComprobante);
                        $contador ++;
                        //***********************
                    }
                    // END  ORDENADO DE VARIABLES PARA IMPRIMIR FILA
                    //              ****************************************************************************************************
                }
                if ($tiene_comprobantes >= 1) { // recrrera comprobantes asi esten anulados o activos pero solo sumara los activos
                    $entro_a = 'true';
                    $cont0 = $cont0 + 1;
                    $totalesporcliente[$cont0] = array(
                        "idcliente" => $data[$p][$i]['idcliente'],
                        "sum_importeGuia_soles" => 0.00,
                        "sum_subtotalFactura_soles" => 0.00,
                        "sum_igvFactura_soles" => 0.00,
                        "sum_percepcion_soles" => 0.00,
                        "sum_biBoleta_soles" => 0.00,
                        "sum_importeGuia_dolares" => 0.00,
                        "sum_subtotalFactura_dolares" => 0.00,
                        "sum_igvFactura_dolares" => 0.00,
                        "sum_percepcion_dolares" => 0.00,
                        "sum_biBoleta_dolares" => 0.00
                    );
                    //start limpia variables por vuelta
                    $serieGRemision = '';
                    $numGRemision = '';
                    $importeGuia_soles = 0.00;
                    $importeGuia_dolares = 0.00;
                    //end limpia variables por vuelta                   
                    $serieGRemision = $listar_guia_remision[0]['serie'];
                    $numGRemision = $listar_guia_remision[0]['numdoc'];
                    //start solo suma guia que esta activa y lo hace una sola vez por orden
                    if ($idordenventaTemp != $data[$p][$i]['idordenventa'] and $data[$p][$i]['estado_ov'] == '1') {
                        if ($data[$p][$i]['idmoneda'] == '1') {
                            $importeGuia_soles = $data[$p][$i]['importeov'];
                            $sum_importeGuia_soles = $sum_importeGuia_soles + $importeGuia_soles;
                        }
                        if ($data[$p][$i]['idmoneda'] == '2') {
                            $importeGuia_dolares = $data[$p][$i]['importeov'];
                            $sum_importeGuia_dolares = $sum_importeGuia_dolares + $importeGuia_dolares;
                        }
                        foreach ($totalesporcliente as $v) {
                            if ($data[$p][$i]['idcliente'] == $v['idcliente']) {
                                $totalesporcliente[$cont0] = array(
                                    "idcliente" => $v['idcliente'],
                                    "sum_importeGuia_soles" => $importeGuia_soles,
                                    "sum_subtotalFactura_soles" => $v['sum_subtotalFactura_soles'],
                                    "sum_igvFactura_soles" => $v['sum_igvFactura_soles'],
                                    "sum_percepcion_soles" => $v['sum_percepcion_soles'],
                                    "sum_biBoleta_soles" => $v['sum_biBoleta_soles'],
                                    "sum_importeGuia_dolares" => $importeGuia_dolares,
                                    "sum_subtotalFactura_dolares" => $v['sum_subtotalFactura_dolares'],
                                    "sum_igvFactura_dolares" => $v['sum_igvFactura_dolares'],
                                    "sum_percepcion_dolares" => $v['sum_percepcion_dolares'],
                                    "sum_biBoleta_dolares" => $v['sum_biBoleta_dolares']
                                );
                            }
                        }
                    }
                    //end solo suma guia que esta activa y lo hace una sola vez por orden

                    for ($j = 0; $j < count($listar_comprobantes); $j++) {
                        if ($entro_a != 'true') {
                            $cont0 = $cont0 + 1;
                            foreach ($totalesporcliente as $v) {
                                if ($data[$p][$i]['idcliente'] == $v['idcliente']) {
                                    $totalesporcliente[$cont0] = array(
                                        "idcliente" => $v['idcliente'],
                                        "sum_importeGuia_soles" => 0.00,
                                        "sum_subtotalFactura_soles" => 0.00,
                                        "sum_igvFactura_soles" => 0.00,
                                        "sum_percepcion_soles" => 0.00,
                                        "sum_biBoleta_soles" => 0.00,
                                        "sum_importeGuia_dolares" => 0.00,
                                        "sum_subtotalFactura_dolares" => 0.00,
                                        "sum_igvFactura_dolares" => 0.00,
                                        "sum_percepcion_dolares" => 0.00,
                                        "sum_biBoleta_dolares" => 0.00,
                                    );
                                }
                            }
                        }
                        //start limpia variables por vuelta
                        $serieFactura = "";
                        $correlativoFactura = "";
                        $comprobanteFactura = "";

                        $subtotalFactura_soles = 0.00;
                        $igvFactura_soles = 0.00;
                        $totalcomprobante_soles = 0.00;
                        $percepcion_soles = 0.00;
                        $biBoleta_soles = 0.00;
                        $porcentaje_percepcion_soles = '';

                        $subtotalFactura_dolares = 0.00;
                        $igvFactura_dolares = 0.00;
                        $totalcomprobante_dolares = 0.00;
                        $percepcion_dolares = 0.00;
                        $biBoleta_dolares = 0.00;
                        $porcentaje_percepcion_dolares = '';

                        $que_comprobante_se_sumara = "";
                        $serieBoleta = "";
                        $correlativoBoleta = "";
                        $comprobanteBoleta = '';
                        $tipocomprobante = '';
                        $electronico = '';
                        $moneda = '';
                        $estado_ov = '';
                        $estadoComprobante = '';
                        //end limpia variables por vuelta
                        if ($data[$p][$i]['estado_ov'] == '1') {
                            $estado_ov = 'Activo';
                        }
                        if ($data[$p][$i]['estado_ov'] == '0') {
                            $estado_ov = 'Anulado';
                        }

                        if ($listar_comprobantes[$j]['nombredoc'] == 1) { // si tiene facturas
                            // START OBTENIENDO CORRELATIVO FACTURA
                            if ($listar_comprobantes[$j]["electronico"] == 1) {
                                $electronico = '';
                                $serieFactura = $documento->add_ceros($listar_comprobantes[$j]['serie'], 3);
                                $serieFactura = "F" . $serieFactura;
                                $correlativoFactura = $documento->add_ceros($listar_comprobantes[$j]['numdoc'], 8);
                            }

                            if ($listar_comprobantes[$j]["electronico"] == 0) {
                                $electronico = 'FISICA';
                                $serieFactura = $listar_comprobantes[$j]['serie'];
                                $correlativoFactura = $listar_comprobantes[$j]['numdoc'];
                            }
                            $comprobanteFactura = $serieFactura . ' - ' . $correlativoFactura;
                            $tipocomprobante = "FACTURA " . $electronico;
                            // END OBTENIENDO CORRELATIVO FACTURA

                            if ($data[$p][$i]['idmoneda'] == '1') {
                                $subtotalFactura_soles = $listar_comprobantes[$j]['montofacturado'] - $listar_comprobantes[$j]['montoigv'];
                                $igvFactura_soles = $listar_comprobantes[$j]['montoigv'];
                                $totalcomprobante_soles = $listar_comprobantes[$j]['montofacturado'];
                                $percepcion_soles = $listar_comprobantes[$j]['montofacturado'] * $data[$p][$i]['percepcion'];
                            }
                            if ($data[$p][$i]['idmoneda'] == '2') {
                                $subtotalFactura_dolares = $listar_comprobantes[$j]['montofacturado'] - $listar_comprobantes[$j]['montoigv'];
                                $igvFactura_dolares = $listar_comprobantes[$j]['montoigv'];
                                $totalcomprobante_dolares = $listar_comprobantes[$j]['montofacturado'];
                                $percepcion_dolares = $listar_comprobantes[$j]['montofacturado'] * $data[$p][$i]['percepcion'];
                            }
                            if ($listar_comprobantes[$j]['esAnulado'] == 0) {
                                $estadoComprobante = 'Activo';
                            }
                            if ($listar_comprobantes[$j]['esAnulado'] == 1) {
                                $estadoComprobante = 'Anulado';
                            }
                            $que_comprobante_se_sumara = 'FACTURA';
                        }

                        if ($listar_comprobantes[$j]['nombredoc'] == 2) { // si tiene boleta
                            // START OBTENIENDO CORRELATIVO BOLETA
                            if ($listar_comprobantes[$j]["electronico"] == 1) {
                                $electronico = '';
                                $serieBoleta = $documento->add_ceros($listar_comprobantes[$j]['serie'], 3);
                                $serieBoleta = 'B' . $serieBoleta;
                                $correlativoBoleta = $documento->add_ceros($listar_comprobantes[$j]['numdoc'], 8);
                            }
                            if ($listar_comprobantes[$j]["electronico"] == 0) {
                                $electronico = 'FISICA';
                                $serieBoleta = $listar_comprobantes[$j]['serie'];
                                $correlativoBoleta = $listar_comprobantes[$j]['numdoc'];
                            }
                            $comprobanteBoleta = $serieBoleta . ' - ' . $correlativoBoleta;
                            $tipocomprobante = "BOLETA " . $electronico;
                            // END OBTENIENDO CORRELATIVO BOLETA

                            if ($data[$p][$i]['idmoneda'] == '1') {
                                $biBoleta_soles = $listar_comprobantes[$j]['montofacturado'];
                                $totalcomprobante_soles = $listar_comprobantes[$j]['montofacturado'];
                            }
                            if ($data[$p][$i]['idmoneda'] == '2') {
                                $biBoleta_dolares = $listar_comprobantes[$j]['montofacturado'];
                                $totalcomprobante_dolares = $listar_comprobantes[$j]['montofacturado'];
                            }

                            if ($listar_comprobantes[$j]['esAnulado'] == 0) {
                                $estadoComprobante = 'Activo';
                            }
                            if ($listar_comprobantes[$j]['esAnulado'] == 1) {
                                $estadoComprobante = 'Anulado';
                            }
                            $que_comprobante_se_sumara = 'BOLETA';
                        }
                        //start solo sumando el comprobante que esta activo
                        if ($que_comprobante_se_sumara == 'BOLETA' and $listar_comprobantes[$j]['esAnulado'] == 0) {
                            if ($data[$p][$i]['idmoneda'] == '1') {
                                $sum_biBoleta_soles = $sum_biBoleta_soles + $biBoleta_soles;
                                $sum_totalcomprobante_soles = $sum_totalcomprobante_soles + $totalcomprobante_soles;
                            }
                            if ($data[$p][$i]['idmoneda'] == '2') {
                                $sum_biBoleta_dolares = $sum_biBoleta_dolares + $biBoleta_dolares;
                                $sum_totalcomprobante_dolares = $sum_totalcomprobante_dolares + $totalcomprobante_dolares;
                            }
                            foreach ($totalesporcliente as $v) {
                                if ($data[$p][$i]['idcliente'] == $v['idcliente']) {
                                    $totalesporcliente[$cont0] = array(
                                        "idcliente" => $v['idcliente'],
                                        "sum_importeGuia_soles" => $v['sum_importeGuia_soles'],
                                        "sum_subtotalFactura_soles" => $v['sum_subtotalFactura_soles'],
                                        "sum_igvFactura_soles" => $v['sum_igvFactura_soles'],
                                        "sum_percepcion_soles" => $v['sum_percepcion_soles'],
                                        "sum_biBoleta_soles" => $biBoleta_soles,
                                        "sum_importeGuia_dolares" => $v['sum_importeGuia_dolares'],
                                        "sum_subtotalFactura_dolares" => $v['sum_subtotalFactura_dolares'],
                                        "sum_igvFactura_dolares" => $v['sum_igvFactura_dolares'],
                                        "sum_percepcion_dolares" => $v['sum_percepcion_dolares'],
                                        "sum_biBoleta_dolares" => $biBoleta_dolares
                                    );
                                }
                            }
                        }
                        if ($que_comprobante_se_sumara == 'FACTURA' and $listar_comprobantes[$j]['esAnulado'] == 0) {
                            if ($data[$p][$i]['idmoneda'] == '1') {
                                $sum_subtotalFactura_soles = $sum_subtotalFactura_soles + $subtotalFactura_soles;
                                $sum_igvFactura_soles = $sum_igvFactura_soles + $igvFactura_soles;
                                $sum_totalcomprobante_soles = $sum_totalcomprobante_soles + $totalcomprobante_soles;
                                $sum_percepcion_soles = $sum_percepcion_soles + $percepcion_soles;
                                foreach ($totalesporcliente as $v) {
                                    if ($data[$p][$i]['idcliente'] == $v['idcliente']) {
                                        $totalesporcliente[$cont0] = array(
                                            "idcliente" => $v['idcliente'],
                                            "sum_importeGuia_soles" => $v['sum_importeGuia_soles'],
                                            "sum_subtotalFactura_soles" => $subtotalFactura_soles,
                                            "sum_igvFactura_soles" => $igvFactura_soles,
                                            "sum_percepcion_soles" => $percepcion_soles,
                                            "sum_biBoleta_soles" => $v['sum_biBoleta_soles'],
                                            "sum_importeGuia_dolares" => $v['sum_importeGuia_dolares'],
                                            "sum_subtotalFactura_dolares" => $v['sum_subtotalFactura_dolares'],
                                            "sum_igvFactura_dolares" => $v['sum_igvFactura_dolares'],
                                            "sum_percepcion_dolares" => $v['sum_percepcion_dolares'],
                                            "sum_biBoleta_dolares" => $v['sum_biBoleta_dolares'],
                                        );
                                    }
                                }
                            }
                            if ($data[$p][$i]['idmoneda'] == '2') {
                                $sum_subtotalFactura_dolares = $sum_subtotalFactura_dolares + $subtotalFactura_dolares;
                                $sum_igvFactura_dolares = $sum_igvFactura_dolares + $igvFactura_dolares;
                                $sum_totalcomprobante_dolares = $sum_totalcomprobante_dolares + $totalcomprobante_dolares;
                                $sum_percepcion_dolares = $sum_percepcion_dolares + $percepcion_dolares;
                                foreach ($totalesporcliente as $v) {
                                    if ($data[$p][$i]['idcliente'] == $v['idcliente']) {
                                        $totalesporcliente[$cont0] = array(
                                            "idcliente" => $v['idcliente'],
                                            "sum_importeGuia_soles" => $v['sum_importeGuia_soles'],
                                            "sum_subtotalFactura_soles" => $v['sum_subtotalFactura_soles'],
                                            "sum_igvFactura_soles" => $v['sum_igvFactura_soles'],
                                            "sum_percepcion_soles" => $v['sum_percepcion_soles'],
                                            "sum_biBoleta_soles" => $v['sum_biBoleta_soles'],
                                            "sum_importeGuia_dolares" => $v['sum_importeGuia_dolares'],
                                            "sum_subtotalFactura_dolares" => $subtotalFactura_dolares,
                                            "sum_igvFactura_dolares" => $igvFactura_dolares,
                                            "sum_percepcion_dolares" => $percepcion_dolares,
                                            "sum_biBoleta_dolares" => $v['sum_biBoleta_dolares'],
                                        );
                                    }
                                }
                            }
                        }
                        $idordenventaTemp = $data[$p][$i]['idordenventa'];

                        if ($data[$p][$i]['ruc'] == '') {
                            $ruc_dni = $data[$p][$i]['dni'];
                        } else {
                            $ruc_dni = $data[$p][$i]['ruc'];
                        }
                        if ($data[$p][$i]['idmoneda'] == '1') {
                            $moneda = 'S/';
                        }
                        if ($data[$p][$i]['idmoneda'] == '2') {
                            $moneda = 'US $';
                        }
                        if ($subtotalFactura_soles > 0) {
                            $percepcion_soles = $percepcion_soles;
                            $porcentaje_percepcion_soles = $data[$p][$i]['percepcion'] * 100;
                            $porcentaje_percepcion_soles = $porcentaje_percepcion_soles . '%';
                        } else {
                            $percepcion_soles = 0.00;
                            $porcentaje_percepcion_soles = '';
                        }
                        if ($subtotalFactura_dolares > 0) {
                            $percepcion_dolares = $percepcion_dolares;
                            $porcentaje_percepcion_dolares = $data[$p][$i]['percepcion'] * 100;
                            $porcentaje_percepcion_dolares = $porcentaje_percepcion_dolares . '%';
                        } else {
                            $percepcion_dolares = 0.00;
                            $porcentaje_percepcion_dolares = '';
                        }
                        $nro_aumentador = $nro_aumentador + 1;
                        if ($data[$p][$i]['idmoneda'] == '1') {
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $nro_aumentador);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), $data[$p][$i]['fordenventa']);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), $data[$p][$i]['codigov']);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), $data[$p][$i]['razonsocial']);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $ruc_dni);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), $moneda . ' ' . number_format($importeGuia_soles, 2));
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), $estado_ov);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), $serieGRemision . '-' . $numGRemision);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), $comprobanteFactura);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), $moneda . ' ' . number_format($subtotalFactura_soles, 2));
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), $moneda . ' ' . number_format($igvFactura_soles, 2));
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), $moneda . ' ' . number_format($percepcion_soles, 2));
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), $porcentaje_percepcion_soles);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('N' . ($contador), $comprobanteBoleta);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), $moneda . ' ' . number_format($biBoleta_soles, 2));
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('P' . ($contador), $estadoComprobante);
                            $contador ++;
                        }
                        if ($data[$p][$i]['idmoneda'] == '2') {
                            //***********************
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $nro_aumentador);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), $data[$p][$i]['fordenventa']);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), $data[$p][$i]['codigov']);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), $data[$p][$i]['razonsocial']);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $ruc_dni);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), $moneda . ' ' . number_format($importeGuia_dolares, 2));
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), $estado_ov);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), $serieGRemision . '-' . $numGRemision);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), $comprobanteFactura);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), $moneda . ' ' . number_format($subtotalFactura_dolares, 2));
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), $moneda . ' ' . number_format($igvFactura_dolares, 2));
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), $moneda . ' ' . number_format($percepcion_dolares, 2));
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), $porcentaje_percepcion_dolares);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('N' . ($contador), $comprobanteBoleta);
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), $moneda . ' ' . number_format($biBoleta_dolares, 2));
                            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('P' . ($contador), $estadoComprobante);
                            $contador ++;
                        }
                        $entro_a = 'false';
                    }
                }
                $idclienteTemp = $data[$p][$i]['idcliente'];
            }
        }
        $sum_importeGuia_soles_cliente = 0;
        $sum_subtotalFactura_soles_cliente = 0;
        $sum_igvFactura_soles_cliente = 0;
        $sum_percepcion_soles_cliente = 0;
        $sum_biBoleta_soles_cliente = 0;
        $sum_importeGuia_dolares_cliente = 0;
        $sum_subtotalFactura_dolares_cliente = 0;
        $sum_igvFactura_dolares_cliente = 0;
        $sum_percepcion_dolares_cliente = 0;
        $sum_biBoleta_dolares_cliente = 0;

        $puntero_anterior = count($totalesporcliente) - 1;
        $idcliente_anterior = $totalesporcliente[$puntero_anterior]['idcliente'];
        foreach ($totalesporcliente as $v) {
            if ($idcliente_anterior == $v['idcliente']) {
                $sum_importeGuia_soles_cliente = $sum_importeGuia_soles_cliente + $v['sum_importeGuia_soles'];
                $sum_subtotalFactura_soles_cliente = $sum_subtotalFactura_soles_cliente + $v['sum_subtotalFactura_soles'];
                $sum_igvFactura_soles_cliente = $sum_igvFactura_soles_cliente + $v['sum_igvFactura_soles'];
                $sum_percepcion_soles_cliente = $sum_percepcion_soles_cliente + $v['sum_percepcion_soles'];
                $sum_biBoleta_soles_cliente = $sum_biBoleta_soles_cliente + $v['sum_biBoleta_soles'];
                $sum_importeGuia_dolares_cliente = $sum_importeGuia_dolares_cliente + $v['sum_importeGuia_dolares'];
                $sum_subtotalFactura_dolares_cliente = $sum_subtotalFactura_dolares_cliente + $v['sum_subtotalFactura_dolares'];
                $sum_igvFactura_dolares_cliente = $sum_igvFactura_dolares_cliente + $v['sum_igvFactura_dolares'];
                $sum_percepcion_dolares_cliente = $sum_percepcion_dolares_cliente + $v['sum_percepcion_dolares'];
                $sum_biBoleta_dolares_cliente = $sum_biBoleta_dolares_cliente + $v['sum_biBoleta_dolares'];
            }
        }
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':E' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedSUBTITULO, "A" . ($contador) . ":E" . ($contador));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), 'MONTO SOLES S/:');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), 'S/ ' . number_format($sum_importeGuia_soles_cliente, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), '');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), '');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), '');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), 'S/ ' . number_format($sum_subtotalFactura_soles_cliente, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), 'S/ ' . number_format($sum_igvFactura_soles_cliente, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), 'S/ ' . number_format($sum_percepcion_soles_cliente, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), '');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('N' . ($contador), '');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), 'S/ ' . number_format($sum_biBoleta_soles_cliente, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('P' . ($contador), '');
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':E' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedSUBTITULO, "A" . ($contador) . ":E" . ($contador));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), 'MONTO SOLES S/:');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), 'US $ ' . number_format($sum_importeGuia_dolares_cliente, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), '');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), '');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), '');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), 'US $ ' . number_format($sum_subtotalFactura_dolares_cliente, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), 'US $ ' . number_format($sum_igvFactura_dolares_cliente, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), 'US $ ' . number_format($sum_percepcion_dolares_cliente, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('M' . ($contador), '');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('N' . ($contador), '');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), 'US $ ' . number_format($sum_biBoleta_dolares_cliente, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('P' . ($contador), '');
        $contador ++;

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":P" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedValorCentro, "A" . ($contador) . ":P" . ($contador));
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':P' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), 'TOTALES');

        $contador++;
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':E' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':I' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('M' . $contador . ':N' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), 'S/ ' . number_format($sum_importeGuia_soles, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), 'S/ ' . number_format($sum_subtotalFactura_soles, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), 'S/ ' . number_format($sum_igvFactura_soles, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), 'S/ ' . number_format($sum_percepcion_soles, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), 'S/ ' . number_format($sum_biBoleta_soles, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('P' . ($contador), '');
        $contador++;
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':E' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':I' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('M' . $contador . ':N' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), 'US $ ' . number_format($sum_importeGuia_dolares, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), 'US $ ' . number_format($sum_subtotalFactura_dolares, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), 'US $ ' . number_format($sum_igvFactura_dolares, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('L' . ($contador), 'US $ ' . number_format($sum_percepcion_dolares, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('O' . ($contador), 'US $ ' . number_format($sum_biBoleta_dolares, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('P' . ($contador), '');

        $contador++;
        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedValorCentro, "D" . ($contador) . ":E" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("C" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':C' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), '');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), 'SOLES');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), 'DOLARES');
        $contador++;
        $objPHPExcel->getActiveSheet()->getStyle("B" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("B" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':C' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), 'TOTAL EN GUIAS MADRES');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), 'S/ ' . number_format($sum_importeGuia_soles, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), 'US $ ' . number_format($sum_importeGuia_dolares, 2));
        $contador++;
        $objPHPExcel->getActiveSheet()->getStyle("B" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("B" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':C' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), 'TOTAL FACTURADO DE LAS GUIAS MADRES');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), 'S/ ' . number_format($sum_subtotalFactura_soles + $sum_igvFactura_soles, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), 'US $ ' . number_format($sum_subtotalFactura_dolares + $sum_igvFactura_dolares, 2));
        $contador++;
        $objPHPExcel->getActiveSheet()->getStyle("B" . ($contador) . ":E" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("B" . ($contador) . ":E" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('B' . $contador . ':C' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), 'TOTAL BOLETEADO DE LAS GUIAS MADRES');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), 'S/ ' . number_format($sum_biBoleta_soles, 2));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), 'US $ ' . number_format($sum_biBoleta_dolares, 2));
        $objPHPExcel->getActiveSheet()->setTitle('RANKING CLIENTE CONTA');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    public function formatoInventario() {
        $reporte = $this->AutoLoadModel('reporte');
        $bloques = $this->AutoLoadModel('bloques');
        $idInventario = $_REQUEST['lstInventario'];
        $idBloque = $_REQUEST['lstBloques'];
        $idProducto = $_REQUEST['idProducto'];
        $lstStock = $_REQUEST['lstStock'];
        $numeroInventario = $_REQUEST['txtNumeroInventario'];
        $formatoparaconteo = $_REQUEST['chkformatoparaconteo'];
        if ($formatoparaconteo) {
            $formatoparaconteo = 1;
        } else {
            $formatoparaconteo = 0;
        }
        if ($numeroInventario == "") {
            $numeroInventario = "___________";
        }
        if ($_REQUEST['lstConteo'] == 1) {
            $msmConteoX = "CONTEO 1";
        }
        if ($_REQUEST['lstConteo'] == 2) {
            $msmConteoX = "CONTEO 2";
        }
        if ($_REQUEST['lstConteo'] == 3) {
            $msmConteoX = "CONTEO 3";
        }
        $contador2 = 1;
        $contador = 0;
        $data = $reporte->reporteInventario($idInventario, $idBloque, $idProducto, $lstStock);
        $cantidadData = count($data);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'formatoInventario.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        if ($formatoparaconteo == 1) {
            $titulos = array(utf8_decode('N°'), 'CODIGO', 'DESCRIPCION', 'U.M', $msmConteoX, 'MERMA', 'PARA REPARAR', 'SHOW ROOM', 'OBSERVACIONES');
        } else {
            $titulos = array(utf8_decode('N°'), 'CODIGO', 'DESCRIPCION', 'U.M', 'Conteo Final', 'MERMA', 'PARA REPARAR', 'SHOW ROOM', 'OBSERVACIONES');
        }
        $listadoBloque = $bloques->listarBloqueFormato($idBloque);
        foreach ($listadoBloque as $v) {
            $nombreBloque = $v['codigo'];
        }
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('rgb' => 'FFFFFFFF')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $contador = 0;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':I' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":I" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "FORMATO DE INVENTARIO # " . $numeroInventario . " || BLOQUE Y/O ANAQUEL    " . $nombreBloque . "      " . $msmConteoX);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador = $contador + 3;
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $titulos[0])
                ->setCellValue('B' . ($contador), $titulos[1])
                ->setCellValue('C' . ($contador), $titulos[2])
                ->setCellValue('D' . ($contador), $titulos[3])
                ->setCellValue('E' . ($contador), $titulos[4])
                ->setCellValue('F' . ($contador), $titulos[5])
                ->setCellValue('G' . ($contador), $titulos[6])
                ->setCellValue('H' . ($contador), $titulos[7])
                ->setCellValue('I' . ($contador), $titulos[8]);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":I" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFill()->setRotation(1);
        $contador ++;
        if ($cantidadData >= 1) {
            for ($i = 0; $i < $cantidadData; $i++) {
                $bloqueA = $data[$i - 1]['idbloque'];
                if ($formatoparaconteo == 1) {
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $contador2);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), html_entity_decode($data[$i]['codigopa'], ENT_QUOTES, 'UTF-8'));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), html_entity_decode($data[$i]['nompro'], ENT_QUOTES, 'UTF-8'));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), $data[$i]['codigoum']);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), '');
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), '');
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), '');
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), '');
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), '');
                    $contador ++;
                } else {
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $contador2);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), html_entity_decode($data[$i]['codigopa'], ENT_QUOTES, 'UTF-8'));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), html_entity_decode($data[$i]['nompro'], ENT_QUOTES, 'UTF-8'));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), $data[$i]['codigoum']);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $data[$i]['stockinventario']);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), '');
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), '');
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), '');
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), '');
                    $contador ++;
                }
                $contador2 = $contador2 + 1;
                $filasFantasma = 41;
            }
        }

        $contador++;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':I' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":I" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "Fecha Impresion : " . date('Y-m-d h:m:s'));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->setTitle('Formato Para Inventario');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);
        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();

        readfile($filename);
        unlink($filename);
    }

    public function reposiciondeitems() {
        set_time_limit(1800);
        $idproducto = $_REQUEST['idProducto'];
        $reporte = $this->AutoLoadModel('reporte');
        $soloCompras = $reporte->reporteKardexProduccionDetallado("", "", $idproducto, 1, "", "m.idordencompra!=''");
        $tamSoloCompras = count($soloCompras);
        $fechaInicioMovimiento = '';
        for ($sci = 0; $sci < $tamSoloCompras; $sci++) {
            $fechaInicioMovimiento = $soloCompras[0]['fecha'];
            $dataCompra[$sci]['idordencompra'] = $soloCompras[$sci]['idordencompra'];
            $dataCompra[$sci]['codigooc'] = $soloCompras[$sci]['codigooc'];
            $dataCompra[$sci]['fcompra'] = $soloCompras[$sci]['fecha'];
            $dataCompra[$sci]['fultimaagotado'] = '';
            $dataCompra[$sci]['fultimaventa'] = '';
            $dataCompra[$sci]['cantidad'] = $soloCompras[$sci]['cantidad'];
            $dataCompra[$sci]['cantidadvendida'] = 0;
        }
        $auxCompra = 0;
        $tempCantidad = 0;
        $productos = $reporte->reporteKardexProduccionDetallado2($idproducto, $fechaInicioMovimiento);
        $totalventaproducto = 0;
        $totaldevoluciones = 0;
        for ($y = 0; $y < count($productos) && isset($dataCompra[$auxCompra]['codigooc']); $y++) {
            if (empty($productos[$y]['cantidaddevolucion'])) {
                $productos[$y]['cantidaddevolucion'] = 0;
            }
            if ($productos[$y]['conceptomovimiento'] == "01") {
                $totaldevoluciones += $productos[$y]['cantidaddevolucion'];
                $totalventaproducto += $productos[$y]['cantidad'];
                $tempCantidad += $productos[$y]['cantidad'] - $productos[$y]['cantidaddevolucion'];
                $dataCompra[$auxCompra]['fultimaventa'] = $productos[$y]['fecha'];
            } else {
                if ($productos[$y]['tipomovimiento'] == 1) {
                    $totaldevoluciones += $productos[$y]['cantidaddevolucion'];
                    $totalventaproducto += $productos[$y]['cantidad'];
                    $tempCantidad -= $productos[$y]['cantidad'];
                } else {
                    $tempCantidad += $productos[$y]['cantidad'];
                }
            }
            if ($tempCantidad <= $dataCompra[$auxCompra]['cantidad']) {
                $dataCompra[$auxCompra]['cantidadvendida'] = $tempCantidad;
            } else {
                $dataCompra[$auxCompra]['cantidadvendida'] = $dataCompra[$auxCompra]['cantidad'];
            }
            if (isset($dataCompra[$auxCompra]['codigooc']) && $tempCantidad >= $dataCompra[$auxCompra]['cantidad']) {
                $dataCompra[$auxCompra]['fultimaagotado'] = $productos[$y]['fecha'];
                $dataCompra[$auxCompra]['fultimaagotado'] = $productos[$y]['fecha'];
                $tempCantidad = $tempCantidad - $dataCompra[$auxCompra]['cantidad'];
                $auxCompra++;
                if (isset($dataCompra[$auxCompra]['codigooc'])) {
                    $dataCompra[$auxCompra]['cantidadvendida'] = $tempCantidad;
                }
            }
        }
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reporteestadisticoreposiciondeitems.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAECECC')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );
        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );
        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );
        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );
        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $contador = 1;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':I' . $contador);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":I" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "REPORTE ESTADISTICO REPOSICION DE ITEMS");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;
        $contador++;
        $producto = $this->AutoLoadModel('producto');
        $dataProducto = $producto->buscaProducto($idproducto);
        if (count($dataProducto) > 0) {
            if ($auxCompra > 0) {
                $auxCompra--;
            }
            $stockfaltante = 0;
            for ($sci = $auxCompra; $sci < $tamSoloCompras; $sci++) {
                $stockfaltante += $dataCompra[$sci]['cantidad'] - $dataCompra[$sci]['cantidadvendida'];
            }
            if ($stockfaltante > $dataProducto[0]['stockactual']) {
                $stockfaltante = $stockfaltante - $dataProducto[0]['stockactual'];
                for ($sci = $auxCompra; $sci < $tamSoloCompras && $stockfaltante > 0; $sci++) {
                    if ($dataCompra[$sci]['cantidadvendida'] != $dataCompra[$sci]['cantidad']) {
                        $dataCompra[$sci]['cantidadvendida'] += $stockfaltante;
                        if ($dataCompra[$sci]['cantidadvendida'] >= $dataCompra[$sci]['cantidad']) {
                            $stockfaltante = $dataCompra[$sci]['cantidadvendida'] - $dataCompra[$sci]['cantidad'];
                            $dataCompra[$sci]['cantidadvendida'] = $dataCompra[$sci]['cantidad'];
                            if (!empty($dataCompra[$sci]['fultimaventa'])) {
                                $dataCompra[$sci]['fultimaagotado'] = $dataCompra[$sci]['fultimaventa'];
                            }
                        } else {
                            $stockfaltante = 0;
                        }
                    }
                }
            }
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':C' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('D' . $contador . ':E' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':I' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "D" . ($contador) . ":I" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "PRODUCTO: ")
                    ->setCellValue('D' . ($contador), $dataProducto[0]['codigopa'])
                    ->setCellValue('F' . ($contador), html_entity_decode(trim($dataProducto[0]['nompro']), ENT_QUOTES, 'UTF-8'));
            $contador++;
            $contador++;
        }

        if ($tamSoloCompras > 0) {
            $detalleOrdenCompra = $this->AutoLoadModel('detalleordencompra');
            $data['porcifventas'] = $this->configIni('Parametros', 'PorCifVentas');
            $porcentaje = (($data['porcifventas'] + 100) / 100);
            $cantidad = count($dataCompra);
            for ($z = $cantidad - 1; $z >= 0; $z--) {
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':C' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('D' . $contador . ':E' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':I' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "F" . ($contador) . ":F" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "D" . ($contador) . ":E" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "G" . ($contador) . ":I" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("F" . ($contador) . ":F" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "ORDEN COMPRA: ")
                        ->setCellValue('D' . ($contador), $dataCompra[$z]['codigooc'])
                        ->setCellValue('F' . ($contador), "FECHA COMPRA: ")
                        ->setCellValue('G' . ($contador), $dataCompra[$z]['fcompra']);

                $contador++;
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($contador) . ":I" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "QTY")
                        ->setCellValue('B' . ($contador), "FOB")
                        ->setCellValue('C' . ($contador), "PV")
                        ->setCellValue('D' . ($contador), "%")
                        ->setCellValue('E' . ($contador), "STOCK A LA FECHA")
                        ->setCellValue('F' . ($contador), "FECHA AGOTADO")
                        ->setCellValue('G' . ($contador), "TIEMPO DE AGOTAMIENTO")
                        ->setCellValue('H' . ($contador), "ULT. FECHA VENTA")
                        ->setCellValue('I' . ($contador), "TIEMPO DE VENTA");

                $precioVenta = 0;
                $fob = 0;
                $utilidadReal = 0;
                $dataDetalleordenCompra = $detalleOrdenCompra->listaDetalleOrdenCompraxproducto($dataCompra[$z]['idordencompra'], $idproducto);
                if (count($dataDetalleordenCompra) > 0) {
                    if ($dataDetalleordenCompra[0]['precio_listadolares'] > 0) {
                        $preciolistaDolares = $dataDetalleordenCompra[0]['precio_listadolares'];
                    } else {
                        $preciolistaDolares = $dataDetalleordenCompra[0]['preciolista'] / $dataDetalleordenCompra[0]['tipocambiovigenteoc'];
                    }
                    
                    $descuento13 = $preciolistaDolares - ($preciolistaDolares * 0.13);
                    $descuento5 = $descuento13 - ($descuento13 * 0.05);
                    $descuento95 = $descuento5 - ($descuento5 * 0.095);
                    $precioVenta = $descuento95 - ($descuento95 * 0.05);
                    $fob = $dataDetalleordenCompra[0]['fobdoc'];
                    $cifventas = $dataDetalleordenCompra[0]['fobdoc'] * $porcentaje;
                    $utilidadReal = (($precioVenta - $cifventas) / $cifventas) * 100;
                }
                $contador++;

                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":I" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $dataCompra[$z]['cantidad'])
                        ->setCellValue('B' . ($contador), 'US $ ' . number_format($fob, 2))
                        ->setCellValue('C' . ($contador), 'US $ ' . number_format($precioVenta, 2))
                        ->setCellValue('D' . ($contador), number_format($utilidadReal, 1) . "%")
                        ->setCellValue('E' . ($contador), ($dataCompra[$z]['cantidad'] - $dataCompra[$z]['cantidadvendida']))
                        ->setCellValue('F' . ($contador), (!empty($dataCompra[$z]['fultimaagotado']) ? $dataCompra[$z]['fultimaagotado'] : '-'))
                        ->setCellValue('G' . ($contador), (!empty($dataCompra[$z]['fultimaagotado']) ? ($detalleOrdenCompra->cantidad_dias_entre_dos_fechas($dataCompra[$z]['fcompra'], $dataCompra[$z]['fultimaagotado'])) . ' dias' : '-'))
                        ->setCellValue('H' . ($contador), (!empty($dataCompra[$z]['fultimaventa']) ? $dataCompra[$z]['fultimaventa'] : '-'))
                        ->setCellValue('I' . ($contador), (!empty($dataCompra[$z]['fultimaventa']) ? ($detalleOrdenCompra->cantidad_dias_entre_dos_fechas($dataCompra[$z]['fcompra'], $dataCompra[$z]['fultimaventa'])) . ' dias' : '-'));
                $contador++;
                $contador++;
            }
        }
        $objPHPExcel->getActiveSheet()->setTitle('REP. EST. REPO. ITEMS');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    public function reporteProductosBloque() {
        $reporte = $this->AutoLoadModel('reporte');
        $bloques = $this->AutoLoadModel('bloques');
        $idInventario = $_REQUEST['lstInventario'];
        $idBloque = $_REQUEST['lstBloques'];
        $idProducto = $_REQUEST['idProducto'];
        $cmbCondicionStock = $_REQUEST['cmbCondicionStock'];
        IF ($cmbCondicionStock == 1) {
            $msmConteoX = "CON STOCK";
        }
        IF ($cmbCondicionStock == 2) {
            $msmConteoX = "SIN STOCK";
        }
        IF ($cmbCondicionStock == 3) {
            $msmConteoX = "CON Y SIN STOCK";
        }
        $contador = 0;
        $data = $reporte->reporteInventario($idInventario, $idBloque, '');
        $cantidadData = count($data);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'formatoInventario.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $titulos = array(utf8_decode('N°'), 'CODIGO', 'DESCRIPCION', 'U.M.', 'STOCK ACTUAL', 'OBSERVACIONES');
        $listadoBloque = $bloques->listarBloqueFormato($idBloque);
        foreach ($listadoBloque as $v) {
            $nombreBloque = $v['codigo'];
        }
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );
        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );
        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('rgb' => 'FFFFFFFF')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER
            ))
        );
        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $contador = 0;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':F' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":F" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "REPORTE DE PRODUCTOS POR BLOQUE O ANAQUEL " . '   [ ' . $nombreBloque . ' ]  ' . $msmConteoX);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':F' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":F" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "EL STOCK REFLEJADO PERTENECE AL MOMENTO EN QUE SE EXPORTO ESTE REPORTE DEL SISTEMA");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':F' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":F" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "Fecha Impresion : " . date('Y-m-d h:m:s'));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador = $contador + 3;
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $titulos[0])
                ->setCellValue('B' . ($contador), $titulos[1])
                ->setCellValue('C' . ($contador), $titulos[2])
                ->setCellValue('D' . ($contador), $titulos[3])
                ->setCellValue('E' . ($contador), $titulos[4])
                ->setCellValue('F' . ($contador), $titulos[5]);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":F" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":F" . ($contador))->getFill()->setRotation(1);
        $contador ++;

        $contador2 = 1;
        if ($cantidadData >= 1) {
            for ($i = 0; $i < $cantidadData; $i++) {
                if ($cmbCondicionStock == 1) {
                    if ($data[$i]['stockactual_wc_producto'] >= 1) {
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $contador2);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), html_entity_decode($data[$i]['codigopa'], ENT_QUOTES, 'UTF-8'));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), html_entity_decode($data[$i]['nompro'], ENT_QUOTES, 'UTF-8'));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), $data[$i]['codigoum']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $data[$i]['stockactual_wc_producto']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), '');
                        $contador ++;
                        $contador2 = $contador2 + 1;
                    }
                }
                if ($cmbCondicionStock == 2) {
                    if ($data[$i]['stockactual_wc_producto'] <= 0) {
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $contador2);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), html_entity_decode($data[$i]['codigopa'], ENT_QUOTES, 'UTF-8'));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), html_entity_decode($data[$i]['nompro'], ENT_QUOTES, 'UTF-8'));
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), $data[$i]['codigoum']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $data[$i]['stockactual_wc_producto']);
                        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), '');
                        $contador ++;
                        $contador2 = $contador2 + 1;
                    }
                }
                if ($cmbCondicionStock == 3) {
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $contador2);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), html_entity_decode($data[$i]['codigopa'], ENT_QUOTES, 'UTF-8'));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), html_entity_decode($data[$i]['nompro'], ENT_QUOTES, 'UTF-8'));
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), $data[$i]['codigoum']);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $data[$i]['stockactual_wc_producto']);
                    $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), '');
                    $contador ++;
                    $contador2 = $contador2 + 1;
                }
            }
        }
        $contador++;
        $objPHPExcel->getActiveSheet()->setTitle("REPORTE DE PRODUCTOS POR BLOQUE");
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    public function letrassinenviaralbanco() {
        set_time_limit(1500);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reporte_detalladodeletras.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $get_condiciones = $_REQUEST['txtCondiciones'];
        $get_txtFechaInicio = !empty($_REQUEST['txtFechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaInicio'])) : null;
        $get_txtFechaFin = !empty($_REQUEST['txtFechaFinal']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaFinal'])) : date('Y-m-d');
        $get_lstPrincipal = $_REQUEST['lstCategoriaPrincipal'];
        $get_lstCategoria = $_REQUEST['lstCategoria'];
        $get_lstZona = $_REQUEST['lstZona'];
        $get_lstMoneda = $_REQUEST['lstMoneda'];
        $get_idcliente = $_REQUEST['idCliente'];
        $get_idVendedor = $_REQUEST['idVendedor'];
        $nombrecliente = "-";
        if (!empty($get_idcliente)) {
            $clientemodel = $this->AutoLoadModel('cliente');
            $dataCliente = $clientemodel->listadoxFiltro("idcliente='$IdCliente'");
            $nombrecliente = $dataCliente[0]['razonsocial'];
        }
        $nombredevendedor = '-';
        if (!empty($get_idVendedor)) {
            $vendedor = new Actor();
            $reg = $vendedor->buscarxid($get_idVendedor);
            $nombredevendedor = $reg[0]['nombres'] . " " . $reg[0]['apellidopaterno'];
        }
        $get_txt2FechaInicio = ($get_txtFechaInicio == "") ? "Desde el prinicipio" : $get_txtFechaInicio;
        $get_txt2FechaFin = ($get_txtFechaFin == "") ? "Hasta el fin" : $get_txtFechaFin;
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $titulos = array('Nro', 'Padre', 'Monto', 'Saldo', 'Condicion', 'Nro Letra', 'Fecha Giro', 'F. Vencimiento', 'F. Pago', 'Situacion', 'Recepcion Letra');
        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_LEFT,
            ))
        );

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
            ))
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('N')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('O')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('P')->setAutoSize(true);
        $contador = 1;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':P' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":P" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "REPORTE DETALLADO DE LETRAS SIN ENVIAR AL BANCO");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        //start cabecera
        $contador++;
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':P' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":P" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $get_condiciones);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('D' . $contador . ':E' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':G' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('H' . $contador . ':I' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . $contador . ':P' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "C" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "D" . ($contador) . ":E" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "F" . ($contador) . ":G" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "H" . ($contador) . ":I" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "J" . ($contador) . ":P" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "FECHA DESDE: ")
                ->setCellValue('C' . ($contador), $get_txt2FechaInicio)
                ->setCellValue('D' . ($contador), "FECHA HASTA: ")
                ->setCellValue('F' . ($contador), $get_txt2FechaFin)
                ->setCellValue('H' . ($contador), "FECHA REPORTE: ")
                ->setCellValue('J' . ($contador), date('Y-m-d'));
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('D' . $contador . ':E' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':I' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "C" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "D" . ($contador) . ":E" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "F" . ($contador) . ":I" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "CLIENTE: ")
                ->setCellValue('C' . ($contador), $nombrecliente)
                ->setCellValue('D' . ($contador), "VENDEDOR: ")
                ->setCellValue('F' . ($contador), $nombredevendedor);
        $contador++;
        $saldoSinPaSoles = 0;
        $saldoSinPaDolares = 0;
            
        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":P" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "NRO")
                ->setCellValue('B' . ($contador), "RUC")
                ->setCellValue('C' . ($contador), "CLIENTE")
                ->setCellValue('D' . ($contador), "VENDEDOR")
                ->setCellValue('E' . ($contador), "DEPARTAMENTO")
                ->setCellValue('F' . ($contador), "DISTRITO")
                ->setCellValue('G' . ($contador), "DIRECCION")
                ->setCellValue('H' . ($contador), "ORD. VENTA")
                ->setCellValue('I' . ($contador), "FECHA VENTA")
                ->setCellValue('J' . ($contador), "FECHA EMISION")
                ->setCellValue('K' . ($contador), "F. VENCIMIENTO")
                ->setCellValue('L' . ($contador), "F. DESPACHO")
                ->setCellValue('M' . ($contador), "LETRA")
                ->setCellValue('N' . ($contador), "SITUACION")
                ->setCellValue('O' . ($contador), "S/")
                ->setCellValue('P' . ($contador), "$");
        $contador++;
        //AQUI ME QUEDÉ
        $reporte = $this->AutoLoadModel('reporte');
        $listado = $reporte->listadoLetrassinenviaralbanco($get_txtFechaInicio, $get_txtFechaFin, $get_lstPrincipal, $get_lstCategoria, $get_lstZona, $get_lstMoneda, $get_idcliente, $get_idVendedor);
        $tam = count($listado);
        for ($i = 0; $i < $tam; $i++) {
            if ($listado[$i]['idmoneda'] == 1) {
                $saldoSinPaSoles += $listado[$i]['importedoc'];
            } else if ($listado[$i]['idmoneda'] == 2) {
                $saldoSinPaDolares += $listado[$i]['importedoc'];
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($contador) . ":A" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "B" . ($contador) . ":B" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle4, "C" . ($contador) . ":F" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "G" . ($contador) . ":L" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "M" . ($contador) . ":P" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":P" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $listado[$i]['iddetalleordencobro'])
                    ->setCellValue('B' . ($contador), $listado[$i]['ruc'])
                    ->setCellValue('C' . ($contador), $listado[$i]['razonsocial'])
                    ->setCellValue('D' . ($contador), $listado[$i]['vendedor'])
                    ->setCellValue('E' . ($contador), $listado[$i]['nombredepartamento'])
                    ->setCellValue('F' . ($contador), $listado[$i]['nombredistrito'])
                    ->setCellValue('G' . ($contador), $listado[$i]['direccion'])
                    ->setCellValue('H' . ($contador), $listado[$i]['codigov'])
                    ->setCellValue('I' . ($contador), $listado[$i]['fordenventa'])
                    ->setCellValue('J' . ($contador), $listado[$i]['fechagiro'])
                    ->setCellValue('K' . ($contador), $listado[$i]['fvencimiento'])
                    ->setCellValue('L' . ($contador), $listado[$i]['fechadespacho'])
                    ->setCellValue('M' . ($contador), $listado[$i]['numeroletra'])
                    ->setCellValue('N' . ($contador), (!empty($listado[$i]['situacion']) ? $listado[$i]['situacion'] : 'Pendiente'))
                    ->setCellValue('O' . ($contador), ($listado[$i]['idmoneda'] == 1 ? 'S/ ' . $listado[$i]['importedoc'] : '-'))
                    ->setCellValue('P' . ($contador), ($listado[$i]['idmoneda'] == 2 ? 'US $ ' . $listado[$i]['importedoc'] : '-'));
            $contador++;
        }
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('H' . $contador . ':N' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "H" . ($contador) . ":N" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "O" . ($contador) . ":P" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("H" . ($contador) . ":P" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('H' . ($contador), "MONTOS TOTALES:")
                ->setCellValue('O' . ($contador), "S/ " . number_format($saldoSinPaSoles, 2))
                ->setCellValue('P' . ($contador), "US $ " . number_format($saldoSinPaDolares, 2));
        $objPHPExcel->getActiveSheet()->setTitle('Letras_Sin_PA');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    public function reportePowerAcoustik() {
        set_time_limit(1500);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reporte_detalladodeempresa.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $get_txtFechaInicio = !empty($_REQUEST['txtFechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaInicio'])) : null;
        $get_txtFechaFin = !empty($_REQUEST['txtFechaFin']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaFin'])) : date('Y-m-d');
        $get_lstMoneda = $_REQUEST['lstMoneda'];
        $get_txt2FechaInicio = ($get_txtFechaInicio == "") ? "Desde el prinicipio" : $get_txtFechaInicio;
        $get_txt2FechaFin = ($get_txtFechaFin == "") ? "Hasta el fin" : $get_txtFechaFin;
        $cmtEtapa = $_REQUEST['lstEtapa'];
        $mensaje = $get_txt2FechaInicio . ' al ' . $get_txt2FechaFin;
        $reporte = $this->AutoLoadModel('reporte');
        $ordenGasto = $this->AutoLoadModel('ordengasto');
        $data = $reporte->resumenEmpresas($cmtEtapa, $get_txtFechaInicio, $get_txtFechaFin, $get_lstMoneda, 'si');

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $titulos = array('N°', 'ORDEN DE VENTA', 'FECHA PEDIDO', 'FECHA DESPACHO', 'FECHA VENCIMIENTO', 'CLIENTE', 'MONTO TOTAL', 'MONTO PAGADO', 'MONTO PENDIENTE', 'DEUDA', 'FORMA PAGO');
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('rgb' => 'FFFFFFFF')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $contador = 0;
        $contador++;
        
        $complementotitulo = "";
        if ($cmtEtapa == 1) {
            $complementotitulo = " ANTES DE LA PANDEMIA";
        } else if ($cmtEtapa == 2) {
            $complementotitulo = " DESPUES DE LA PANDEMIA";
        }
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':K' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), " REPORTE DE MUESTRA GENERAL " . $mensaje . $complementotitulo);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador = $contador + 3;
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $titulos[0])
                ->setCellValue('B' . ($contador), $titulos[1])
                ->setCellValue('C' . ($contador), $titulos[2])
                ->setCellValue('D' . ($contador), $titulos[3])
                ->setCellValue('E' . ($contador), $titulos[4])
                ->setCellValue('F' . ($contador), $titulos[5])
                ->setCellValue('G' . ($contador), $titulos[6])
                ->setCellValue('H' . ($contador), $titulos[7])
                ->setCellValue('I' . ($contador), $titulos[8])
                ->setCellValue('J' . ($contador), $titulos[9])
                ->setCellValue('K' . ($contador), $titulos[10]);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
        $contador ++;
        $filas = 0;
        for ($i = 0; $i < count($data); $i++) {
            switch ($data[$i]['formacobro']) {
                case '1': $formacobro = "Contado";
                    break;
                case '2': $formacobro = "Crédito";
                    break;
                case '3': $formacobro = "Letras";
                    break;
            }
            if ($data[$i]['idmoneda'] == 2) {
                $moneda = 'US $ ';
                $total_dolares_deuda = $total_dolares_deuda + $data[$i]['saldoordencobro'];
            }
            if ($data[$i]['idmoneda'] == 1) {
                $moneda = 'S/. ';
                $total_soles_deuda = $total_soles_deuda + $data[$i]['saldoordencobro'];
            }
            $filas = $filas + 1;
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $filas);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), $data[$i]['codigov']);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), $data[$i]['fordenventa']);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), $data[$i]['fechadespacho']);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $data[$i]['fechavencimiento']);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), html_entity_decode($data[$i]['razonsocial'], ENT_QUOTES, 'UTF-8'));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), $moneda . ' ' . number_format($data[$i]['importeordencobro'], 2));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), $moneda . ' ' . number_format(($data[$i]['importeordencobro'] - $data[$i]['saldoordencobro']), 2));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), $moneda . ' ' . number_format($data[$i]['saldoordencobro'], 2));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), $moneda . ' ' . number_format($data[$i]['saldoordencobro'], 2));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('K' . ($contador), $formacobro);
            $contador ++;
        }
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), 'TOTAL S/. ');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), 'S/. ' . $total_soles_deuda);
        $contador ++;
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('I' . ($contador), 'TOTAL US $ ');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('J' . ($contador), 'US $ ' . $total_dolares_deuda);
        $contador ++;
        $objPHPExcel->getActiveSheet()->setTitle('Power Acoustik');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);
        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    public function letrassinenviaralbancoevaluacion() {
        set_time_limit(1500);
        $estadoevaluacion = $_REQUEST['cmbEvaluacion'];
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reporte_letrasenevaluacion.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $get_condiciones = $_REQUEST['txtCondiciones'];
        $get_txtFechaInicio = !empty($_REQUEST['txtFechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaInicio'])) : '0000-00-00';
        $get_txtFechaFin = !empty($_REQUEST['txtFechaFinal']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaFinal'])) : date('Y-m-d');

        $get_lstPrincipal = $_REQUEST['lstCategoriaPrincipal'];
        $get_lstCategoria = $_REQUEST['lstCategoria'];
        $get_lstZona = $_REQUEST['lstZona'];
        $get_lstMoneda = $_REQUEST['lstMoneda'];
        $get_txt2FechaInicio = ($get_txtFechaInicio == "") ? "Desde el prinicipio" : $get_txtFechaInicio;
        $get_txt2FechaFin = ($get_txtFechaFin == "") ? "Hasta el fin" : $get_txtFechaFin;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $titulos = array('Nro', 'Padre', 'Monto', 'Saldo', 'Condicion', 'Nro Letra', 'Fecha Giro', 'F. Vencimiento', 'F. Pago', 'Situacion', 'Recepcion Letra');
        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_LEFT,
            ))
        );

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
            ))
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $contador = 1;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':K' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "REPORTE DETALLADO DE LETRAS SIN ENVIAR AL BANCO EN EVALUACION");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        //start cabecera
        $contador++;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':K' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $get_condiciones);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('D' . $contador . ':E' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':G' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('H' . $contador . ':I' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . $contador . ':K' . $contador);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "C" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "D" . ($contador) . ":E" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "F" . ($contador) . ":G" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "H" . ($contador) . ":I" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "J" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "FECHA DESDE: ")
                ->setCellValue('C' . ($contador), $get_txt2FechaInicio)
                ->setCellValue('D' . ($contador), "FECHA HASTA: ")
                ->setCellValue('F' . ($contador), $get_txt2FechaFin)
                ->setCellValue('H' . ($contador), "FECHA REPORTE: ")
                ->setCellValue('J' . ($contador), date('Y-m-d'));
        $contador++;
        $saldoSinPaSoles = 0;
        $saldoSinPaDolares = 0;

        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "NRO")
                ->setCellValue('B' . ($contador), "RUC")
                ->setCellValue('C' . ($contador), "CLIENTE")
                ->setCellValue('D' . ($contador), "ORD. VENTA")
                ->setCellValue('E' . ($contador), "FECHA VENTA")
                ->setCellValue('F' . ($contador), "FECHA EMISION")
                ->setCellValue('G' . ($contador), "F. VENCIMIENTO")
                ->setCellValue('H' . ($contador), "LETRA")
                ->setCellValue('I' . ($contador), "SITUACION")
                ->setCellValue('J' . ($contador), "S/")
                ->setCellValue('K' . ($contador), "$");
        $contador++;
        $reporte = $this->AutoLoadModel('reporte');
        $listado = $reporte->listadoLetrassinenviaralbancoevaluacion($get_txtFechaInicio, $get_txtFechaFin, $get_lstPrincipal, $get_lstCategoria, $get_lstZona, $get_lstMoneda, $estadoevaluacion);
        $tam = count($listado);
        for ($i = 0; $i < $tam; $i++) {
            if ($listado[$i]['idmoneda'] == 1) {
                $saldoSinPaSoles += $listado[$i]['importedoc'];
            } else if ($listado[$i]['idmoneda'] == 2) {
                $saldoSinPaDolares += $listado[$i]['importedoc'];
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($contador) . ":A" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "B" . ($contador) . ":B" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle4, "C" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "D" . ($contador) . ":I" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "J" . ($contador) . ":K" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $listado[$i]['iddetalleordencobro'])
                    ->setCellValue('B' . ($contador), $listado[$i]['ruc'])
                    ->setCellValue('C' . ($contador), $listado[$i]['razonsocial'])
                    ->setCellValue('D' . ($contador), $listado[$i]['codigov'])
                    ->setCellValue('E' . ($contador), $listado[$i]['fordenventa'])
                    ->setCellValue('F' . ($contador), $listado[$i]['fechagiro'])
                    ->setCellValue('G' . ($contador), $listado[$i]['fvencimiento'])
                    ->setCellValue('H' . ($contador), $listado[$i]['numeroletra'])
                    ->setCellValue('I' . ($contador), (!empty($listado[$i]['situacion']) ? $listado[$i]['situacion'] : 'Pendiente'))
                    ->setCellValue('J' . ($contador), ($listado[$i]['idmoneda'] == 1 ? 'S/ ' . $listado[$i]['importedoc'] : '-'))
                    ->setCellValue('K' . ($contador), ($listado[$i]['idmoneda'] == 2 ? 'US $ ' . $listado[$i]['importedoc'] : '-'));
            $contador++;
        }
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('D' . $contador . ':I' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "D" . ($contador) . ":I" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "J" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("D" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('D' . ($contador), "MONTOS TOTALES:")
                ->setCellValue('J' . ($contador), "S/ " . number_format($saldoSinPaSoles, 2))
                ->setCellValue('K' . ($contador), "US $ " . number_format($saldoSinPaDolares, 2));
        $objPHPExcel->getActiveSheet()->setTitle('Letras_Sin_PA');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    public function reporteSaldosIniciales() {
        set_time_limit(500);
        $anio = $_REQUEST['cmbAnio'];
        $idproducto = $_REQUEST['idProducto'];
        $filtro1 = $_REQUEST['cmbFiltro1'];
        $positivos_negativos = $_REQUEST['cmb_positivos_negativos'];
        $reporte = new Reporte();
        $data2 = $reporte->listaSaldosIniciales($anio, $idproducto, $filtro1, $positivos_negativos);
        if (strlen($idOrdenCompra) > 0) {
            $codigoocX = $data[0]['codigooc'];
        } else {
            $codigoocX = "";
        }
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reportesaldosiniciales.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $titulos = array('N', 'CODIGO', 'DESCRIPCION', 'FECHA INICIO', 'FECHA FIN', 'SALDO INICIAL', 'SALDO FINAL', 'COSTO UNITARIO');
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('rgb' => 'FFFFFFFF')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $contador = 0;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':H' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":H" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":H" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":H" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "REPORTE SALDOS INICIALES");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':H' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":H" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":H" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":H" . ($contador))->getFill()->setRotation(1);
        $msm_filtro1 = ($filtro1 == 1) ? "simulacro" : "final";

        switch ($positivos_negativos) {
            case 1: $msm_positivos_negativos = "positivos";
                break;
            case 2: $msm_positivos_negativos = "negativos";
                break;
            case 3: $msm_positivos_negativos = "en cero";
                break;

            default: $msm_positivos_negativos = "todos";
        }
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), "AÑO: $anio, Filtro: $msm_filtro1, $msm_positivos_negativos");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador = $contador + 3;
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $titulos[0])
                ->setCellValue('B' . ($contador), $titulos[1])
                ->setCellValue('C' . ($contador), $titulos[2])
                ->setCellValue('D' . ($contador), $titulos[3])
                ->setCellValue('E' . ($contador), $titulos[4])
                ->setCellValue('F' . ($contador), $titulos[5])
                ->setCellValue('G' . ($contador), $titulos[6])
                ->setCellValue('H' . ($contador), $titulos[7]);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":H" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":H" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":H" . ($contador))->getFill()->setRotation(1);
        $contador ++;
        $cont = 0;
        for ($i = 0; $i < count($data2); $i++) {
            if ($data2[$i]["idproducto"] != $idproductoTemp) {
                $contador ++;
            }
            $cont = $cont + 1;
            $fechafin = "-";
            $saldofin = "-";

            if ($data2[$i + 1]["idproducto"] == $data2[$i]["idproducto"]) {
                $fechafin = date("Y-m-d", strtotime($data2[$i + 1]['fechasaldo'] . ' -1 day'));
                $saldofin = $data2[$i + 1]['cantidad1'];
            }
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), $cont);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('B' . ($contador), html_entity_decode($data2[$i]['codigopa'], ENT_QUOTES, 'UTF-8'));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('C' . ($contador), html_entity_decode($data2[$i]['nompro'], ENT_QUOTES, 'UTF-8'));
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('D' . ($contador), $data2[$i]['fechasaldo']);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('E' . ($contador), $fechafin);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('F' . ($contador), $data2[$i]['cantidad1']);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('G' . ($contador), $saldofin);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue('H' . ($contador), $data2[$i]['costounitario']);
            $contador ++;
            $idproductoTemp = $data2[$i]["idproducto"];
        }
        $contador++;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':H' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":H" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":H" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":H" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), '');
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);
        $contador++;
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':H' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":H" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":H" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":H" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A' . ($contador), " " . $data[0]['faproxllegada']);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $objPHPExcel->getActiveSheet()->setTitle('REPORTE SALDOS INICIALES');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    public function reporteventasvencidosvendedor_letras() {
        set_time_limit(1500);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reporte_vencidasvendedorletras.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $get_condiciones = $_REQUEST['txtCondiciones'];
        $get_txtFechaInicio = !empty($_REQUEST['txtFechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaInicio'])) : null;
        $get_txtFechaFin = !empty($_REQUEST['txtFechaFinal']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaFinal'])) : null;
        /* $get_txtFechaInicio = $_REQUEST['txtFechaInicio'];
          $get_txtFechaFin = $_REQUEST['txtFechaFin']; */
        $get_lstEstado = $_REQUEST['lstEstadoLetrass'];
        $get_lstPrincipal = $_REQUEST['lstCategoriaPrincipal'];
        $get_lstCategoria = $_REQUEST['lstCategoria'];
        $get_lstZona = $_REQUEST['lstZona'];
        $get_lstRecepcionLetras = $_REQUEST['lstRecepcionLetras'];
        $get_txtIdCliente = $_REQUEST['txtIdCliente'];
        $get_txtIdVendedor = $_REQUEST['lstvendedor'];
        $get_txtIdOrdenVenta = $_REQUEST['txtIdOrdenVenta'];
        $get_lstMoneda = $_REQUEST['lstMoneda'];
        $get_txt2FechaInicio = ($get_txtFechaInicio == "") ? "Desde el principio" : $get_txtFechaInicio;
        $get_txt2FechaFin = ($get_txtFechaFin == "") ? "Hasta el fin" : $get_txtFechaFin;
        if ($get_lstRecepcionLetras == "") {
            $get_txtlstRecepcionLetras = "TODAS";
        } else if ($get_lstRecepcionLetras == "1") {
            $get_txtlstRecepcionLetras = "ENVIADAS AL BANCO";
        } else if ($get_lstRecepcionLetras == "2") {
            $get_txtlstRecepcionLetras = "SIN ENVIAR AL BANCO";
        } else if ($get_lstRecepcionLetras == "3") {
            $get_txtlstRecepcionLetras = "PRODUCTO";
        } else if ($get_lstRecepcionLetras == "4") {
            $get_txtlstRecepcionLetras = "PROTESTADAS";
        }
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        $titulos = array('Nro', 'Padre', 'Monto', 'Saldo', 'Condicion', 'Nro Letra', 'Fecha Giro', 'F. Vencimiento', 'F. Pago', 'Situacion', 'Recepcion Letra');
        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAECECC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ),
            'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('N')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('O')->setAutoSize(true);

        $contador = 1;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':O' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":O" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "REPORTE - LETRAS " . $FFFF);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "Fecha Exportacion Reporte:")
                ->setCellValue('C' . ($contador), date('Y-m-d'));
        $contador++;
        //start cabecera
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':O' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":O" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $get_condiciones);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':D' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':O' . $contador);

        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":O" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "FECHA DESDE")
                ->setCellValue('C' . ($contador), "FECHA HASTA")
                ->setCellValue('E' . ($contador), "TIPO");
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':D' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':O' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":O" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $get_txt2FechaInicio)
                ->setCellValue('C' . ($contador), $get_txt2FechaFin)
                ->setCellValue('E' . ($contador), "LETRAS");
        $contador++;

        $saldoPaSoles = 0;
        $saldoSinPaSoles = 0;
        $saldoPaDolares = 0;
        $saldoSinPaDolares = 0;
        $tempVendedor = -1;

        $reporte = $this->AutoLoadModel('reporte');
        if ($get_lstRecepcionLetras == "1" || $get_lstRecepcionLetras == "2" || empty($get_lstRecepcionLetras)) {
            $listado = $reporte->listadoDetalladoLetras_ventasvencidasvendedor($get_txtFechaInicio, $get_txtFechaFin, $get_lstPrincipal, $get_lstCategoria, $get_lstZona, $get_lstRecepcionLetras, $get_txtIdCliente, $get_txtIdVendedor, $get_txtIdOrdenVenta, $get_lstMoneda, $get_lstEstado);
            $tempOrdenventa = -1;
            $tempOrdenCobro = -1;
            $tam = count($listado);
            for ($i = 0; $i < $tam; $i++) {
                if ($listado[$i]['recepletra'] == 'PA') {
                    if ($listado[$i]['idmoneda'] == 1) {
                        $saldoPaSoles += $listado[$i]['saldodoc'];
                    } else if ($listado[$i]['idmoneda'] == 2) {
                        $saldoPaDolares += $listado[$i]['saldodoc'];
                    }
                } else {
                    if ($listado[$i]['idmoneda'] == 1) {
                        $saldoSinPaSoles += $listado[$i]['saldodoc'];
                    } else if ($listado[$i]['idmoneda'] == 2) {
                        $saldoSinPaDolares += $listado[$i]['saldodoc'];
                    }
                }
                $estadoLetra = "";
                $moneda = 'S/. ';
                if ($listado[$i]['idmoneda'] == 2)
                    $moneda = 'US $ ';
                if ($listado[$i]['idvendedor'] != $tempVendedor) {
                    $contador = $contador + 2;
                    $tempVendedor = $listado[$i]['idvendedor'];
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':O' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":O" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Vendedor: ")
                            ->setCellValue('C' . ($contador), $listado[$i]['vendedor']);
                    $contador++;
                    $tempOrdenCobro = $listado[$i]['idordencobro'];
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":O" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Nº")
                            ->setCellValue('B' . ($contador), "RUC")
                            ->setCellValue('C' . ($contador), "CLIENTE")
                            ->setCellValue('D' . ($contador), "DIRECCION")
                            ->setCellValue('E' . ($contador), "FECHA DE VENTA")
                            ->setCellValue('F' . ($contador), "ORD. VENTA (OV)")
                            ->setCellValue('G' . ($contador), "LETRA")
                            ->setCellValue('H' . ($contador), "ESTADO LETRA")
                            ->setCellValue('I' . ($contador), "NRO UNICO")
                            ->setCellValue('J' . ($contador), "RECEPCION LETRA")
                            ->setCellValue('K' . ($contador), "FECHA DE EMISION GIRO")
                            ->setCellValue('L' . ($contador), "FECHA DE VENCIMIENTO")
                            ->setCellValue('M' . ($contador), "SITUACION OC")
                            ->setCellValue('N' . ($contador), "S/.")
                            ->setCellValue('O' . ($contador), "$");

                    $contador++;
                }
                if ($listado[$i]['idpadrec'] == 1) {
                    if ($listado[$i]['idmoneda'] == 1) {
                        $TotalCreditoSolesLima += $listado[$i]['saldodoc'];
                    } else {
                        $TotalCreditoDolaresLima += $listado[$i]['saldodoc'];
                    }
                } else {
                    if ($listado[$i]['idmoneda'] == 1) {
                        $TotalCreditoSolesProvincia += $listado[$i]['saldodoc'];
                    } else {
                        $TotalCreditoDolaresProvincia += $listado[$i]['saldodoc'];
                    }
                }
                switch ($listado[$i]['formacobro']) {
                    case '1': $formacobro = "Contado";
                        break;
                    case '2': $formacobro = "Crédito";
                        break;
                    case '3': $formacobro = "Letras";
                        break;
                }
                if ($listado[$i]['idmoneda'] == 1) {
                    $saldoSolesTemp = $moneda . $listado[$i]['saldodoc'];
                } else {
                    $saldoSolesTemp = 0.00;
                }

                if ($listado[$i]['idmoneda'] == 2) {
                    $saldoDolaresTemp = $moneda . $listado[$i]['saldodoc'];
                } else {
                    $saldoDolaresTemp = 0.00;
                }

                if ($listado[$i]['fvencimiento'] < date("Y-m-d")) {
                    $estadoLetra = 'VENCIDA';
                } else {
                    $estadoLetra = 'POR VENCER';
                }
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":O" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $listado[$i]['iddetalleordencobro'])
                        ->setCellValue('B' . ($contador), $listado[$i]['ruc'])
                        ->setCellValue('C' . ($contador), $listado[$i]['razonsocial'])
                        ->setCellValue('D' . ($contador), $listado[$i]['direccion'])
                        ->setCellValue('E' . ($contador), $listado[$i]['fordenventa'])
                        ->setCellValue('F' . ($contador), $listado[$i]['codigov'])
                        ->setCellValue('G' . ($contador), $listado[$i]['numeroletra'])
                        ->setCellValue('H' . ($contador), $estadoLetra)
                        ->setCellValue('I' . ($contador), $listado[$i]['numerounico'])
                        ->setCellValue('J' . ($contador), $listado[$i]['recepletra'])
                        ->setCellValue('K' . ($contador), $listado[$i]['fechagiro'])
                        ->setCellValue('L' . ($contador), $listado[$i]['fvencimiento'])
                        ->setCellValue('M' . ($contador), $listado[$i]['situacionoc'])
                        ->setCellValue('N' . ($contador), $saldoSolesTemp)
                        ->setCellValue('O' . ($contador), $saldoDolaresTemp);
                $contador++;
            }
        }
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':C' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "MONTOS TOTALES");
        if ($get_lstRecepcionLetras == 1 || $get_lstRecepcionLetras == 2 || empty($get_lstRecepcionLetras)) {
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), " ")
                    ->setCellValue('B' . ($contador), "SOLES")
                    ->setCellValue('C' . ($contador), "DOLARES");
            $contador++;

            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "ENVIADAS AL BANCO")
                    ->setCellValue('B' . ($contador), 'S/. ' . number_format($saldoPaSoles, 2))
                    ->setCellValue('C' . ($contador), 'US $ ' . number_format($saldoPaDolares, 2));
            $contador++;

            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "SIN ENVIAR AL BANCO")
                    ->setCellValue('B' . ($contador), 'S/. ' . number_format($saldoSinPaSoles, 2))
                    ->setCellValue('C' . ($contador), 'US $ ' . number_format($saldoSinPaDolares, 2));
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "TOTALES")
                    ->setCellValue('B' . ($contador), 'S/. ' . number_format($saldoPaSoles + $saldoSinPaSoles, 2))
                    ->setCellValue('C' . ($contador), 'US $ ' . number_format($saldoPaDolares + $saldoSinPaDolares, 2));
            $contador++;
        } else if ($get_lstRecepcionLetras == 4 || empty($get_lstRecepcionLetras)) {
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), " ")
                    ->setCellValue('B' . ($contador), "SOLES")
                    ->setCellValue('C' . ($contador), "DOLARES");
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "LETRAS PROTESTADAS:")
                    ->setCellValue('B' . ($contador), 'S/. ' . number_format($saldoProtestadoSoles, 2))
                    ->setCellValue('C' . ($contador), 'US $ ' . number_format($saldoProtestadoDolares, 2));
            $contador++;
        } else if ($get_lstRecepcionLetras == 3 || empty($get_lstRecepcionLetras)) {
            //start producto
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), " ")
                    ->setCellValue('B' . ($contador), "SOLES")
                    ->setCellValue('C' . ($contador), "DOLARES");
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "LETRAS PRODUCTO CL:")
                    ->setCellValue('B' . ($contador), 'S/. ' . number_format($saldoProductoSoles_cl, 2))
                    ->setCellValue('C' . ($contador), 'US $ ' . number_format($saldoProductoDolares_cl, 2));
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "LETRAS PRODUCTO BCP:")
                    ->setCellValue('B' . ($contador), 'S/. ' . number_format($saldoProductoSoles_bcp, 2))
                    ->setCellValue('C' . ($contador), 'US $ ' . number_format($saldoProductoDolares_bcp, 2));
            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":C" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "LETRAS PRODUCTO BBVA:")
                    ->setCellValue('B' . ($contador), 'S/. ' . number_format($saldoProductoSoles_bbva, 2))
                    ->setCellValue('C' . ($contador), 'US $ ' . number_format($saldoProductoDolares_bbva, 2));
            $contador++;
            //end producto
        }
        $objPHPExcel->getActiveSheet()->setTitle('Reporte_Letras_Vendedor');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    public function reporteventasvencidosvendedor_creditos() {
        set_time_limit(1500);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reporte_vencidasvendedorcreditos.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $get_condiciones = $_REQUEST['txtCondiciones'];
        $get_txtFechaInicio = !empty($_REQUEST['txtFechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaInicio'])) : null;
        $get_txtFechaFin = !empty($_REQUEST['txtFechaFin']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaFin'])) : date('Y-m-d');
        $get_lstPrincipal = $_REQUEST['lstCategoriaPrincipal'];
        $get_lstCategoria = $_REQUEST['lstCategoria'];
        $get_lstZona = $_REQUEST['lstZona'];
        $get_lstRecepcionLetras = $_REQUEST['lstRecepcionLetras'];
        $get_txtIdCliente = $_REQUEST['txtIdCliente'];
        $get_txtIdOrdenVenta = $_REQUEST['txtIdOrdenVenta'];
        $get_txtIdVendedor = $_REQUEST['lstvendedor'];
        $get_lstMoneda = $_REQUEST['lstMoneda'];
        $get_lstEstado = $_REQUEST['lstEstado'];
        $get_cmbCondVencimiento2 = $_REQUEST['lstCondVencimiento2'];
        $get_cmbCondVencimiento3 = $_REQUEST['lstCondVencimiento3'];
        $get_txt2FechaInicio = ($get_txtFechaInicio == "") ? "Desde el prinicipio" : $get_txtFechaInicio;
        $get_txt2FechaFin = ($get_txtFechaFin == "") ? "Hasta el fin" : $get_txtFechaFin;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $titulos = array('Nro', 'Padre', 'Monto', 'Saldo', 'Condicion', 'Nro Letra', 'Fecha Giro', 'F. Vencimiento', 'F. Pago', 'Situacion', 'Recepcion Letra');
        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAECECC')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);

        $contador = 1;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':K' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "REPORTE - DETALLADO DE CREDITOS");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "Fecha Reporte:")
                ->setCellValue('C' . ($contador), date('Y-m-d'));
        $contador++;
        //start cabecera
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':K' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $get_condiciones);
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':D' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':K' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "FECHA DESDE")
                ->setCellValue('C' . ($contador), "FECHA HASTA")
                ->setCellValue('E' . ($contador), "REPORTE");
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':D' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':K' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $get_txt2FechaInicio)
                ->setCellValue('C' . ($contador), $get_txt2FechaFin)
                ->setCellValue('E' . ($contador), "CREDITOS");
        $contador++;
        $reporte = $this->AutoLoadModel('reporte');
        $ordenGasto = $this->AutoLoadModel('ordengasto');
        $listado = $reporte->resumenDetalladoCreditos_ventasvencidasvendedor($get_txtFechaInicio, $get_txtFechaFin, $get_lstPrincipal, $get_lstCategoria, $get_lstZona, $get_lstEstado, $get_cmbCondVencimiento2, $get_txtIdCliente, $get_txtIdOrdenVenta, $get_txtIdVendedor, $get_lstMoneda, $get_cmbCondVencimiento3);

        $tam = count($listado);
        $tempVendedor = -1;
        $tempOrdenventa = -1;
        $tempOrdenCobro = -1;
        $TotalCreditoSolesLima = 0;
        $TotalCreditoDolaresLima = 0;
        $TotalCreditoSolesProvincia = 0;
        $TotalCreditoDolaresProvincia = 0;
        for ($i = 0; $i < $tam; $i++) {
            if ($listado[$i]['fvencimiento'] < date("Y-m-d")) {
                $estadoLetra = 'VENCIDO';
            } else {
                $estadoLetra = 'POR VENCER';
            }
            $moneda = 'S/. ';
            if ($listado[$i]['idmoneda'] == 2)
                $moneda = 'US $ ';
            if ($listado[$i]['idvendedor'] != $tempVendedor) {
                $contador = $contador + 2;
                $tempVendedor = $listado[$i]['idvendedor'];
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':K' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":K" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Vendedor: ")
                        ->setCellValue('C' . ($contador), $listado[$i]['vendedor']);
                $contador++;

                $tempOrdenCobro = $listado[$i]['idordencobro'];
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":K" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Nº")
                        ->setCellValue('B' . ($contador), "RUC")
                        ->setCellValue('C' . ($contador), "CLIENTE")
                        ->setCellValue('D' . ($contador), "ORD. VENTA (OV)")
                        ->setCellValue('E' . ($contador), "FECHA DE VENTA")
                        ->setCellValue('F' . ($contador), "ESTADO CREDITO")
                        ->setCellValue('G' . ($contador), "FECHA DE EMISION GIRO")
                        ->setCellValue('H' . ($contador), "FECHA DE VENCIMIENTO")
                        ->setCellValue('I' . ($contador), "SITUACION")
                        ->setCellValue('J' . ($contador), "S/.")
                        ->setCellValue('K' . ($contador), "$");

                $contador++;
            }
            if ($listado[$i]['idpadrec'] == 1) {
                if ($listado[$i]['idmoneda'] == 1) {
                    $TotalCreditoSolesLima += $listado[$i]['saldodoc'];
                } else {
                    $TotalCreditoDolaresLima += $listado[$i]['saldodoc'];
                }
            } else {
                if ($listado[$i]['idmoneda'] == 1) {
                    $TotalCreditoSolesProvincia += $listado[$i]['saldodoc'];
                } else {
                    $TotalCreditoDolaresProvincia += $listado[$i]['saldodoc'];
                }
            }

            switch ($listado[$i]['formacobro']) {
                case '1': $formacobro = "Contado";
                    break;
                case '2': $formacobro = "Crédito";
                    break;
                case '3': $formacobro = "Letras";
                    break;
            }
            if ($listado[$i]['idmoneda'] == 1) {
                $saldoSolesTemp = $moneda . number_format($listado[$i]['saldodoc'], 2);
            } else {
                $saldoSolesTemp = 0.00;
            }

            if ($listado[$i]['idmoneda'] == 2) {
                $saldoDolaresTemp = $moneda . number_format($listado[$i]['saldodoc'], 2);
            } else {
                $saldoDolaresTemp = 0.00;
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":K" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $listado[$i]['iddetalleordencobro'])
                    ->setCellValue('B' . ($contador), $listado[$i]['ruc'])
                    ->setCellValue('C' . ($contador), $listado[$i]['razonsocial'])
                    ->setCellValue('D' . ($contador), $listado[$i]['codigov'])
                    ->setCellValue('E' . ($contador), $listado[$i]['fordenventa'])
                    ->setCellValue('F' . ($contador), $estadoLetra)
                    ->setCellValue('G' . ($contador), $listado[$i]['fechagiro'])
                    ->setCellValue('H' . ($contador), $listado[$i]['fvencimiento'])
                    ->setCellValue('I' . ($contador), $listado[$i]['situacionoc'])
                    ->setCellValue('J' . ($contador), $saldoSolesTemp)
                    ->setCellValue('K' . ($contador), $saldoDolaresTemp);
            $contador++;
        }
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('I' . $contador . ':K' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "I" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('I' . ($contador), "MONTOS TOTALES");

        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "I" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('I' . ($contador), " ")
                ->setCellValue('J' . ($contador), "SOLES")
                ->setCellValue('K' . ($contador), "DOLARES")
        ;
        $contador++;
        if ($get_lstPrincipal == 1 || $get_lstPrincipal == '') {
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "I" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "I" . ($contador) . ":K" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('I' . ($contador), "LIMA")
                    ->setCellValue('J' . ($contador), 'S/. ' . number_format($TotalCreditoSolesLima, 2))
                    ->setCellValue('K' . ($contador), 'US $ ' . number_format($TotalCreditoDolaresLima, 2));
            $contador++;
        }
        if ($get_lstPrincipal == 2 || $get_lstPrincipal == '') {
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "I" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "I" . ($contador) . ":K" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('I' . ($contador), "PROVINCIA")
                    ->setCellValue('J' . ($contador), 'S/. ' . number_format($TotalCreditoSolesProvincia, 2))
                    ->setCellValue('K' . ($contador), 'US $ ' . number_format($TotalCreditoDolaresProvincia, 2));
            $contador++;
        }
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "I" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "I" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("I" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('I' . ($contador), "TOTAL")
                ->setCellValue('J' . ($contador), 'S/. ' . number_format($TotalCreditoSolesLima + $TotalCreditoSolesProvincia, 2))
                ->setCellValue('K' . ($contador), 'US $ ' . number_format($TotalCreditoDolaresLima + $TotalCreditoDolaresProvincia, 2));
        $contador++;
        $objPHPExcel->getActiveSheet()->setTitle('Reporte_Detallado_de_Creditos');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }

    public function reporteventasvencidosvendedor_contado() {
        //start cristo
        set_time_limit(1500);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reporte_vencidasvendedorcontado.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $get_condiciones = $_REQUEST['txtCondiciones'];
        $get_txtFechaInicio = !empty($_REQUEST['txtFechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaInicio'])) : null;
        $get_txtFechaFin = !empty($_REQUEST['txtFechaFin']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaFin'])) : null;
        $get_lstPrincipal = $_REQUEST['lstCategoriaPrincipal'];
        $get_lstCategoria = $_REQUEST['lstCategoria'];
        $get_lstZona = $_REQUEST['lstZona'];
        $get_lstRecepcionLetras = $_REQUEST['lstRecepcionLetras'];
        $get_txtIdCliente = $_REQUEST['txtIdCliente'];
        $get_txtIdOrdenVenta = $_REQUEST['txtIdOrdenVenta'];
        $get_txtIdVendedor = $_REQUEST['lstvendedor'];
        $get_lstMoneda = $_REQUEST['lstMoneda'];
        $get_lstEstado = $_REQUEST['lstEstadoLetrass'];
        $get_cmbCondVencimiento2 = $_REQUEST['lstCondVencimiento2'];
        $get_cmbCondVencimiento3 = $_REQUEST['lstCondVencimiento3'];

        $get_txt2FechaInicio = ($get_txtFechaInicio == "") ? "Desde el principio" : $get_txtFechaInicio;
        $get_txt2FechaFin = ($get_txtFechaFin == "") ? "Hasta el fin" : $get_txtFechaFin;

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $titulos = array('Nro', 'Padre', 'Monto', 'Saldo', 'Condicion', 'Nro Letra', 'Fecha Giro', 'F. Vencimiento', 'F. Pago', 'Situacion', 'Recepcion Letra');

        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAECECC')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );
        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );
        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );

        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );

        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);

        $contador = 1;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':K' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "REPORTE - DETALLADO DE CREDITOS");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":C" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "Fecha Reporte:")
                ->setCellValue('C' . ($contador), date('Y-m-d'));
        $contador++;
        //start cabecera
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':K' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $get_condiciones);
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':D' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':K' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "FECHA DESDE")
                ->setCellValue('C' . ($contador), "FECHA HASTA")
                ->setCellValue('E' . ($contador), "REPORTE");
        $contador++;

        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':D' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':K' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":K" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $get_txt2FechaInicio)
                ->setCellValue('C' . ($contador), $get_txt2FechaFin)
                ->setCellValue('E' . ($contador), "CONTADO");
        if ($get_lstEstado == 2) {
            $filtroMensaje1 = "POR VENCER";
            if (!empty($get_cmbCondVencimiento3)) {
                if ($get_cmbCondVencimiento3 <= 90) {
                    $filtroMensaje2 = " EN (" . $get_cmbCondVencimiento3 . ") DIAS";
                }
                if ($get_cmbCondVencimiento3 == 91) {
                    $filtroMensaje2 = " EN MAS DE 90 DIAS";
                }
            }
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $get_txt2FechaInicio)
                    ->setCellValue('C' . ($contador), $get_txt2FechaFin)
                    ->setCellValue('E' . ($contador), "CREDITOS")
                    ->setCellValue('G' . ($contador), $filtroMensaje1 . $filtroMensaje2);
        }
        $contador++;
        $reporte = $this->AutoLoadModel('reporte');
        $ordenGasto = $this->AutoLoadModel('ordengasto');
        $listado = $reporte->resumenDetalladoContado_ventasvencidasvendedor($get_txtFechaInicio, $get_txtFechaFin, $get_lstPrincipal, $get_lstCategoria, $get_lstZona, $get_lstEstado, $get_cmbCondVencimiento2, $get_txtIdCliente, $get_txtIdOrdenVenta, $get_txtIdVendedor, $get_lstMoneda, $get_cmbCondVencimiento3, $get_lstEstado);

        $tam = count($listado);
        $tempVendedor = -1;
        $tempOrdenventa = -1;
        $tempOrdenCobro = -1;
        $TotalCreditoSolesLima = 0;
        $TotalCreditoDolaresLima = 0;
        $TotalCreditoSolesProvincia = 0;
        $TotalCreditoDolaresProvincia = 0;
        for ($i = 0; $i < $tam; $i++) {
            $moneda = 'S/. ';
            if ($listado[$i]['idmoneda'] == 2)
                $moneda = 'US $ ';
            if ($listado[$i]['idvendedor'] != $tempVendedor) {
                $contador = $contador + 2;
                $tempVendedor = $listado[$i]['idvendedor'];
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':K' . $contador);
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":K" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Vendedor: ")
                        ->setCellValue('C' . ($contador), $listado[$i]['vendedor']);
                $contador++;

                $tempOrdenCobro = $listado[$i]['idordencobro'];
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":K" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Nº")
                        ->setCellValue('B' . ($contador), "RUC")
                        ->setCellValue('C' . ($contador), "CLIENTE")
                        ->setCellValue('D' . ($contador), "ORD. VENTA (OV)")
                        ->setCellValue('E' . ($contador), "FECHA DE VENTA")
                        ->setCellValue('F' . ($contador), "ESTADO CONTADO")
                        ->setCellValue('G' . ($contador), "FECHA DE EMISION GIRO")
                        ->setCellValue('H' . ($contador), "FECHA DE VENCIMIENTO")
                        ->setCellValue('I' . ($contador), "SITUACION")
                        ->setCellValue('J' . ($contador), "S/.")
                        ->setCellValue('K' . ($contador), "$");

                $contador++;
            }
            if ($listado[$i]['idpadrec'] == 1) {
                if ($listado[$i]['idmoneda'] == 1) {
                    $TotalCreditoSolesLima += $listado[$i]['saldodoc'];
                } else {
                    $TotalCreditoDolaresLima += $listado[$i]['saldodoc'];
                }
            } else {
                if ($listado[$i]['idmoneda'] == 1) {
                    $TotalCreditoSolesProvincia += $listado[$i]['saldodoc'];
                } else {
                    $TotalCreditoDolaresProvincia += $listado[$i]['saldodoc'];
                }
            }
            if ($listado[$i]['fvencimiento'] < date("Y-m-d")) {
                $estadoLetra = 'VENCIDO';
            } else {
                $estadoLetra = 'POR VENCER';
            }
            switch ($listado[$i]['formacobro']) {
                case '1': $formacobro = "Contado";
                    break;
                case '2': $formacobro = "Crédito";
                    break;
                case '3': $formacobro = "Letras";
                    break;
            }
            if ($listado[$i]['idmoneda'] == 1) {
                $saldoSolesTemp = $moneda . number_format($listado[$i]['saldodoc'], 2);
            } else {
                $saldoSolesTemp = 0.00;
            }

            if ($listado[$i]['idmoneda'] == 2) {
                $saldoDolaresTemp = $moneda . number_format($listado[$i]['saldodoc'], 2);
            } else {
                $saldoDolaresTemp = 0.00;
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":K" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":K" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $listado[$i]['iddetalleordencobro'])
                    ->setCellValue('B' . ($contador), $listado[$i]['ruc'])
                    ->setCellValue('C' . ($contador), $listado[$i]['razonsocial'])
                    ->setCellValue('D' . ($contador), $listado[$i]['codigov'])
                    ->setCellValue('E' . ($contador), $listado[$i]['fordenventa'])
                    ->setCellValue('F' . ($contador), $estadoLetra)
                    ->setCellValue('G' . ($contador), $listado[$i]['fechagiro'])
                    ->setCellValue('H' . ($contador), $listado[$i]['fvencimiento'])
                    ->setCellValue('I' . ($contador), $listado[$i]['situacionoc'])
                    ->setCellValue('J' . ($contador), $saldoSolesTemp)
                    ->setCellValue('K' . ($contador), $saldoDolaresTemp);
            $contador++;
        }
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('H' . $contador . ':J' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "H" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("H" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('H' . ($contador), "MONTOS TOTALES");
        $contador++;
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "H" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("H" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("H" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('H' . ($contador), " ")
                ->setCellValue('I' . ($contador), "SOLES")
                ->setCellValue('J' . ($contador), "DOLARES");
        $contador++;
        if ($get_lstPrincipal == 1 || $get_lstPrincipal == '') {
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "H" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "I" . ($contador) . ":J" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("H" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("H" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('H' . ($contador), "LIMA")
                    ->setCellValue('I' . ($contador), 'S/. ' . number_format($TotalCreditoSolesLima, 2))
                    ->setCellValue('J' . ($contador), 'US $ ' . number_format($TotalCreditoDolaresLima, 2));
            $contador++;
        }

        if ($get_lstPrincipal == 2 || $get_lstPrincipal == '') {
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "H" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "I" . ($contador) . ":J" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("H" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("H" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('H' . ($contador), "PROVINCIA")
                    ->setCellValue('I' . ($contador), 'S/. ' . number_format($TotalCreditoSolesProvincia, 2))
                    ->setCellValue('J' . ($contador), 'US $ ' . number_format($TotalCreditoDolaresProvincia, 2));
            $contador++;
        }
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "H" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "I" . ($contador) . ":J" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("H" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("H" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('H' . ($contador), "TOTAL")
                ->setCellValue('I' . ($contador), 'S/. ' . number_format($TotalCreditoSolesLima + $TotalCreditoSolesProvincia, 2))
                ->setCellValue('J' . ($contador), 'US $ ' . number_format($TotalCreditoDolaresLima + $TotalCreditoDolaresProvincia, 2));
        $contador++;

        $objPHPExcel->getActiveSheet()->setTitle('Reporte_Detallado_de_Creditos');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);
        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
        //end cristo
    }

    public function ventaspendientesvendedor() {
        //start cristo
        set_time_limit(1500);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'reporte_pendientesporvendedor.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $url_idcliente = !empty($_REQUEST['txtIdCliente']) ? $_REQUEST['txtIdCliente'] : "";
        $url_idactor = !empty($_REQUEST['lstvendedor']) ? $_REQUEST['lstvendedor'] : "";
        $url_txtFechaInicioGuiado = !empty($_REQUEST['txtFechaInicioGuiado']) ? $_REQUEST['txtFechaInicioGuiado'] : '';
        $url_txtFechaFinalGuiado = !empty($_REQUEST['txtFechaFinalGuiado']) ? $_REQUEST['txtFechaFinalGuiado'] : '';
        $url_txtFechaInicioDespacho = !empty($_REQUEST['txtFechaInicioDespacho']) ? $_REQUEST['txtFechaInicioDespacho'] : '';
        $url_txtFechaFinalDespacho = !empty($_REQUEST['txtFechaFinalDespacho']) ? $_REQUEST['txtFechaFinalDespacho'] : '';
        $url_idordenventa = !empty($_REQUEST['txtIdOrdenVenta']) ? $_REQUEST['txtIdOrdenVenta'] : "";
        $url_idmoneda = !empty($_REQUEST['lstMoneda']) ? $_REQUEST['lstMoneda'] : "";

        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $titulos = array('Nro', 'Ruc', 'Dni', 'Cliente', 'Departamento', 'Provincia', 'Distrito', 'Ord.Venta', 'Fecha Venta', 'Fecha Despacho', 'Fecha Vencimiento', 'Situacion', 'IMP S/.', 'IMP $', 'IMP S/.', 'IMP $', 'IMP S/.', 'IMP $', 'IMP S/.', 'IMP $', 'IMP S/.', 'IMP $');
        $sharedStyle6 = new PHPExcel_Style();
        $sharedStyle6->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ))
        );
        $sharedStyle5 = new PHPExcel_Style();
        $sharedStyle5->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFF2F20C')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            ))
        );
        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );
        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );
        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );
        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );
        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('N')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('O')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('P')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('Q')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('R')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('S')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('T')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('U')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('V')->setAutoSize(true);

        $contador = 1;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':V' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":V" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":V" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":V" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "VENTAS PENDIENTES POR VENDEDOR");
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':D' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('E' . $contador . ':F' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":D" . ($contador));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "E" . ($contador) . ":F" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "Fecha Exportacion de Reporte:")
                ->setCellValue('E' . ($contador), date('Y-m-d'));
        $contador++;
        //start cabecera
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':C' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('D' . $contador . ':E' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':G' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('H' . $contador . ':I' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":I" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), "FECHA GUIADO DESDE")
                ->setCellValue('D' . ($contador), "FECHA GUIADO HASTA")
                ->setCellValue('F' . ($contador), "FECHA DESPACHO DESDE")
                ->setCellValue('H' . ($contador), "FECHA DESPACHO HASTA");
        $contador++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':C' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('D' . $contador . ':E' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('F' . $contador . ':G' . $contador);
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('H' . $contador . ':I' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":I" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":I" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($contador), $url_txtFechaInicioGuiado)
                ->setCellValue('D' . ($contador), $url_txtFechaFinalGuiado)
                ->setCellValue('F' . ($contador), $url_txtFechaInicioDespacho)
                ->setCellValue('H' . ($contador), $url_txtFechaFinalDespacho);
        $contador++;
        $reporte = $this->AutoLoadModel('reporte');
        $listado = $reporte->ventaspendientesvendedor($url_idcliente, $url_idactor, $url_txtFechaInicioGuiado, $url_txtFechaFinalGuiado, $url_txtFechaInicioDespacho, $url_txtFechaFinalDespacho, $url_idordenventa, $url_idmoneda);
        $tam = count($listado);
        $tempVendedor = -1;
        for ($i = 0; $i < $tam; $i++) {
            $cant += 1;
            $moneda = ($listado[$i]['idmoneda'] == 1) ? 'S/. ' : '$ ';
            if ($listado[$i]['idvendedor'] != $tempVendedor) {
                $get_importeinicialSoles = 0.00;
                $get_importeinicialDolares = 0.00;
                $get_importepagadoSoles = 0.00;
                $get_importepagadoDolares = 0.00;
                $get_importedevolucionSoles = 0.00;
                $get_importedevolucionDolares = 0.00;
                $get_importegastosSoles = 0.00;
                $get_importegastosDolares = 0.00;
                $get_saldoSoles1 = 0.00;
                $get_saldoDolares1 = 0.00;
                $get_saldoSoles2 = 0.00;
                $get_saldoDolares2 = 0.00;
                $get_nombrevendedor = ($listado[$i]['nombrevendedor1'] == "") ? $listado[$i]['nombrevendedor2'] : $listado[$i]['nombrevendedor1'];
                $tempVendedor = $listado[$i]['idvendedor'];
                //total por vendedor
                if ($cant > 1) {
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':K' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle6, "A" . ($contador) . ":V" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":V" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('L' . ($contador), 'TOTAL')
                            ->setCellValue('M' . ($contador), 'S/. ' . number_format($get_total_temp_importeinicialSoles, 2, '.', ''))
                            ->setCellValue('N' . ($contador), '$ ' . number_format($get_total_temp_importeinicialDolares, 2, '.', ''))
                            ->setCellValue('O' . ($contador), 'S/. ' . number_format($get_total_temp_importepagadoSoles, 2, '.', ''))
                            ->setCellValue('P' . ($contador), '$ ' . number_format($get_total_temp_importepagadoDolares, 2, '.', ''))
                            ->setCellValue('Q' . ($contador), 'S/. ' . number_format($get_total_temp_importedevolucionSoles, 2, '.', ''))
                            ->setCellValue('R' . ($contador), '$ ' . number_format($get_total_temp_importedevolucionDolares, 2, '.', ''))
                            ->setCellValue('S' . ($contador), 'S/. ' . number_format($get_total_temp_importegastosSoles, 2, '.', ''))
                            ->setCellValue('T' . ($contador), '$ ' . number_format($get_total_temp_importegastosDolares, 2, '.', ''))
                            ->setCellValue('U' . ($contador), 'S/. ' . number_format($get_total_temp_saldoSoles2, 2, '.', ''))
                            ->setCellValue('V' . ($contador), '$ ' . number_format($get_total_temp_saldoDolares2, 2, '.', ''));
                    $contador++;
                }
                $get_total_temp_importeinicialSoles = 0.00;
                $get_total_temp_importeinicialDolares = 0.00;
                $get_total_temp_importepagadoSoles = 0.00;
                $get_total_temp_importepagadoDolares = 0.00;
                $get_total_temp_importedevolucionSoles = 0.00;
                $get_total_temp_importedevolucionDolares = 0.00;
                $get_total_temp_importegastosSoles = 0.00;
                $get_total_temp_importegastosDolares = 0.00;
                $get_total_temp_saldoSoles2 = 0.00;
                $get_total_temp_saldoDolares2 = 0.00;
                $contador = $contador + 2;
                //cabecera vendedor
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':L' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('M' . $contador . ':N' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('O' . $contador . ':P' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('Q' . $contador . ':R' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('S' . $contador . ':T' . $contador);
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('U' . $contador . ':V' . $contador);

                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":V" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":V" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":V" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":V" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Vendedor: ")
                        ->setCellValue('C' . ($contador), $get_nombrevendedor)
                        ->setCellValue('M' . ($contador), 'IMP. INICIAL')
                        ->setCellValue('O' . ($contador), 'IMP. PAGADO')
                        ->setCellValue('Q' . ($contador), 'IMP. DEVOLUCION')
                        ->setCellValue('S' . ($contador), 'GASTOS ADICIONALES')
                        ->setCellValue('U' . ($contador), 'SALDO PENDIENTE');
                $contador++;
                //detalle ovs
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":L" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle5, "M" . ($contador) . ":V" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":V" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":V" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), "Nro")
                        ->setCellValue('B' . ($contador), "Ruc")
                        ->setCellValue('C' . ($contador), "Dni")
                        ->setCellValue('D' . ($contador), "Cliente")
                        ->setCellValue('E' . ($contador), "Departamento")
                        ->setCellValue('F' . ($contador), "Provincia")
                        ->setCellValue('G' . ($contador), "Distrito")
                        ->setCellValue('H' . ($contador), "Ord.Venta")
                        ->setCellValue('I' . ($contador), "Fecha Venta")
                        ->setCellValue('J' . ($contador), "Fecha Despacho")
                        ->setCellValue('K' . ($contador), "Fecha Vencimiento")
                        ->setCellValue('L' . ($contador), "Situacion")
                        ->setCellValue('M' . ($contador), "IMP S/.")
                        ->setCellValue('N' . ($contador), "IMP $")
                        ->setCellValue('O' . ($contador), "IMP S/.")
                        ->setCellValue('P' . ($contador), "IMP $")
                        ->setCellValue('Q' . ($contador), "IMP S/.")
                        ->setCellValue('R' . ($contador), "IMP $")
                        ->setCellValue('S' . ($contador), "IMP S/.")
                        ->setCellValue('T' . ($contador), "IMP $")
                        ->setCellValue('U' . ($contador), "S/.")
                        ->setCellValue('V' . ($contador), "$");
                $contador++;
            }

            $get_importeinicialSoles = ($listado[$i]["idmoneda"] == 1) ? $listado[$i]["importeinicial"] : 0.00;
            $get_importeinicialDolares = ($listado[$i]["idmoneda"] == 2) ? $listado[$i]["importeinicial"] : 0.00;
            $get_importepagadoSoles = ($listado[$i]["idmoneda"] == 1) ? $listado[$i]["montoasignado"] : 0.00;
            $get_importepagadoDolares = ($listado[$i]["idmoneda"] == 2) ? $listado[$i]["montoasignado"] : 0.00;
            $get_importedevolucionSoles = ($listado[$i]["idmoneda"] == 1) ? $listado[$i]["montodevuelto"] : 0.00;
            $get_importedevolucionDolares = ($listado[$i]["idmoneda"] == 2) ? $listado[$i]["montodevuelto"] : 0.00;
            $get_importegastosSoles = ($listado[$i]["idmoneda"] == 1) ? $listado[$i]["gastosadicionales"] : 0.00;
            $get_importegastosDolares = ($listado[$i]["idmoneda"] == 2) ? $listado[$i]["gastosadicionales"] : 0.00;
            $get_saldoSoles1 = ($get_importeinicialSoles + $get_importegastosSoles) - $get_importepagadoSoles;
            $get_saldoDolares1 = ($get_importeinicialDolares + $get_importegastosDolares) - $get_importepagadoDolares;
            $get_saldoSoles2 = ($listado[$i]["idmoneda"] == 1) ? $get_saldoSoles1 : 0.00;
            $get_saldoDolares2 = ($listado[$i]["idmoneda"] == 2) ? $get_saldoDolares1 : 0.00;

            $get_total_temp_importeinicialSoles = +$get_total_temp_importeinicialSoles + $get_importeinicialSoles;
            $get_total_temp_importeinicialDolares = +$get_total_temp_importeinicialDolares + $get_importeinicialDolares;
            $get_total_temp_importepagadoSoles = $get_total_temp_importepagadoSoles + $get_importepagadoSoles;
            $get_total_temp_importepagadoDolares = $get_total_temp_importepagadoDolares + $get_importepagadoDolares;
            $get_total_temp_importedevolucionSoles = $get_total_temp_importedevolucionSoles + $get_importedevolucionSoles;
            $get_total_temp_importedevolucionDolares = $get_total_temp_importedevolucionDolares + $get_importedevolucionDolares;
            $get_total_temp_importegastosSoles = $get_total_temp_importegastosSoles + $get_importegastosSoles;
            $get_total_temp_importegastosDolares = $get_total_temp_importegastosDolares + $get_importegastosDolares;
            $get_total_temp_saldoSoles2 = $get_total_temp_saldoSoles2 + $get_saldoSoles2;
            $get_total_temp_saldoDolares2 = $get_total_temp_saldoDolares2 + $get_saldoDolares2;

            $get_total_importeinicialSoles = +$get_total_importeinicialSoles + $get_importeinicialSoles;
            $get_total_importeinicialDolares = +$get_total_importeinicialDolares + $get_importeinicialDolares;
            $get_total_importepagadoSoles = $get_total_importepagadoSoles + $get_importepagadoSoles;
            $get_total_importepagadoDolares = $get_total_importepagadoDolares + $get_importepagadoDolares;
            $get_total_importedevolucionSoles = $get_total_importedevolucionSoles + $get_importedevolucionSoles;
            $get_total_importedevolucionDolares = $get_total_importedevolucionDolares + $get_importedevolucionDolares;
            $get_total_importegastosSoles = $get_total_importegastosSoles + $get_importegastosSoles;
            $get_total_importegastosDolares = $get_total_importegastosDolares + $get_importegastosDolares;
            $get_total_saldoSoles2 = $get_total_saldoSoles2 + $get_saldoSoles2;
            $get_total_saldoDolares2 = $get_total_saldoDolares2 + $get_saldoDolares2;

            $get_nombrecliente = ($listado[$i]['razonsocial'] != "") ? $listado[$i]['razonsocial'] : $listado[$i]['nombrecliente'];
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":V" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":V" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $cant)
                    ->setCellValue('B' . ($contador), $listado[$i]['ruc'])
                    ->setCellValue('C' . ($contador), $listado[$i]['dni'])
                    ->setCellValue('D' . ($contador), $get_nombrecliente)
                    ->setCellValue('E' . ($contador), $listado[$i]['nombredepartamento'])
                    ->setCellValue('F' . ($contador), $listado[$i]['nombreprovincia'])
                    ->setCellValue('G' . ($contador), $listado[$i]['nombredistrito'])
                    ->setCellValue('H' . ($contador), $listado[$i]['codigov'])
                    ->setCellValue('I' . ($contador), $listado[$i]['fordenventa'])
                    ->setCellValue('J' . ($contador), $listado[$i]['fechadespacho'])
                    ->setCellValue('K' . ($contador), $listado[$i]['fechavencimiento'])
                    ->setCellValue('L' . ($contador), $listado[$i]['situacion'])
                    ->setCellValue('M' . ($contador), ($get_importeinicialSoles > 0.00) ? $moneda . ' ' . $get_importeinicialSoles : "")
                    ->setCellValue('N' . ($contador), ($get_importeinicialDolares > 0.00) ? $moneda . ' ' . $get_importeinicialDolares : "")
                    ->setCellValue('O' . ($contador), ($get_importepagadoSoles > 0.00) ? $moneda . ' ' . $get_importepagadoSoles : "")
                    ->setCellValue('P' . ($contador), ($get_importepagadoDolares > 0.00) ? $moneda . ' ' . $get_importepagadoDolares : "")
                    ->setCellValue('Q' . ($contador), ($get_importedevolucionSoles > 0.00) ? $moneda . ' ' . $get_importedevolucionSoles : "")
                    ->setCellValue('R' . ($contador), ($get_importedevolucionDolares > 0.00) ? $moneda . ' ' . $get_importedevolucionDolares : "")
                    ->setCellValue('S' . ($contador), ($get_importegastosSoles > 0.00) ? $moneda . ' ' . $get_importegastosSoles : "")
                    ->setCellValue('T' . ($contador), ($get_importegastosDolares > 0.00) ? $moneda . ' ' . $get_importegastosDolares : "")
                    ->setCellValue('U' . ($contador), ($get_saldoSoles2 > 0.00) ? $moneda . ' ' . round($get_saldoSoles2, 2) : "")
                    ->setCellValue('V' . ($contador), ($get_saldoDolares2 > 0.00) ? $moneda . ' ' . round($get_saldoDolares2, 2) : "");
            $contador++;
        }
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':K' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":V" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":V" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('L' . ($contador), 'TOTAL')
                ->setCellValue('M' . ($contador), 'S/. ' . number_format($get_total_temp_importeinicialSoles, 2, '.', ''))
                ->setCellValue('N' . ($contador), '$ ' . number_format($get_total_temp_importeinicialDolares, 2, '.', ''))
                ->setCellValue('O' . ($contador), 'S/. ' . number_format($get_total_temp_importepagadoSoles, 2, '.', ''))
                ->setCellValue('P' . ($contador), '$ ' . number_format($get_total_temp_importepagadoDolares, 2, '.', ''))
                ->setCellValue('Q' . ($contador), 'S/. ' . number_format($get_total_temp_importedevolucionSoles, 2, '.', ''))
                ->setCellValue('R' . ($contador), '$ ' . number_format($get_total_temp_importedevolucionDolares, 2, '.', ''))
                ->setCellValue('S' . ($contador), 'S/. ' . number_format($get_total_temp_importegastosSoles, 2, '.', ''))
                ->setCellValue('T' . ($contador), '$ ' . number_format($get_total_temp_importegastosDolares, 2, '.', ''))
                ->setCellValue('U' . ($contador), 'S/. ' . number_format($get_total_temp_saldoSoles2, 2, '.', ''))
                ->setCellValue('V' . ($contador), '$ ' . number_format($get_total_temp_saldoDolares2, 2, '.', ''));

        $contador = $contador + 3;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':K' . $contador);
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":V" . ($contador));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":V" . ($contador))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('L' . ($contador), 'TOTAL FINAL')
                ->setCellValue('M' . ($contador), 'S/. ' . number_format($get_total_importeinicialSoles, 2, '.', ''))
                ->setCellValue('N' . ($contador), '$ ' . number_format($get_total_importeinicialDolares, 2, '.', ''))
                ->setCellValue('O' . ($contador), 'S/. ' . number_format($get_total_importepagadoSoles, 2, '.', ''))
                ->setCellValue('P' . ($contador), '$ ' . number_format($get_total_importepagadoDolares, 2, '.', ''))
                ->setCellValue('Q' . ($contador), 'S/. ' . number_format($get_total_importedevolucionSoles, 2, '.', ''))
                ->setCellValue('R' . ($contador), '$ ' . number_format($get_total_importedevolucionDolares, 2, '.', ''))
                ->setCellValue('S' . ($contador), 'S/. ' . number_format($get_total_importegastosSoles, 2, '.', ''))
                ->setCellValue('T' . ($contador), '$ ' . number_format($get_total_importegastosDolares, 2, '.', ''))
                ->setCellValue('U' . ($contador), 'S/. ' . number_format($get_total_saldoSoles2, 2, '.', ''))
                ->setCellValue('V' . ($contador), '$ ' . number_format($get_total_saldoDolares2, 2, '.', ''));
        $contador++;
        $objPHPExcel->getActiveSheet()->setTitle('Exportado_del_Sistema_ERP');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);
        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
        //end cristo
    }

    public function listalineadecredito() {
        $txtFechaInicio = !empty($_REQUEST['txtFechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaInicio'])) : '';
        $txtFechaFin = !empty($_REQUEST['txtFechaFin']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaFin'])) : '';
        $idpadre = $_REQUEST['idpadre'];
        $idcategoria = $_REQUEST['idcategoria'];
        $idzona = $_REQUEST['idzona'];
        $cmbCalificacion = $_REQUEST['cmbCalificacion'];
        $chkContado = $_REQUEST['chkContado'];
        $chkCredito = $_REQUEST['chkCredito'];
        $chkLetra = $_REQUEST['chkLetra'];
        $txtmaximo = $_REQUEST['txtmaximo'];
        $txtminimo = $_REQUEST['txtminimo'];
        $idCliente = $_REQUEST['idCliente'];
        $soloActivo = $_REQUEST['chkActivo'];
        $lineacredito = new Lineacredito();
        $cliente = new Cliente();
        $arrayCalificaciones = $cliente->listaCalificaciones();
        $dataLineaCredito = $lineacredito->listadoLineacredito($txtFechaInicio, $txtFechaFin, $idpadre, $idcategoria, $idzona, $cmbCalificacion, $chkContado, $chkCredito, $chkLetra, $txtmaximo, $txtminimo, $idCliente, $soloActivo);
        $tam = count($dataLineaCredito);
        $textFecha = '';
        if (empty($txtFechaInicio) && empty($txtFechaFin)) {
            $textFecha = 'Desde siempre';
        } else {
            if (!empty($txtFechaInicio)) {
                $textFecha = $txtFechaInicio . ' - ';
            } else {
                $textFecha = 'Desde el inicio - ';
            }
            if (!empty($txtFechaFin)) {
                $textFecha .= $txtFechaFin;
            } else {
                $textFecha .= 'Actualidad';
            }
        }
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'Listado_inea_de_credito.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();
        $sharedStyle4 = new PHPExcel_Style();
        $sharedStyle4->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFAA8888')
            ), 'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );
        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCDDF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );
        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            )
                )
        );
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCCCCC')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );
        $sharedStyle0 = new PHPExcel_Style();
        $sharedStyle0->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FF81BEF7')
            ), 'borders' => array(
                'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ), 'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            )
                )
        );
        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        $cont = 1;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("A" . ($cont) . ":I" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont) . ":I" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "LISTADO - LINEA DE CREDITO");
        $cont++;
        $cont++;
        $objPHPExcel->setActiveSheetIndex(0)->mergeCells("B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($cont));
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "B" . ($cont) . ":C" . ($cont));
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFill()->setRotation(1);
        $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":B" . ($cont))->getFont()->setBold(true);
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A' . ($cont), "Fecha: ")
                ->setCellValue('B' . ($cont), $textFecha);
        $cont++;
        $cont++;
        $idzona = -1;
        for ($i = 0; $i < $tam; $i++) {
            if ($idzona != $dataLineaCredito[$i]['idzona']) {
                $idzona = $dataLineaCredito[$i]['idzona'];
                $cont++;
                $objPHPExcel->setActiveSheetIndex(0)->mergeCells("A" . ($cont) . ":I" . ($cont));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A" . ($cont) . ":I" . ($cont));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont))->getFont()->setBold(true);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($cont), "ZONA: " . $dataLineaCredito[$i]['nombrezona']);
                $cont++;
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($cont) . ":I" . ($cont));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":I" . ($cont))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":I" . ($cont))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($cont), "Razon Social")
                        ->setCellValue('B' . ($cont), "R.U.C.")
                        ->setCellValue('C' . ($cont), "Fecha")
                        ->setCellValue('D' . ($cont), "Calificación")
                        ->setCellValue('E' . ($cont), "L/Credito")
                        ->setCellValue('F' . ($cont), "Contado")
                        ->setCellValue('G' . ($cont), "Credito")
                        ->setCellValue('H' . ($cont), "Letras")
                        ->setCellValue('I' . ($cont), "Observacion");
                $cont++;
            }
            $dataLineaCredito[$i]['razonsocial'] = trim($dataLineaCredito[$i]['razonsocial']);
            $dataLineaCredito[$i]['razonsocial'] = iconv(mb_detect_encoding($dataLineaCredito[$i]['razonsocial']), "UTF-8", $dataLineaCredito[$i]['razonsocial']);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($cont) . ":I" . ($cont));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($cont) . ":I" . ($cont))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($cont), $dataLineaCredito[$i]['razonsocial'])
                    ->setCellValue('B' . ($cont), $dataLineaCredito[$i]['ruc'])
                    ->setCellValue('C' . ($cont), $dataLineaCredito[$i]['fregistro'])
                    ->setCellValue('D' . ($cont), $arrayCalificaciones[$dataLineaCredito[$i]['calificacion'] - 1]['nombre'])
                    ->setCellValue('E' . ($cont), 'S/ ' . number_format($dataLineaCredito[$i]['lineacredito'], 2))
                    ->setCellValue('F' . ($cont), ($dataLineaCredito[$i]['contado'] == 1 ? 'Apto' : 'No Apto'))
                    ->setCellValue('G' . ($cont), ($dataLineaCredito[$i]['credito'] == 1 ? 'Apto' : 'No Apto'))
                    ->setCellValue('H' . ($cont), ($dataLineaCredito[$i]['letras'] == 1 ? 'Apto' : 'No Apto'))
                    ->setCellValue('I' . ($cont), $dataLineaCredito[$i]['observacion']);
            $cont++;
        }
        $objPHPExcel->getActiveSheet()->setTitle('Linea de Credito');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);
        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        readfile($filename);
        unlink($filename);
    }
    
    public function disenioExcel() {
        $idProducto = $_REQUEST['idProducto'];
        $repote = new Disenio();
        $data = $repote->listaProducto($idProducto);
        $codigo = $data[0]['codigopa'];
        $nompro = $data[0]['nompro'];
        $unidm = $data[0]['unidm'];
        $codigooc = (empty($data[0]['codigooc']) ? '-' : $data[0]['codigooc']);
        $fordencompra = (empty($data[0]['fordencompra']) ? '-' : $data[0]['fordencompra']);
        $stockactual = $data[0]['stockactual'];
        $stockdisponible = $data[0]['stockdisponible'];
        $responsable = (empty($data[0]['responsable']) ? '-' : $data[0]['responsable']);
        $codempaque = (empty($data[0]['codempaque'])?'-':$data[0]['codempaque']);
        set_time_limit(1500);
        $baseURL = ROOT . 'descargas' . DS;
        $idActor = $_SESSION['idactor'];
        $fechaCreacion = date('Y-m-d_h.m.s');
        $basenombre = 'ReporteProducto.xls';
        $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
        $this->AutoLoadLib('PHPExcel');
        $objPHPExcel = new PHPExcel();

        //poniendo stylo al encabezado
        //Lineas para cuadros
        $sharedStyle1 = new PHPExcel_Style();
        $sharedStyle1->applyFromArray(array(
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
            ))
        );
        $sharedStyle2 = new PHPExcel_Style();
        $sharedStyle2->applyFromArray(array(
            'fill' => array(
                'type' => PHPExcel_Style_Fill::FILL_SOLID,
                'color' => array('argb' => 'FFCCFFCC')
            ),
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
            ))
        );
        $sharedStyle3 = new PHPExcel_Style();
        $sharedStyle3->applyFromArray(array(
            'borders' => array(
                'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
            ),
            'alignment' => array(
                'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
            ))
        );
        
        $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
        $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
        
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A1', "REPORTE DE PRODUCTO [DISEÑO]")
                ->mergeCells('A1:I3');
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A1");
        $objPHPExcel->getActiveSheet()->getStyle("A1")->getFont()->setBold(true);
        
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A4', "Código")
                ->setCellValue('B4', 'Descripción')
                ->setCellValue('C4', 'Unidad de Medida')
                ->setCellValue('D4', 'Orden compra')
                ->setCellValue('E4', 'Fecha')
                ->setCellValue('F4', 'Stock Actual')
                ->setCellValue('G4', 'Stock Disponible')
                ->setCellValue('H4', 'Responsable')
                ->setCellValue('I4', 'Empaque');
        
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A4:I4");
   
        $objPHPExcel->getActiveSheet()->getStyle("A4")->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("B4")->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("C4")->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("D4")->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("E4")->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("F4")->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("G4")->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("H4")->getFont()->setBold(true);
        $objPHPExcel->getActiveSheet()->getStyle("I4")->getFont()->setBold(true);
        
        $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "A5:I5");
        $objPHPExcel->setActiveSheetIndex(0)
                ->setCellValue('A5', $codigo)
                ->setCellValue('B5', $nompro)
                ->setCellValue('C5', $unidm)
                ->setCellValue('D5', $codigooc)
                ->setCellValue('E5', $fordencompra)
                ->setCellValue('F5', $stockactual)
                ->setCellValue('G5', $stockdisponible)
                ->setCellValue('H5', $responsable)
                ->setCellValue('I5', $codempaque);
        
        $objPHPExcel->getActiveSheet()->setTitle('Reporte de producto');
        $objPHPExcel->setActiveSheetIndex(0);
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($filename);

        header('Content-Description: File Transfer');
        header('Content-type: application/force-download');
        header('Content-Disposition: attachment; filename=' . basename($filename));
        header('Content-Transfer-Encoding: binary');
        header("Content-type: application/octet-stream");
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filename));
        ob_clean();
        flush();
        
        readfile($filename);
        unlink($filename);
    }

    public function detalladoContadoFormato2(){
        
        set_time_limit(1500);
        $baseURL = ROOT . 'descargas' . DS;
            $idActor = $_SESSION['idactor'];
            $fechaCreacion = date('Y-m-d_h.m.s');
            $basenombre = 'reporte_detalladodecreditos.xls';
            $filename = $baseURL . $idActor . '_' . $fechaCreacion . '_' . $basenombre;
            $get_condiciones = $_REQUEST['txtCondiciones'];
            $get_txtFechaInicio = !empty($_REQUEST['txtFechaInicio']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaInicio'])) : null;
            $get_txtFechaFin = !empty($_REQUEST['txtFechaFin']) ? date('Y-m-d', strtotime($_REQUEST['txtFechaFin'])) : date('Y-m-d');
            $cmtEtapa = $_REQUEST['lstEtapa'];
            $get_lstPrincipal = $_REQUEST['lstCategoriaPrincipal'];
            $get_lstCategoria = $_REQUEST['lstCategoria'];
            $get_lstZona = $_REQUEST['lstZona'];
            $get_lstRecepcionLetras = $_REQUEST['lstRecepcionLetras'];
            $get_txtIdCliente = $_REQUEST['txtIdCliente'];
            $get_txtIdOrdenVenta = $_REQUEST['txtIdOrdenVenta'];
            $get_lstMoneda = $_REQUEST['lstMoneda'];
            $get_lstEstado = $_REQUEST['lstEstado'];
            $get_cmbCondVencimiento2 = $_REQUEST['lstCondVencimiento2'];
            $get_cmbCondVencimiento3 = $_REQUEST['lstCondVencimiento3'];
            
            $get_txt2FechaInicio = ($get_txtFechaInicio == "") ? "Desde el prinicipio" : $get_txtFechaInicio;
            $get_txt2FechaFin = ($get_txtFechaFin == "") ? "Hasta el fin" : $get_txtFechaFin;

            $get_lstCategoriaPrincipal = $_REQUEST['lstCategoriaPrincipal'];
            
            $this->AutoLoadLib('PHPExcel');
            $objPHPExcel = new PHPExcel();
            $titulos = array('Nro', 'Padre', 'Monto', 'Saldo', 'Condicion', 'Nro Letra', 'Fecha Giro', 'F. Vencimiento', 'F. Pago', 'Situacion', 'Recepcion Letra');

            $sharedStyle5 = new PHPExcel_Style();
            $sharedStyle5->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID,
                    'color' => array('argb' => 'FFAECECC')
                ), 'borders' => array(
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                )
                    )
            );

            $sharedStyle4 = new PHPExcel_Style();
            $sharedStyle4->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID,
                    'color' => array('argb' => 'FFAA8888')
                ), 'borders' => array(
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                )
                    )
            );

            $sharedStyle3 = new PHPExcel_Style();
            $sharedStyle3->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID,
                    'color' => array('argb' => 'FFCCDDF7')
                ), 'borders' => array(
                    'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                ),
                'alignment' => array(
                    'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                )
                    )
            );

            $sharedStyle2 = new PHPExcel_Style();
            $sharedStyle2->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID
                ), 'borders' => array(
                    'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                )
                    )
            );

            $sharedStyle1 = new PHPExcel_Style();
            $sharedStyle1->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID,
                    'color' => array('argb' => 'FFCCCCCC')
                ), 'borders' => array(
                    'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                ), 'alignment' => array(
                    'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                )
                    )
            );

            $sharedStyle0 = new PHPExcel_Style();
            $sharedStyle0->applyFromArray(array(
                'fill' => array(
                    'type' => PHPExcel_Style_Fill::FILL_SOLID,
                    'color' => array('argb' => 'FF81BEF7')
                ), 'borders' => array(
                    'top' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                    'right' => array('style' => PHPExcel_Style_Border::BORDER_MEDIUM)
                ), 'alignment' => array(
                    'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                )
                    )
            );

            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setAutoSize(true);
            $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setAutoSize(true);
            $contador = 1;
            
            $complementotitulo = "";
            if ($cmtEtapa == 1) {
                $complementotitulo = " ANTES DE LA PANDEMIA";
            } else if ($cmtEtapa == 2) {
                $complementotitulo = " DESPUES DE LA PANDEMIA";
            }

            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':M' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":M" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "REPORTE - DETALLADO DE CREDITOS" . $complementotitulo);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador))->getFont()->setBold(true);

            $contador++;
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":C" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":O" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "Fecha Reporte:")
                    ->setCellValue('C' . ($contador), date('Y-m-d'));
            $contador++;

            //start cabecera
            $contador++;
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':M' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":M" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), $get_condiciones);
            $contador++;

            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':C' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('D' . $contador . ':F' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':I' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . $contador . ':M' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":M" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A' . ($contador), "FECHA DESDE")
                    ->setCellValue('D' . ($contador), "FECHA HASTA")
                    ->setCellValue('G' . ($contador), "REPORTE")
                    ->setCellValue('J' . ($contador), "ESTADO");
            $contador++;

            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':C' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('D' . $contador . ':F' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('G' . $contador . ':I' . $contador);
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('J' . $contador . ':M' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":M" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
            if ($get_lstEstado == 1) {
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $get_txt2FechaInicio)
                        ->setCellValue('D' . ($contador), $get_txt2FechaFin)
                        ->setCellValue('G' . ($contador), "CREDITOS")
                        ->setCellValue('J' . ($contador), ($get_lstEstado == 1 ? 'VENCIDAS ' . (!empty($get_cmbCondVencimiento2) ? (($get_cmbCondVencimiento2 > 90) ? ' (+90 dias)' : ' (' . $get_cmbCondVencimiento2 . ' dias)') : '') : ''));
            }
            if ($get_lstEstado == 2) {
                $filtroMensaje1 = "POR VENCER";
                if (!empty($get_cmbCondVencimiento3)) {
                    if ($get_cmbCondVencimiento3 <= 90) {
                        $filtroMensaje2 = " EN (" . $get_cmbCondVencimiento3 . ") DIAS";
                    }
                    if ($get_cmbCondVencimiento3 == 91) {
                        $filtroMensaje2 = " EN MAS DE 90 DIAS";
                    }
                }

                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $get_txt2FechaInicio)
                        ->setCellValue('C' . ($contador), $get_txt2FechaFin)
                        ->setCellValue('E' . ($contador), "CREDITOS")
                        ->setCellValue('G' . ($contador), $filtroMensaje1 . $filtroMensaje2);
            }


            $contador++;
            $reporte = $this->AutoLoadModel('reporte');
            $ordenGasto = $this->AutoLoadModel('ordengasto');
            $listado = $reporte->DetalladoContadoFormato2($cmtEtapa = "", $get_txtFechaInicio, $get_txtFechaFin, $get_lstPrincipal, $get_lstCategoria, $get_lstZona, $get_lstEstado, $get_cmbCondVencimiento2, $get_txtIdCliente, $get_txtIdOrdenVenta, $get_lstMoneda, $get_cmbCondVencimiento3, $get_lstCategoriaPrincipal);

            $tam = count($listado);
            $tempVendedor = -1;
            $tempOrdenventa = -1;
            $tempOrdenCobro = -1;
            $TotalCreditoSolesLima = 0;
            $TotalCreditoDolaresLima = 0;
            $TotalCreditoSolesProvincia = 0;
            $TotalCreditoDolaresProvincia = 0;

            for ($i = 0; $i < $tam; $i++) {
                $moneda = 'S/. ';
                if ($listado[$i]['idmoneda'] == 2)
                    $moneda = 'US $ ';
                if ($listado[$i]['idvendedor'] != $tempVendedor) {
                    $contador = $contador + 2;
                    $tempVendedor = $listado[$i]['idvendedor'];
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A' . $contador . ':B' . $contador);
                    $objPHPExcel->setActiveSheetIndex(0)->mergeCells('C' . $contador . ':M' . $contador);
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle3, "C" . ($contador) . ":M" . ($contador));
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "A" . ($contador) . ":B" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Vendedor: ")
                            ->setCellValue('C' . ($contador), $listado[$i]['vendedor']);
                    $contador++;

                    $tempOrdenCobro = $listado[$i]['idordencobro'];
                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":M" . ($contador));
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A' . ($contador), "Nº")
                            ->setCellValue('B' . ($contador), "RUC")
                            ->setCellValue('C' . ($contador), "CLIENTE")
                            ->setCellValue('D' . ($contador), "DEPARTAMENTO")
                            ->setCellValue('E' . ($contador), "DISTRITO")
                            ->setCellValue('F' . ($contador), "DIRECCION")
                            ->setCellValue('G' . ($contador), "ORD. VENTA (OV)")
                            ->setCellValue('H' . ($contador), "FECHA DE VENTA")
                            ->setCellValue('I' . ($contador), "FECHA DE EMISION CRED.")
                            ->setCellValue('J' . ($contador), "FECHA DE VENCIMIENTO")
                            ->setCellValue('K' . ($contador), "SITUACION")
                            ->setCellValue('L' . ($contador), "S/.")
                            ->setCellValue('M' . ($contador), "$");

                    $contador++;
                }
                if ($listado[$i]['idpadrec'] == 1) {
                    if ($listado[$i]['idmoneda'] == 1) {
                        $TotalCreditoSolesLima += $listado[$i]['saldodoc'];
                    } else {
                        $TotalCreditoDolaresLima += $listado[$i]['saldodoc'];
                    }
                } else {
                    if ($listado[$i]['idmoneda'] == 1) {
                        $TotalCreditoSolesProvincia += $listado[$i]['saldodoc'];
                    } else {
                        $TotalCreditoDolaresProvincia += $listado[$i]['saldodoc'];
                    }
                }

//                if ($listado[$i]['idordencobro'] != $tempOrdenCobro) {
//                    $contador++;
//                    $tempOrdenCobro = $listado[$i]['idordencobro'];
//                    $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle1, "A" . ($contador) . ":J" . ($contador));
//                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFont()->setBold(true);
//                    $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":J" . ($contador))->getFill()->setRotation(1);
//                    $objPHPExcel->setActiveSheetIndex(0)
//                            ->setCellValue('A' . ($contador), "Nº")
//                            ->setCellValue('B' . ($contador), "RUC")
//                            ->setCellValue('C' . ($contador), "CLIENTE")
//                            ->setCellValue('D' . ($contador), "ORD. VENTA (OV)")
//                            ->setCellValue('E' . ($contador), "FECHA DE VENTA")
//                            ->setCellValue('F' . ($contador), "FECHA DE EMISION CRED.")
//                            ->setCellValue('G' . ($contador), "FECHA DE VENCIMIENTO")
//                            ->setCellValue('H' . ($contador), "SITUACION")
//                            ->setCellValue('I' . ($contador), "S/.")
//                            ->setCellValue('J' . ($contador), "$");
//
//                    $contador++;
//
//                }

                switch ($listado[$i]['formacobro']) {
                    case '1': $formacobro = "Contado";
                        break;
                    case '2': $formacobro = "Crédito";
                        break;
                    case '3': $formacobro = "Letras";
                        break;
                }
                if ($listado[$i]['idmoneda'] == 1) {
                    $saldoSolesTemp = $moneda . number_format($listado[$i]['saldodoc'], 2);
                } else {
                    $saldoSolesTemp = 0.00;
                }

                if ($listado[$i]['idmoneda'] == 2) {
                    $saldoDolaresTemp = $moneda . number_format($listado[$i]['saldodoc'], 2);
                } else {
                    $saldoDolaresTemp = 0.00;
                }
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "A" . ($contador) . ":M" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("A" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('A' . ($contador), $listado[$i]['iddetalleordencobro'])
                        ->setCellValue('B' . ($contador), $listado[$i]['ruc'])
                        ->setCellValue('C' . ($contador), $listado[$i]['razonsocial'])
                        ->setCellValue('D' . ($contador), $listado[$i]['nombredepartamento'])
                        ->setCellValue('E' . ($contador), $listado[$i]['nombredistrito'])
                        ->setCellValue('F' . ($contador), $listado[$i]['direccion'])
                        ->setCellValue('G' . ($contador), $listado[$i]['codigov'])
                        ->setCellValue('H' . ($contador), $listado[$i]['fordenventa'])
                        ->setCellValue('I' . ($contador), $listado[$i]['femision'])
                        ->setCellValue('J' . ($contador), $listado[$i]['fvencimiento'])
                        ->setCellValue('K' . ($contador), $listado[$i]['situacionoc'])
                        ->setCellValue('L' . ($contador), $saldoSolesTemp)
                        ->setCellValue('M' . ($contador), $saldoDolaresTemp);
                $contador++;
            }

            $contador++;
            $objPHPExcel->setActiveSheetIndex(0)->mergeCells('K' . $contador . ':M' . $contador);
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "K" . ($contador) . ":M" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('K' . ($contador), "MONTOS TOTALES");

            $contador++;
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "K" . ($contador) . ":M" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('K' . ($contador), " ")
                    ->setCellValue('L' . ($contador), "SOLES")
                    ->setCellValue('M' . ($contador), "DOLARES")
            ;
            $contador++;
            if ($get_lstPrincipal == 1 || $get_lstPrincipal == '') {
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "K" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "L" . ($contador) . ":M" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('K' . ($contador), "LIMA")
                        ->setCellValue('L' . ($contador), 'S/. ' . number_format($TotalCreditoSolesLima, 2))
                        ->setCellValue('M' . ($contador), 'US $ ' . number_format($TotalCreditoDolaresLima, 2));
                $contador++;
            }

            if ($get_lstPrincipal == 2 || $get_lstPrincipal == '') {
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "K" . ($contador));
                $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "L" . ($contador) . ":M" . ($contador));
                $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
                $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
                $objPHPExcel->setActiveSheetIndex(0)
                        ->setCellValue('K' . ($contador), "PROVINCIA")
                        ->setCellValue('L' . ($contador), 'S/. ' . number_format($TotalCreditoSolesProvincia, 2))
                        ->setCellValue('M' . ($contador), 'US $ ' . number_format($TotalCreditoDolaresProvincia, 2));
                $contador++;
            }
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle0, "K" . ($contador));
            $objPHPExcel->getActiveSheet()->setSharedStyle($sharedStyle2, "L" . ($contador) . ":M" . ($contador));
            $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFont()->setBold(true);
            $objPHPExcel->getActiveSheet()->getStyle("K" . ($contador) . ":M" . ($contador))->getFill()->setRotation(1);
            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('K' . ($contador), "TOTAL")
                    ->setCellValue('L' . ($contador), 'S/. ' . number_format($TotalCreditoSolesLima + $TotalCreditoSolesProvincia, 2))
                    ->setCellValue('M' . ($contador), 'US $ ' . number_format($TotalCreditoDolaresLima + $TotalCreditoDolaresProvincia, 2));
            $contador++;

            $objPHPExcel->getActiveSheet()->setTitle('Reporte_Detallado_de_Creditos');
            $objPHPExcel->setActiveSheetIndex(0);
            $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
            $objWriter->save($filename);

            header('Content-Description: File Transfer');
            header('Content-type: application/force-download');
            header('Content-Disposition: attachment; filename=' . basename($filename));
            header('Content-Transfer-Encoding: binary');
            header("Content-type: application/octet-stream");
            header('Expires: 0');
            header('Cache-Control: must-revalidate');
            header('Pragma: public');
            header('Content-Length: ' . filesize($filename));
            ob_clean();
            flush();

            readfile($filename);
            unlink($filename);
    }

}

?>
